 pa universidade sÃo paulo
 instituto fÍsica sÃo carlos
 paralelismo visÃo natural e
 artificial
 odemir martinez bruno
 tese apresentada instituto física são
 carlos universidade paulo a
 obtenção título doutor ciências física
 aplicada física computacional orientador prof luciano fontoura costa
 departamento fÍsica informÁtica
 carlos
 bruno odemir martinez
 paralelismo visão natural artificial odemir
 martinez bruno carlos tese doutorado instituto física carlos orientador prof luciano fontoura costa
 visão cibernética computação paralela título
 esposa adriana meus
 pais orlando maria candida agradecimentos
 esposa adriana pais orlando maria candida pelo
 incentivo colaboração carinho prof luciano orientação científica amizade valiosas
 oportunidades aprendizado amigos colegas colaboradores alan salvany felinto jander
 moreira cooperação trabalhos referentes auxílio validação testes cvmp convivência pessoal luís augusto consularo conjunto auxílio nos
 testes cvmp amizade roberto césar marcondes junior conjunto projeto
 ynergos convivência pessoal cristina algodoal martins valiosas sugestões botânica pela
 amizade prof hilton thadeu zarate couto esalq-usp indicações e
 informações referentes herbários estação ecológica moji-guaçu instituto florestal estado paulo fornecimento amostras plantas arbóreas utilizadas neste
 especial eduardo amaral batista pesquisador chefe unidade e
 josé carlos lima auxiliar pesquisa wladerez caiado competência constante humor auxiliando longo questões burocráticas pessoal biblioteca instituto física carlos pela
 competência presteza colegas pesquisa visão cibernética pela
 amizade fraternidade cooperação produtivas discussões pa técnicos marcos roberto gonçalves alexandre rodrigues
 silva auxílio suporte professores pesquisadores pude aprender e
 debater direta indiretamente prestaram e/ou sua
 colaboração realização cnpq suporte financeiro finalmente deixar profundos agradecimentos instituto de
 física carlos universidade paulo infra-estrutura e
 excelente ambiente pesquisa científica honra estudar pesquisar trabalhar conhecer amigos resumo
 tese abordados maneira integrada aspectos paralelismo
 visão natural artificial discussões críticas diversas áreas
 relacionadas paralelismo discutido visual primatas como
 principais contribuições motivações incentivando incorporação de
 paralelismo sistemas visão artificial objetivos principais fornecer
 bases paralelismo desenvolvimento projeto pesquisa visão cibernética ifsc-usp visão versátil com
 forte motivação biológica baseada córtex visual primatas foi
 introduzida implementada proposta cvmp cybernetic vision message
 passage conjunto ferramentas desenvolvimento aplicações
 paralelas visão sistemas distribuídos máquinas
 multiprocessadores baseada programação orientada objetos interação
 homem-máquina engenharia software programação visual proposta prima
 desenvolvimento simples amigável cvmp testado avaliado e
 validado aspectos funcionalidade utilização da
 implementação paralela diversos algoritmos visão computacional de
 processamento imagens operadores locais transformada hough e
 transformada fourier quais ilustrar utilização da
 ferramenta discutidos termos arquitetura balanceamento carga apresentadas aplicações reais sistemas paralelos visão
 computacional implementadas cvmp demonstrando eficiência da
 ferramenta implementação paralela utilização cooperação aplicações integração atributos visuais projeto modelo complexidade base percepção humana desenvolvidas
 conjunto pesquisadores pesquisa visão
 cibernética aplicação apresenta proposta autor sistema
 automático reconhecimento plantas arbóreas botânica i
 ii
 abstract
 this thesis addresses integrated way the concept and usage of
 parallelism natural and artificial vision starts revising the primate visual
 system and discussing how its principles and solutions can extended to
 computational systems one the main objectives supply the parallelism
 backbone the development the cybernetic vision research group ifsc-usp versatile vision presenting a
 strong biological motivation especially regarding the primate visual cortex order
 achieve these objectives the cvmp cybernetic vision message passage had
 pa developed representing set simple and friendly paral tools computer
 vision applications distributed and paral multiprocessor systems which is
 based object oriented programming human-machine interaction software
 engineering and visual programming the cvmp tested evaluated and validated
 with respect functionality and utilization through the parallel implementation of
 several algorithms computer vision and image processing operators hough
 transform fourier transform etc which addition ustrating the tools are also
 discussed far their architecture and load balancing concerned three
 applications parallel computer vision systems real situations are presented and
 implemented using cvmp corroborating the effectiveness the tools the
 paral implementation usage and researcher integration two such applications
 visual attributes integration developed collaboration with other researchers the cybernetic vision research
 group the third application presents the author proposal automated
 system arboreal plants recognition botany iii
 iv
 Índice
 capÍtulo introduÇÃo paralelismo natural paralelismo visÃo artificial colunas objetivos tese organizaÇÃo tese capÍtulo computaÇÃo paralela hardware introduÇÃo princÍpios histÓricos computaÇÃo paralela evoluÇÃo eletrÔnica evoluÇÃo computaÇÃo seqÜencial evoluÇÃo paralelismo arquitetura escalar arquitetura pipeline vetorial arquitetura matricial arquitetura mimd computação distribuída taxonomia computadores classificação flynn sisd fluxo instrução fluxo dados misd múltiplos fluxos instrução fluxo dados simd fluxo instrução múltiplos fluxos dados mimd múltiplos fluxos instrução múltiplos fluxos dados taxonomia estrutural classificação duncan capÍtulo computaÇÃo paralela software introduÇÃo software modelo camadas paralelismo micro-mÁquina paralelismo nÍvel convencional paralelismo nÍvel operacional pa paralelismo nÍvel linguagens programaÇÃo linguagens programação alto alternativas paralelismo v
 mecanismos exploração paralelismo ferramentas passagem mensagem sistemas distribuÍdos pacote pvm biblioteca mpi pacote cvmp desenvolvimento software engenharia software avaliação testes programação orientada objetos interface gráfica usuário gui definição gui modelo camadas fundamentos programação gui programação visual análise estatística gargalos desempenho programas paralelos engenharia utilização capÍtulo caminhos paralelos visÃo introduÇÃo informaÇÃo evoluÇÃo visÃo evoluÇÃo paralelismo visÃo estudo cÉrebro visÃo especializações funcionais corticais análise multi-escala visualizando cérebro visão visão multidisciplinar introduÇÃo neurociÊncia nervoso neurônios caminho visual captando luz retina fotorreceptores retina sensorial interna campos receptivos retina conexões retina córtex núcleo geniculado lateral cÓrtex visual especialização funcional córtex visual níveis paralelismo vi
 divisões córtex visual Área Área Áreas organização córtex visual estratégias integração informação longo percurso visual pa integração informação hemisférios capÍtulo ynergos introduÇÃo projeto aprendendo natureza paralelismo distribuição processos troca mensagens alta resolução representação imagens hierarquia tráfego informação sentido duplo modularidade representação visual efetiva especialização processos integração múltiplos estágios visão foveal atenção seletiva integração níveis conhecimento maiores visão cibernética implementação requisitos necessidades modelo computacional sistemas modelos visÃo comparaÇÕes inteligente segmentação imagens positivos llis negativos llis llis versus visão mit massachussetts institute technology estrutura organização transferência dados aspectos computacionais modelo visão kosslyn modelo kosslyn seemore vii
 projeto
 ynergos paralelismo visÃo desafio capÍtulo cvmp introduÇÃo motivaÇÃo histÓria cvmp cybernetic vision message passage objetos cvmp aplicativos cvmp canais virtuais arquiteturas mimd arquitetura mimd distribuída mensagens tcp/ip socket troca arquivos comparação plataformas troca mensagens pa desempenho rede arquitetura mimd compartilhada funcionamento bÁsico cvmp programação modelo camadas disparador aplicaÇÕes launcher cvmp processor farm anÁlise desempenho estatÍsticas ferramentas análise estática ferramentas análise dinâmica componente visual operaÇÕes bÁsicas processamento imagens perspectivas cvmp capÍtulo estudos algoritmos paralelos visÃo sua
 implementaÇÃo cvmp introduÇÃo operadores locais canais cromÁticos transformada fourier transformada fourier transformada hough rastreamento arranjo acumulador backmapping restauraÇÃo imagens baseado campos randÔmicos markovianos estratégia paralelismo vii
 implementação resultados dimensÃo fractal capÍtulo aplicaÇÕes paralelas visÃo introduÇÃo integraÇÃo cor estÉreo projeto estruturação módulo aquisição módulo cor análise formas estéreo reconhecimento objetos controle critério avaliação funcionamento resultados distribuído paralelismo integração pesquisadores ynergos investigaÇÃo percepÇÃo humana complexidade formas experimento psicofísico webworm métodos considerados experimento via web algoritmo genético paralelo análise modelagem dados experimentais eficiência implementação paralela geração automática relatórios web treevis paralelo visÃo anÁlise reconhecimento arbÓreo levantamento arbóreo herbáreos pa coleta tratamento amostras classificação herbários herbários brasileiros proposta treevis protótipo treevis descrição treevis estrutura amostragem amostras base dados controle central extração características níveis cinza cor ix
 textura complexidade histograma treinamento identificação análise estatística implementação paralela resultados experimentais reconhecimento plantas arbóreas capÍtulo conclusÃo comentÁrios finais contribuiÇÕes sÍntese principais contribuiÇÕes pesquisas futuras estudos paralelismo visão natural artificial proposta cvmp aplicações paralelas reais visão artificial projeto proposta treevis bibliografia x
 lista figuras
 geraÇÕes computadores tÍpica pipeline instruÇÕes arquitetura risc benefÍcio proporcionado paralelismo arquitetura pentium arquitetura vetorial comparaÇÃo cÓdigos fortran diagramas arquiteturas computadores diagrama arquitetura computador cray diagrama arquitetura computador cray cray famÍlia computadores arquitetura matricial nÚmeros conchetes
 sÃo performances mÁximas estimadas mflops diagrama arquitetura computador illiac configuraÇÃo rede elementos processamento ep memÓria compartilhada versus memÓria distribuÍda organizaÇÃo memÓria cray diagrama blocos processador transputer ims pa distribuÍdo heterogÊneo classificaÇÃo flynn diagrama arquitetura sisd diagrama arquitetura misd diagrama arquitetura simd diagrama arquitetura mimd diagrama classificaÇÃo estrutural arquiteturas matriciais classificaÇÃo estrutural mimd classificaÇÃo duncan organizaÇÃo genÉrica camadas computadores grafo dependÊncia dados escalonamento tarefas comparaÇÃo operacional unix camada gui arquitetura operacional distribuÍdo amoeba camadas dce genealogia linguagens programaÇÃo comparaÇÃo parbegin/parend fork/join alternativas diferentes
 controlar execuÇÃo paralela almasi gottlieb Árvore execuÇÃo paralela disparos processos realizados a
 linguagem xi
 genÉrico aplicaÇÃo paralela coordenaÇÃo processos e
 dependÊncia dados ciclo vida clÁssico software concepÇÃo objeto aspecto visual gui modelo camadas gui diagrama comparativo camadas gui comparaÇÃo vazÃo fluxo encanamento o
 desempenho conjunto hardware/software mapa desempenho diferentes etapas programa eliminaÇÃo de
 gargalo atravÉs paralelizaÇÃo visÃo ciÊncia formada integraÇÃo muitas subdivisÕes nervoso costa divisÕes encÉfalo lobos sulcos corticais estrutura neurÔnio tÍpico ilustraÇÃo sinapse fenda sinÁptica dowling sinapses excitatÓria sinapses inibitÓria ppse ppsi modelo matemÁtico tÍpico cÉlula neural espectro radiaÇÃo eletromagnÉtica destaque porÇÃo visÍvel olho humano corte lateral mÚsculos sustentaÇÃo globo ocular globo ocular vista dorsal disposiÇÃo mÚsculos cavidade ocular corte retina mapa distribuiÇÃo vascular capilares mÁcula
 distribuiÇÃo cones bastonetes longo retina sensibilidade trÊs tipos cones retina primatas diagrama esquemÁtico fotorreceptores cones bastonetes tovÈe pa dowling campos receptivos cÉlulas ganglionares retina 
 excitaÇÃo regiÃo central inibiÇÃo regiÃo perifÉrica 
 inibiÇÃo regiÃo central excitaÇÃo regiÃo perifÉrica respostas
 movimentos caminho Óptico trajetÓria sinais visuais retina cÓrtex visual
 primÁrio diagrama estratÉgia mapeamento imagem longo caminho
 Óptico nÚcleo geniculado lateral hubel xii
 paralelismo multi-escala fatia cÓrtex visual apresentando Áreas zeki micrografia cÓrtex visual primÁrio dowling apresentando principais conexÕes camadas cÓrtex visual
 primÁrio hubel colunas dominncia ocular camada projeÇÃo marcadas dois
 deoxiglucose hubel diagrama ilustrando campo receptivo cÉlulas simples composiÇÃo a
 cÉlulas centro-periferia lgn respostas estÍmulos de
 diferentes orientaÇÕes zeki modelo hipercolunas hubel wiesel corte longitudinal cÓrtex estriado tratamento citocromo
 oxidase detalhe corte paralelo linha imagem apresentando as
 camadas estruturas claros sÃo zeki regiÕes macaco esquilo marcadas citocromo oxidase zeki comparaÇÃo campos receptivos regiÕes demonstrando aumento tamanho campo receptivo abstraÇÃo sentido
 nÃo ocorrer previsÃo trajeto campo receptivo relaÇÃo trajeto
 penetraÇÃo eletrodo regiÃo explorada trajetÓria eletrodo dimensÃo disposiÇÃo campos receptivos trajetÓria centros campos
 receptivos zeki mapa simplificado interconexÕes cÓrtex visual zeki shipp estratÉgias integraÇÃo sinal visual atravÉs aumento campo
 receptivo complexidade estÍmulo reta cÉlulas centro-periferia lgn
 cÉlulas simples cor projeÇÃo cÉlulas faixas
 finas finalmente observar pirmide projeÇÃo movimento enquanto cÉlulas sÃo estimuladas orientaÇÃo bordas
 independentes vetor direÇÃo ocorre integraÇÃo de
 modo cÉlulas sÃo capazes fornecer direÇÃo objeto zeki diagrama visÃo artificial clÁssico movimento olhos durante percepÇÃo face traÇos figura apresentam posiÇÃo regiÃo central olhos durante rastreamento a
 percepÇÃo imagem dowling importncia contexto percepÇÃo visual humana sejam mesmo
 tamanho imagem figura mulher direita da
 pa imagem dowling xii
 diagrama blocos modelo estrutural organizaÇÃo adaptado bruno costa diagrama blocos apresentando organizaÇÃo hardware cyvis atributo imagem estÁ sendo processado diferente
 mÁquina computadores estÃo conectados rede adaptado bruno costa modelo paralelismo adotado diagrama blocos llis regras modelo diagrama organizaÇÃo mÁquina visÃo mit regras modelo modelo camadas ynergos paleta componentes cvmp ambiente delphi conceito mestre/escravo conexÃo atravÉs canal virtual caixa simboliza objeto cvmp configurado mestre enquanto configurado escravo barra vertical representa canal virtual possÍveis configuraÇÕes utilizando canais virtuais aplicaÇÃo paralela arquitetura mimd distribuÍda grÁficos desempenho transferÊncia pacotes via rede cvmp
 usando protocolo tcp/ip cvmp usando transferÊncia arquivo atravÉs de
 chamada api utilizando protocolo netbeui comparaÇÃo resultados
 aplicaÇÃo paralela cvmp arquitetura mimd
 compartilhada mÁquina multiprocessada processadores diagrama ilustrativo mecanismo troca mensagens mimd
 compartilhado arquivo configuraÇÃo objeto cvmp principais primitivas troca mensagens implementaÇÃo algoritmo paralelo utilizando primitivas
 cvmp mÓdulo principal aplicativo cvmp-launcher janela principal janela configuraÇÃo diagrama ilustrativo estratÉgia paralelismo processor farm janelas object inspector delphi mostrando propriedades eventos
 objetos cvmp processor farm supervisor tprocfarmm4 escravo
 tprocfarms codificaÇÃo evento ontask componente escravo cvmp
 processor farm xiv
 codificaÇÃo eventos componente supervisor cvmp
 processor farm evento oninitask disparado atribuÍda tarefa
 processo escravo evento onendtask disparado escravo
 finalizou tarefa mÉtodo iniciar execuÇÃo processamento janela configuraÇÃo automÁtica distribuiÇÃo exibida
 atravÉs chamada mÉtodo config componente supervisor utilizaÇÃo componente tstat janelas aplicaÇÃo statviewer apresentando diferentes
 pa formas visualizaÇÃo blocos medidas linhas horizontais representam os
 processos paralelos formados blocos exprimem tarefas visualizaÇÃo blocos simples blocos pequenos linhas janelas aplicaÇÃo statonline apresentando medidas performance de
 aplicaÇÃo paralela processor farm mÁquinas escravas visualizaÇÃo
 blocos listagem medidas aplicaÇÃo paralela utilizando componentes tsobelpar estratÉgia paralelismo operadores locais unidades de
 processamento divisÃo imagem faixas divisÃo imagem em
 quadrilÁteros etapas iii representam respectivamente imagem
 original divisÃo imagem distribuiÇÃo processamento da
 imagem unidade processamento diferente reconstruÇÃo resultados e
 resultado processamento detalhes divisÃo imagem resolvendo dependÊncia dados uma
 mÁscara elementos linhas divisÓrias cinza variaÇÃo arquitetura processor farm adotada paralelismo do
 algoritmo operadores locais mestre alÉm distribuir tarefas
 tambÉm processa porÇÃo imagem diagrama ilustrando trocas mensagem balanceamento carga do
 filtro passa baixa comparaÇÃo tempo execuÇÃo algoritmo paralelo seqÜencial desempenho algoritmos paralelos comparaÇÃo porcentagem tempo consumido processamento e
 transmissÃo dados imagem comparaÇÃo performance rede diagrama ilustrando trocas mensagem balanceamento carga do
 mÁquina mestra configuraÇÕes seqÜencial paralelo mÁquinas xv
 paralelo mÁquinas tempo execuÇÃo mÁquinas comparaÇÃo versÕes seqÜencial paralela mÁquinas relaÇÃo
 nÚmero processadores parametrizado nÚmero pixels grÁficos desempenho funÇÃo nÚmero tamanho imagem redes
 sÃo homogÊneas sÃo baseadas ethernet formada mÁquinas comparaÇÃo tempo execuÇÃo experimento trÊs diferentes
 sistemas homogÊneos imagem estratÉgia paralelismo fft processos mÁquinas ou
 processadores estratÉgia paralelismo fft processos mÁquinas ou
 processadores tempos execuÇÃo seqÜencial modalidades paralelas e
 diferentes tamanhos imagem modalidades paralelas foram
 implementadas sistemas distribuÍdos mÁquinas porcentagem utilizaÇÃo recursos computacionais processamento
 matemÁtico processos relacionados transferÊncias dados pa grÁficos taxa desempenho speed funÇÃo tamanho imagem
 dado imagem quadrada grÁfico disco rÍgido disco rÍgido compactaÇÃo lzw ram ram compactaÇÃo lzw grÁficos taxa desempenho speed-up funÇÃo tamanho imagem simulaÇÃo arquitetura memÓria compartilhada processadores
 equivalentes amd versÃo seqÜencial desempenho memÓria compartilhada frente melhor
 caso arquitetura distribuÍda ram lzw demonstraÇÃo principais elementos envolvidos parametrizaÇÃo retas
 transformada hough espaÇo coordenadas original espaÇo de
 hough detecÇÃo retas atravÉs transformada hough imagem original arranjo acumulador espaÇo hough retas detectadas backmapping estratÉgia paralelismo transformada hough etapas iii representam respectivamente imagem original divisÃo imagem sua
 distribuiÇÃo processamento fragmento imagem arranjos acumulador
 resultante processamento fragmento somatÓrio elementos dos
 arranjos acumulador arranjo acumulador resultante diagrama ilustrando trocas mensagem balanceamento carga do
 xvi
 grÁficos tempo execuÇÃo funÇÃo nÚmero processadores com
 respectivas modalidades implementaÇÃo grÁfico definido mediante
 tamanho imagem porcentagem utilizaÇÃo recursos computacionais o
 processamento tÉcnica processos relacionados transferÊncias de
 dados linhas horizontais contÉm grÁficos relacionados tamanho da
 imagem enquanto linhas verticais nÚmeros processadores grÁficos taxa desempenho speed funÇÃo nÚmero de
 processadores grÁficos apresentam trÊs modalidades implementadas no
 experimento grÁfico correspondente tamanho imagem grÁficos apresentando tempo execuÇÃo relacionados tamanho da
 imagem apresentando comparaÇÃo diferentes versÕes de
 implementaÇÃo paralela sistemas distribuÍdos rede ethernet mb/s porcentagem utilizaÇÃo recursos computacionais o
 processamento tÉcnica processos relacionados transferÊncias de
 dados afins compactaÇÃo lista picos distribuÍdo mb/s distribuÍdo compactaÇÃo distribuÍdo lista picos grÁficos taxa desempenho speed grÁfico correspondente a
 tamanho imagem estratÉgia paralelismo tÉcnica rastreamento backmapping unidades processamento divisÃo imagem distribuiÇÃo dos
 fragmentos distribuiÇÃo arranjo acumulador resultante transformada
 hough iii processamento backmapping dados fragmentos da
 imagem arranjo acumulador transmissÃo arranjo acumulador gerado
 rastreamento processo mestre elementos arranjo
 serÃo somados constituindo resultado tÉcnica grÁficos tempo execuÇÃo funÇÃo nÚmero processadores porcentagem utilizaÇÃo recursos computacionais o
 pa processamento tÉcnica processos relacionados transferÊncias de
 dados taxa desempenho funÇÃo nÚmero processadores resultados tÉcnica restauraÇÃo imagem original corrompida ruÍdo gaussiano estratÉgia bÁsica paralelismo tÉcnica mrf estratÉgia bÁsica paralelismo tÉcnica mrf diagrama transferÊncia estruturas atualizaÇÃo diagrama transferÊncia estruturas atualizaÇÃo elementos processamento xvii
 exemplos balanceamento carga elementos processamento
 heterogÊneos diagrama execuÇÃo algoritmo mrf paralelo elementos de
 processamento diagrama execuÇÃo algoritmo mrf paralelo sistema
 heterogÊneo diagrama troca mensagens comparaÇÕes performance versÃo paralela seqÜencial grÁfico tempo execuÇÃo funÇÃo tamanho imagem grÁfico taxa
 desempenho funÇÃo tamanho imagem exemplos fractais tringulo sierpinski mandelbrot diagrama execuÇÃo mÁquinas integraÇÃo cor estÉreo estrutura modular
 moreira modelo arestas objetos constituem universo reconhecimento do
 cubo tetraedro prisma exemplos cenas reais quais realizou identificaÇÃo dos
 objetos moreira modelo arestas objetos constituem universo reconhecimento do
 cubo tetraedro prisma exemplos segmentaÇÃo mÓdulo cor imagem direita par estÉreo adquirida mÓdulo aquisiÇÃo resultado segmentaÇÃo mÓdulo cor
 mapas auto-organizÁveis segmentaÇÃo sobel finalidade comparativa segmentos retas detectados diferentes vistas mesma
 cena figura esquerda exemplos reconhecimento objetos coluna esquerda apresentada a
 imagem direita par estÉreo coluna direita modelo obtido objeto
 sobreposto modelo reconhecido banco dados pipeline estÁgios mÓdulos aquisiÇÃo cor estÉreo reconhecimento diagrama apresentado interaÇÕes webworm navegaÇÃo webworm diagrama ilustrativo estratÉgia paralelismo algoritmo genÉtico
 distribuÍdo arquitetura cvmp processor farm resultados correlaÇÃo algoritmo genÉtico modelos de
 complexidade utilizados referente combinaÇÃo linear logarÍtmica grÁficos apresentando tempo execuÇÃo implementaÇÃo paralela do
 pa algoritmo genÉtico xviii
 diagrama blocos apresentando mÓdulos compÕe treevis e
 respectivas conexÕes alinhamento imagem nervura principal folha
 deverÁ orientada vertical procedimento aquisiÇÃo imagem ampliada textura exemplo
 utilizada folha hymenea courbaril jatobÁ amostra completa ormosia arborea olho cabra ambiente grÁfico
 treevis esquerda direita sol sombra e
 imagem ampliada textura ambiente grÁfico usuÁrio treevis visualizaÇÃo de
 tÉcnicas mÉtodos processamento imagens visÃo visualizaÇÃo cÁlculo curvatura contorno folha cariniana
 estrellensis jequitibÁ obtida atravÉs detecÇÃo bordas imagem
 binarizada janela controle apresentando projeÇÃo contorno eixo grÁfico curvatura projeÇÃo grÁfico curvatura contorno
 3d nervuras folha consideradas transformada hough imagem
 segmentada nervuras consideradas transformada referÊncia do
 ngulo determinado anÁlise visualizaÇÃo domÍnio freqÜÊncia real imagem ampliaÇÃo de
 textura espÉcies diferentes apresentando diferenÇas caracterizam os
 descritores histogramas folhas diferentes espÉcies ilustrando variaÇÃo
 presente distribuiÇÃo histogramas treevis estratÉgia paralelismo processor farm treevis exploraÇÃo paralelismo atravÉs partiÇÃo mÓdulo
 extraÇÃo caracterÍsticas partes executadas simultaneamente em
 processadores diferentes treevis exploraÇÃo paralelismo atravÉs partiÇÃo mÓdulo
 extraÇÃo caracterÍsticas partes executadas simultaneamente em
 processadores diferentes grÁfico tempo execuÇÃo versÃo paralela processor farm nove
 amostras processadas grÁficos tempo execuÇÃo comparando versÕes paralela seqÜencial
 treevis execuÇÃo trÊs amostras versÃo paralela fragmentaÇÃo do
 mÓdulo extraÇÃo caracterÍsticas execuÇÃo amostra versÃo
 seqÜencial grÁfico tempo execuÇÃo versÃo paralela processor farm sistema
 distribuÍdo mÁquinas amostras processadas xix
 grÁficos tempo execuÇÃo comparando versÕes paralela seqÜencial
 treevis execuÇÃo trÊs amostras versÃo paralela fragmentaÇÃo do
 mÓdulo extraÇÃo caracterÍsticas execuÇÃo amostra versÃo
 seqÜencial xx
 lista tabelas
 tabela principais diferenÇas cÉlulas magno parvocelular tabela composiÇÃo citoarquitetural camada cÓrtex visual primÁrio pa tabela tipos variÁveis object pascal delphi memÓria utilizada tabela exemplos critÉrios obtidos termos tabela herbÁrios brasileiros nÚmeros exemplares peixoto barbosa tabela herbÁrios brasileiros detÊm informaÇÕes peixoto &
 barbosa tabela espÉcies utilizadas experimento tabela sÍntese principais contribuiÇÕes tese xxi
 xxii
 capÍtulo
 introduÇÃo
 think computer viruses should count life think says something about human
 nature that the only form life have created far purely destructive created life our own image stephen hawking
 capÍtulo introduÇÃo
 capÍtulo introduÇÃo
 paralelismo natural
 desconhecemos exata razão natureza evoluir diversos seres
 vivos sabemos entretanto resultado tornam mais
 adaptados consequentemente complexos devemos lembrar a
 adaptação compreende modelagem indivíduo físico mas
 relacionamento seres muitas competição entre
 espécies indivíduos fatores sejam relevantes adaptação de
 tais locomoção mecanismos alimentação dispositivos
 ataque predadores defesa presa importante a
 informação dela indivíduo locomover alimentar defender atacar enfim realizar integração decorrer bilhões inúmeros mecanismos desenvolvidos
 natureza seres vivos pudessem extrair informações mecanismos denominados sentidos estando presentes humano
 diferentes modalidades audição visão olfato paladar tato que
 determina eficácia sentido quantidade qualidade informações
 dele percebidas percepção ondas eletromagnéticas que
 natureza desenvolveu obras incríveis mecanismo mais
 poderoso sofisticado aquisição informação visão maneira obter informações a
 visão complexo processamento sinais imagens são
 convertidas informações compreensíveis indivíduo razoável um
 processamento intrincado sofisticado tenha elevado custo de
 fato animais possuem visão evoluída caso primatas cerca entretanto mundo competição sinônimo sobrevivência basta
 obter informação abundante qualidade necessário também
 seja adquirida tempo real condição das
 significar diferença vida morte seres
 pa vivos capÍtulo principal mecanismo encontrado natureza agilizar o
 processamento informações paralelismo prova disso natureza
 paralela distribuída visão primatas animais evoluídos contudo velocidade resposta paralelismo contribui verdade visão primatas paralelismo base de
 estruturação níveis propõem zeki shipp zeki shipp submódulos compõe paralelismo escolha realizada natureza longo da
 evolução iniciou aparecimento seres pluricelulares se
 pensarmos célula elemento individual processamento da
 vida vivo pluricelular composto estrutura processamento
 paralelo contexto paralelismo intensificando medida seres
 tornam complexos começam surgir tecidos órgãos culminando no
 nervoso central máquina processamento paralelo poderosa que
 conhecemos visão nervoso base estrutural do
 processamento fundada paralelismo podemos considerar paralelismo visão inicia órgãos
 responsáveis captação luz olhos possuem autonomia e
 independência operando concorrência paralelismo olhos acentua
 consideramos retinas possuírem hemisférios percepção
 autônomos campo visual direito esquerdo retinas possuem conjuntos de
 fotorreceptores cones bastonetes constituem início sistemas
 independentes captam informações distintas caminho parvo celular magno
 celular informação proveniente retina replicada distribuída diversas
 regiões córtex visual caracterizando massivamente paralelo com
 arquitetura distribuída constituído módulos independentes responsáveis pelo
 processamento informações específicas módulos constituem
 visual subdividido estruturas hierárquicas realizam
 processamento paralelo modo paralelismo apresenta-se visual
 multiníveis mostrando-se bases arquitetura fascinante universo visão reside objeto estudo
 tese multidisciplinar estudo paralelismo visão dos
 primatas inspiração possamos desenvolver sistemas paralelos de
 visão artificial eficientes introduÇÃo
 paralelismo visÃo artificial
 seja conhecimento neurociência sistemas biológicos
 visão estejam fundamentados estruturas distribuídas paralelas de
 processamento encontramos esperar visão artificial visão
 computacional mesma concepção fato observando literatura esse
 assunto extrema importância sido explorado tomarmos
 bases bibliográficas importantes poderemos constatar o
 paralelismo citado exemplo
 podemos sugerir famoso livro david marr consagrado ser
 bíblias marr citação obra
 pa importância paralelismo visão visão artificial seja cuja inspiração biológica é
 amplamente incentivada sabemos motivo lacuna incide sobre
 tema paralelismo podemos supor fatores responsáveis exclusão
 paralelismo bases visão artificial possibilidades o
 processamento seqüencial historicamente utilizado ciência computação
 resolver problemas contribuído paralelismo
 tenha sido abandonado visão artificial diferença elementos processamento natural biológico a
 velocidade processamento sendo neurônios lentos comparados a
 freqüência operação microprocessadores atuais existe necessidade
 intrínseca paralelismo realizar processamento tempo real este
 fator tenha levado crença contrário visão natural estudo de
 visão artificial tivesse necessidade preocupar assuntos de
 paralelismo futuro sistemas computacionais
 poderiam chegar possuir computacional suficiente efetuar métodos
 técnicas visão computacional processamento imagens tempo real entretanto devemos lembrar visão natural paralelismo possui apenas
 caráter possibilidade dificuldade desenvolvimento aplicações
 paralelas devido impopularidade computação paralela levando de
 ambientes desenvolvimento amigáveis necessidade profundo
 conhecimento computação paralela exigida programação sistemas
 computação complexos amigáveis fatores têm
 capÍtulo mantido computação paralela restrita especialistas sendo visão um
 assunto multidisciplinar envolvendo cientistas computação engenheiros matemáticos físicos biólogos neurocientistas alto custo
 aprendizado utilização técnicas computação paralela estariam
 conduzindo opção seqüencial seja possibilidade podemos concluir principal barreira que
 impõe abordagem paralela visão artificial dificuldade implementação
 paralela direcionamento ferramentas restrito dos
 especialista observando história computação vemos grande
 importância interação usuário/máquina simplificação modo tornar tecnologias fáceis utilizar auxiliar usuários
 inexperientes beneficia expertos hayes user interface programação visual programação orientada objetos cujo
 principal objetivo simplificar relacionamento homem máquina acreditamos principal solução ausência de
 paralelismo visão artificial eliminar barreira dificuldade utilização
 tecnologia computação paralela metodologias ferramentas que
 possibilitassem simplificação implementação aplicativos permitindo
 gama pesquisadores relacionados visão pudessem
 facilmente incorporar paralelismo projetos sendo problema paralelismo visão artificial transforma
 inserida seio ciência computação adoção paralelismo
 filosofia interação homem-máquina objetivando acesso fácil e
 pa amigável recursos computação paralela colunas
 paralelismo inerente visão natural possibilitando grande
 performance processamento tempo real bases integração os
 diferentes atributos visuais respectivos módulos zeki shipp livingstone hubel seguindo lições natureza estudo paralelismo visão artificial vital
 desenvolvimento modelos realísticos visão auxiliando na
 elaboração sistemas complexos permitam integração atributos
 introduÇÃo
 visuais cor estéreo textura etc diferentes técnicas visão assim
 execução tempo real performance condicionada
 filosofia paralela melhorias sistemas visão artificial adoção modelos
 realísticos vista biológico permite melhor compreensão dos
 sistemas visão natural consequentemente funcionamento cérebro como
 realimentação conhecimento constitui bases visão
 cibernética caracteriza estudo visão assunto multidisciplinar
 correlacionado tese fundada colunas estudo paralelismo em
 visão natural artificial proposta ferramenta desenvolvimento
 paralelo baseada interação usuário máquina facilite a
 implementação algoritmos paralelos visão compõe realizamos revisão discussão análise paralelismo visão natural artificial abordadas as
 bases paralelismo visão natural enfocando visão primatas visão artificial tratados possíveis benefícios paralelismo de
 sistemas paralelos visão concentrando assunto projeto cybernetic vision visão versátil desenvolvimento nosso
 zeki shipp zeki shipp sistemas visão natural arquitetura possui paralelismo inerente conforme discutimos seção anterior acreditamos principal razão
 impele utilização paralelismo massa visão computacional a
 dificuldade utilização implementação longo treinamento requerido a
 implementação paralela tentativa solucionar problema sobretudo
 pesquisa tese introduz nova
 metodologia implementação paralela baseada simplicidade utilização e
 programação reutilização código objetivos tese
 seção vamos apresentar leitor síntese principais objetivos
 permitindo perspectiva assuntos discutidos e
 abordados longo tese capÍtulo passo pretende realizar levantamento
 crítico abrangente diversas áreas relacionadas paralelismo visão
 natural artificial paralelismo visão artificial vinculado à
 computação paralela intencionamos realizar substancial revisão à
 pa computação paralela modo fornecer leitor bases discussões do
 assunto vista visão visão natural objetivo realizar uma
 revisão assunto culminando discussão paralelismo sistema
 visual primatas integração modalidades visão ocorre
 análise crítica sistemas visão artificial motivação
 biológica objetivos principais fornecer bases de
 paralelismo integração pesquisadores desenvolvimento projeto
 forte motivação biológica funcional córtex visual primatas proposta zeki shipp zeki shipp paralelismo visão cooperativo diversos pesquisadores
 envolvidos projeto viabilizar item anterior tentativa preencher lacuna do
 paralelismo visão artificial pretendemos desenvolver conjunto de
 ferramentas desenvolvimento simples amigável aplicações
 paralelas visão auxilie programadores conhecimentos em
 paralelismo expertos modo permitirá qualquer pesquisador de
 visão mínimo conhecimento programação utilização recursos de
 paralelismo projetos especialistas desenvolvimento ágil denominado cvmp cybernetic vision message passage conjunto de
 ferramentas voltado plataforma windows ambiente desenvolvimento delphi constituem bases de
 desenvolvimento computacional implementado necessário realizar avaliação validação do
 cvmp aspectos funcionalidade utilização dos
 objetivos implementação versões paralelas diversos
 algoritmos visão computacional processamento imagens dentre os
 algoritmos serão abordados casos clássicos visão processamento de
 imagens tais operados locais transformada hough hough introduÇÃo
 transformada fourier brigham mesmo vista paralelismo uma
 técnica segmentação inédita baseada campos aleatórios markov bruno &
 costa cvmp permitiu estudo comportamento eficiência e
 performance objetivo desenvolvimento situações reais visão artificial que
 utilizem recursos computação paralela cvmp serão
 apresentadas aplicações inéditas desenvolvidas estruturas de
 paralelismo integração atributos cor estéreo projeto experimento modelo complexidade baseado percepção humana
 projeto ynergos proposta herbário digital automático
 proposta treevis aplicações projetos em
 desenvolvimento pesquisa visão cibernética nos
 quais autor participam integrantes possibilitando a
 validação cvmp simplicidade utilização manuseio amigável como
 reutilização código integração pesquisadores aplicação
 pa apresenta protótipo proposta autor de
 reconhecimento automático plantas arbóreas intuito fornecer aos
 botânicos ferramenta complementar tradicionais herbários organizaÇÃo tese
 tese prossegue revisão conceitos básicos de
 computação paralela permitindo leitor familiarizar-se assunto no
 capítulo apresentados aspectos teóricos arquiteturas paralelas capítulo tema continua abordagem software capítulo realizada revisão visão natural enfoque no
 visão primatas capítulo complementado discussão do
 assunto prisma paralelismo capítulo apresentados sistemas
 visão artificial cibernética instituto dentre devemos destacar fortemente motivado inspiração biológica possui coluna dorsal o
 paralelismo sendo bases estudo capítulo
 será realizada análise comparativa capÍtulo artificiais encontrados literatura tese introduz conjunto ferramentas visuais simplificam a
 implementação aplicações paralelas denominado cvmp cvmp
 tenha sido idealizado visão computacional utilização genérica permitindo virtualmente qualquer programador delphi desenvolva uma
 aplicação paralela bastando conhecimento rudimentar paralelismo conjunto ferramentas cvmp apresentado discutido capítulo capítulo apresenta diversas técnicas métodos paralelos visão
 computacional processamento imagens desenvolvidos cvmp caso discutido abordando questões teóricas assunto os
 resultados implementação paralela comparação versões
 seqüenciais dentre técnicas apresentadas salientamos implementação
 paralela algoritmo segmentação imagens baseado campos aleatórios
 markov cuja metodologia desenvolvida capítulo apresentadas inéditas aplicações paralelas visão
 artificial implementadas cvmp delas protótipo do
 visão estéreo paralelismo seguinte discutido experimento de
 psicofísica realizado projeto ynergos visando obtenção um
 modelo medida complexidade baseado percepção humana última
 aplicação paralelo visão auxiliar levantamento e
 estudo plantas arbóreas florestas tropicais funciona herbário
 digital cuja proposta implementação introduzida tese finalmente tese concluída capítulo discutidas as
 contribuições possíveis pesquisas científicas ser
 realizadas continuação capÍtulo
 computaÇÃo paralela hardware
 ciência melhor conhecida história mesmo modo as
 pa maiores edificações apresentam bases sólidas capÍtulo computaÇÃo paralela hardware
 capÍtulo computaÇÃo paralela 
 hardware
 introduÇÃo
 partindo premissa ciência melhor conhecida sua
 história mesmo modo maiores edificações apresentam bases mais
 sólidas iniciamos capítulo revisão história computação
 paralela possamos base traçar perspectivas os
 avanços áreas importantes ciência computação seguindo
 princípio discorreremos evolução computação seqüencial a
 seguir apresentaremos evolução computação paralela abordando alguns
 elementos clássicos modo gerar bases melhor compreensão podemos deduzir título capítulo estaremos
 discutindo computação paralela vista hardware a
 abordagem histórica computação paralela apresentada seção na
 seguinte iremos tratar evolução eletrônica apresentar perfil tecnológico
 evolução hardware continuando trataremos seção evolução da
 computação seqüencial demonstrando tendências paralelismo nos
 computadores seqüenciais seção apresentaremos evolução da
 computação paralela jornada evolutiva principais
 arquiteturas convencionais finalmente concluímos capítulo apresentando
 métodos taxionomia computadores princÍpios histÓricos computaÇÃo
 paralela
 história computação paralela antiga história do
 computador moderno john von neumann criador arquitetura von
 neumann arquitetura fundamental computadores desenvolvidos
 capÍtulo desenvolveu trabalhos década discutiam possibilidade de
 algoritmos paralelos solução equações diferenciais breton podemos concluir história computação paralela transcorrendo
 paralelo história computação moderna poderemos
 observar aparenta evolução natural computação desmerecer contribuições importantes nomes história da
 computação blaise pascal goldstine breton computação moderna início projeto eniac electronic
 numerical integrator and computer goldstine década projeto eniac iniciou-se calculadoras coordenadores eckert mauchly estivessem dispostos inovar em
 projeto inicial eniac passava calculadora teoria utilizada
 semelhante máquina babbage mesmo pascalina em
 agosto rumo história mudaria infelizmente eniac fase adiantada e
 pa apresentaria muitas propostas revolucionárias von neumann ainda
 eniac computador eletrônico uso mesmo sendo
 precursor computadores modernos eniac possuía caráter paralelo disposto módulos independentes descentralizados e
 poderiam realizar operações simultaneamente john von neumann propôs organizar sistemas de
 computação deu origem arquitetura von neumann marcou início da
 computação moderna principais conceitos apresentados von neumann
 memória idéia programa armazenado influência direta das
 idéias von neumann nasceram computadores modernos
 memória história edvac projeto de
 computador moderno máquina ias binac edsac manchester mark i
 computador funcionar história computadores de
 caráter acadêmico militar porém sucessos fizeram logo
 começassem produzidos computadores comerciais fato curioso história liga novamente história
 computação paralela características inviabilizavam eniac
 aspecto paralelo diversas partes arquitetura funcionavam
 computaÇÃo paralela hardware
 independentes paralelo paralelismo necessária supervisão
 humana máquina possuía unidade central autômata breton princípios memória programa armazenado von neumann
 implementava máquina turing universal computador assumia
 papel genérico qualquer salvo limitações problema computável
 possuía programa capaz resolvê-lo controle centralizado tarefas seqüenciais definição computador
 moderno história computadores dividida partes vão
 caminhando simultaneamente primeiramente revolução tecnológica à
 medida eletrônica desenvolvia computadores poderosos velozes
 surgiam mesmo tempo avançava eletrônica intimamente ligada
 história computação ocorriam progressos computação em
 termos arquitetura computação ocorreram dois
 caminhos simultâneos computadores uso ou
 comerciais adotaram tradicional máquina von neumann arquitetura
 básica denominados supercomputadores necessidade velocidade inerente computação solução natural
 paralelização portanto supercomputadores projetos
 tentam alternativas arquitetura seqüencial von neumann buscam
 aumentar performance máquina paralelismo essas
 máquinas uso específico voltadas problemas determinados caráter
 científico evoluÇÃo eletrÔnica
 vista eletrônica história dividida partes
 gerações medida tecnologia eletrônica evoluía computadores
 velozes poderosos surgiam baseados tecnologia a
 velocidade comutação dispositivos aumentava geração outro
 tecnologias miniaturização integração evoluíam proporcionavam
 computadores menores tamanho porém de
 pa dispositivos processamento transistores memória figura apresenta um
 diagrama gerações respectivos períodos geração computadores 1938-1953 iniciou-se primeiros
 capÍtulo computadores pré-modernos máquinas calcular utilizavam dispositivos
 eletromecânicos reles estendeu-se surgiram primeiros
 computadores eletrônicos sendo fase período áureo geração a
 utilização válvulas desenvolvimento computadores eletrônicos neste
 período computadores possuíam arquitetura bit-by-bit existia o
 conceito palavra byte processador utilizava intervalo relógio para
 processar bit quinta
 quarta
 terceira
 gerações
 segunda
 primeira
 gerações computadores transistores inventados evolução eletrônica confecção computadores utilizando transistores marca
 geração computadores 1952-1963 computador utilizar
 tecnologia tradic construído bel laboratories tradic utilizava memória magnética época começam surgir linguagens alto-nível fortran inglês formula translation algorithmic language language processamento entrada saída dados geração computadores 1962-1975 surge aparecimento
 circuitos integrados ssi pequena escala msi média escala época
 surge memória estado sólido período linguagens alto-nível são
 computaÇÃo paralela hardware
 favorecidas compiladores inteligentes começam empregadas as
 tecnologias multiprogramação memória virtual geração surge microprocessador projeto de
 calculadora ted hoff intel projeta circuito integrado uso em
 calculadoras então nasce microprocessador microprocessador uma
 unidade central processamento construída único circuito integrado esse
 importante passo história surge então microcomputador somente a
 daqui computadores difundidos construídos larga escala inicia-se popularização informática pa surge geração computadores 1972 computadores utilizam circuitos integrados seções processamento
 memória surgem supercomputadores escalar vetoriais as
 extensões linguagens tradicionais fortran utilizarem novos
 recursos paralelismo sistemas operacionais geração
 utilizam compartilhamento tempo memória virtual final
 geração surge corrida paralelismo concentrando esforços das
 porções acadêmicas comerciais atual geração computadores geração aparecimento tecnologia integração vlsi época marca a
 continuidade corrida paralelismo surgem sistemas computação
 massivamente paralelos período marca fase áurea transputer microprocessador
 desenvolvido especificamente projetos computação paralela surgem estações tecnologia risc a
 adoção paralelismo computadores tradicionalmente seqüenciais atualmente microprocessadores convencionais tradicionais incorpora
 mecanismos paralelismo populariza-se conceito rede de
 computadores surge paralelização computação
 distribuída enfoque evoluÇÃo computaÇÃo seqÜencial
 meados computação passa uma
 fase confusa padrões estabelecidos fabricantes e
 capÍtulo pesquisadores iniciam diversos projetos distintos computador fica uma
 máquina uso específico destinado problemas bruno computadores começam proliferar generalizar seu
 uso história computação dividida duas
 partes computadores comerciais uso e
 denominados supercomputadores eram destinados
 normalmente problemas específicos voltados científica militar usualmente tinham requerimento básico velocidade computadores seqüenciais uso consenso adotou
 arquitetura von neumann padrão alterou meados da
 década sessenta arquitetura processadores alterada um
 passos rumo paralelismo conceito palavra byte anteriormente processador possuía arquitetura bit-by-bit deveria
 processar bit passo relógio conceito palavra única instrução possibilitava processador carregar palavra bits
 único passo clock juntamente avanços arquitetura software evoluía um
 passos aparecimento linguagens alto tornando a
 programação simples modo aumentando quantidade de
 programas mesmo modo aplicações uso geração observou-se unidade processamento
 ficava ociosa acesso dispositivos entrada saída dados a
 sendo acrescentadas unidades processamento nos
 dispositivos entrada saída dados aumento desempenho
 pa proporcionado abordagem aumentou motivação estratégia e
 dispositivos excluindo ucp unidade central de
 processamento ganhando unidades processamento independentes autômatas capazes trabalhar simultaneamente ucp abordagem deu
 origem conceito interrupção difundiu chegando sistemas de
 computação atuais mesmo sendo seqüenciais apresentam várias unidades de
 processamento microcontroladores podemos citar exemplos atuais desta
 abordagem controladores vídeo interfaces controle disco demais
 dispositivos armazenamento dados portas seriais mouse paralelas
 impressora controlador dma acesso direto memória série
 dispositivos incorporados atuais sistemas computação computaÇÃo paralela hardware
 gerações muitas melhorias beneficiaram o
 desempenho computadores enquanto eletrônica inovou circuitos mais
 rápidos potentes computação desenvolve sistemas melhorias arquitetura deixar computador poderoso veloz surgem então outras
 melhorias memória cache disco ram multitarefa multiprogramação a
 memória virtual gerações computadores utiliza-se circuito
 integrado resultado redução custo microcomputador
 popularize-se comece proliferar década microcomputador
 estaria consolidado consumo década microcomputador
 atinge ápice lançamento microcomputador ibm o
 microcomputador começa escalada rapidamente ocorre chamado
 fenômeno microcomputador ocupa lugares dos
 computadores porte tornem-se obsoletos início informática computadores eram programados da
 conexão cabos contato íntimo homem máquina tornaria
 computador fácil utilizado homem muitas
 descobertas invenções contribuíram evolução interfaces primeiro
 passo cartões perfurados seguir teríamos dispositivos assemelhavam máquinas escrever grande
 inovação contexto viria década uso terminal de
 vídeo adotava interface cli inglês command line interface bons
 exemplos unix vax-vms appledos ms-dos hayes durante década importante consórcio coordenou rumos
 computação década poderíamos narrar história da
 computação atual considerar importantes contribuições xerox seu
 centro pesquisas parc palo alto research center início década
 parc iniciou pesquisas tornar relacionamento homem a
 máquina íntimo durante década pesquisas parc chegou um
 denominamos atualmente gui inglês
 graphical user interface peddie mouse dispositivo apontador paradoxo orientação mensagens eventos
 adotado conceito orientação objeto viria marcar definitivamente os
 rumos computação década década bruno capÍtulo pa utilização interfaces gráficas gui tecnologias surgem estações popularizam redes de
 computadores redes computadores tenham longa
 história estações ocorreu sua
 popularização computação hardware estações trouxeram paralelismo para
 microprocessadores seqüenciais ocorreu inicialmente conceito de
 arquitetura risc inglês reduce instruction set computer geração de
 microprocessadores risc incorporava arquitetura pipeline gimarc milutinovic microprocessadores risc gimarc milutinovic tempo
 busca
 decodificação
 execução
 escrita
 instrução ciclo instrução instrução ciclo instrução instrução instrução ciclo instrução instrução instrução instrução ciclo instrução instrução instrução ciclo instrução instrução ciclo instrução ciclo fluxo instruções
 típica pipeline instruções arquitetura risc velocidade processamento alcançados novo
 conceito proporcionaram corrida desenvolvedores microprocessadores
 mundo paralelismo instrução atualmente vivemos forte
 tendência pesquisas arquiteturas paralelas sendo aproveitadas
 desenvolvimento microprocessadores se
 tornam paralelos geração perspectiva o
 microprocessador intel pentium podemos observar figura superou expectativa tecnológica desempenho graças utilização conceitos
 computação paralela atualmente microprocessadores
 pa comerciais incorporam pipeline mecanismos paralelismo seus
 microprocessadores convencionais ryan computaÇÃo paralela hardware
 desnsidade mips
 desempenho
 benefício do
 paralelismo
 desempenho
 esperado
 densidade
 desempenho/ mips
 densidade transistores
 milhões instruções segundo
 benefício proporcionado paralelismo arquitetura do
 pentium evoluÇÃo paralelismo
 década computadores eram projetados resolver
 problemas específicos porém apresentava obstáculo evolução da
 computação medida computação evoluía universo aplicações que
 poderiam utilizar computadores crescia computadores começaram úteis
 gama problemas tornava-se claro rumo dos
 fabricantes computadores desenvolver computadores uso genérico que
 possam utilizados diversas formas aplicações bruno ficou consagrada arquitetura von neumann os
 computadores seqüenciais demanda velocidade inerente computação os
 usuários ficaram satisfeitos generalização problemas grande
 caráter científico científico-militar exigiam desempenho
 computacional fornecido máquinas uso genérico resposta
 capÍtulo aumentar desempenho computadores clara paralelismo o
 paralelismo porém acarretaria custo diversos aspectos tais
 desenvolvimento hardware específico multiplicação recursos
 multiplicação custos consequentemente desenvolvimento software
 específico desenvolvimento personalizado utilizar vantagens produção
 massa mesmo sendo paralelismo resultado projetos onerosos existia
 nicho disposto pagar preço modo surge computação paralela ou
 supercomputação hockney jesshope presente eniac história computação moderna somente década sessenta computação paralela assume seu
 papel devido desempenho aplicações máquinas paralelas computação
 pa paralela passa denominada supercomputação demanda
 surgiram diversos projetos arquiteturas paralelas apresentando mais
 alternativas paralelização arquitetura escalar
 arquiteturas paralelas surgiram arquitetura
 escalar deu origem denominados computadores escalares rápidos a
 longa história desenvolvimento computadores escalares inicia-se década
 desenvolvimento prolonga-se década evolução dos
 computadores escalares basicamente semelhante história da
 computação paralela paralelismo surgindo evoluindo baseado máquinas convencionais computadores escalares denominados computadores
 pipeline hwang processamento duplicados diferença termos instrução os
 computadores escalares computadores vetoriais trataremos é
 tratamento dados instruções computadores escalares trabalham com
 dados individuais enquanto computadores vetoriais trabalham grande
 quantidade dados ordenados vetores instrução primeiros
 computadores escalares surgiram ibm computador influenciou história arquitetura em
 software atlas projeto tenha-se iniciado universidade de
 manchester volta computaÇÃo paralela hardware
 operacional multiprogramado aproximadamente transistores atlas dispunha dispositivos i/o processamento
 independente solicitava processador necessário do
 pioneirismo termos organização atlas incorporava paralelismo para
 aumentar desempenho computacional atlas utilizava bancos independentes memória permitiam
 acesso simultâneo único clock utilizando blocos atlas possuía
 arquitetura funcional unidades aritméticas modo em
 combinação arranjo memória poderia casos favoráveis executar instruções aritméticas único clock arquitetura
 funcional atlas possuía arranjo pipeline seguintes fases
 execução instruções busca instrução cálculo endereçamento busca
 operando execução aritmética melhor uso características paralelas múltiplas unidades
 aritméticas registradores memória recursos computacionais seria
 necessário previsse futuras instruções determinasse quais
 instruções poderiam executadas concorrentemente alterar lógica do
 programa atlas possuísse nenhum mecanismo previsão dois
 aspectos considerados posteriormente kel 1976 kuck 1978 e
 incluídos computadores escalares introdução gradual paralelismo funcional pipeline computadores
 seriais observada computadores control data
 empresa influência direta seymour cray computador cdc lançado funcional característica importante projeto modelo seguinte da
 pa control data tomaria cdc posteriormente máquinas supercomputadores de
 sucesso história possuindo parque época máquinas instaladas sucesso comercial computacional tão
 ibm conseguia superar concorrente ibm lançou sua
 corrida supercomputadores projeto stretch laboratório de
 computação científica los alamos pretendia projetar computador rápido ibm ibm capÍtulo supercomputadores série cdc eram imbatíveis supercomputadores ibm cdc ibm perdia parque computação científica rival resposta situação performance cerca cdc possuía unidades execução separadas operações números reais e
 cálculo endereçamento memória inteiro instruções eram executadas em
 paralelo arquitetura pipeline corrida continuaria desempenho cerca ibm comercial trouxe benefícios arquitetura computadores ibm utilizaria conceito memória caché zuffo sido utilizado vagaroso atlas lança ibm control data arquiteturas escalares poderíamos deixar citar as
 máquinas amdahl corporation companhia fundada gene amdahl chefe equipe arquitetura séria ibm computadores baseados arquitetura ibm serem compatíveis periféricos ibm poderiam utilizar software e
 operacional desenvolvidos máquinas ibm muito
 importante pois período fabricantes tomavam interfaces com
 dispositivos entrada saída segredos industriais empresas a
 amdahl quebraram segredos contribuíram história da
 portabilidade bruno tecnologia integração lsi máquina amdahl terço tamanho equivalente ibm arquitetura pipeline vetorial
 empresa cray research principal meta empresa era
 desenvolver supercomputador rápido mundo a
 cray estaria lançando computador rápido mundo 1976 revolucionando arquitetura supercomputadores e
 computaÇÃo paralela hardware
 virando página história computação paralela estágio evolucionário projetos cdc conceito arquitetura arquitetura vetorial problemas científicos freqüentes demanda
 pa computacional realizam algum modo operações matrizes vetores a
 estratégia paralelismo arquitetura vetorial exatamente princípio arquitetura vetorial diversos elementos processamento replicados e
 arranjados modo favorecer processamento estruturas dados vetoriais elementos controlados única unidade controle muitas
 única instrução feitas operações vetores inteiros figura apresenta esquema genérico arquitetura vetorial modelo apresentada arquitetura vetorial real elementos são
 realmente replicados prática idéia arquitetura vetorial verdadeira é
 transposta pipeline pipeline elementos replicados
 realmente ocorrendo então paralelismo temporal invés espacial almasi &
 gottlieb ucp
 ula
 ula
 ula
 m
 m
 m
 ucp unidade central processamento controle
 memória
 ula unidade lógica aritmética
 arquitetura vetorial software programador perceber diretamente o
 potencial arquitetura vetorial instruções arquitetura vetorial
 permite ocorram instruções voltadas vetores possam operar
 diretamente necessidade indexadores figura apresenta comparação códigos para
 multiplicação matrizes máquinas seriais podemos observar multiplicação realizada uma
 capÍtulo estrutura laço loop incrementa indexador vetores uma
 máquina vetorial única instrução realizada operação como
 podemos observar código paralelo escrito fortran almasi gottlieb código fortran seqüencial
 código fortran otimizado
 máquinas vetoriais
 comparação códigos fortran máquinas anteriores instruments advanced scientific computer projeto star processo gestação desenvolvida star operacional utilizasse arrojada arquitetura pipeline voltada para
 cálculos vetoriais star pa magnético tecnologia anterior memórias semicondutores devido ao
 atraso tecnológico acesso memória demasiadamente lento comparado com
 memórias semicondutoras fazia desempenho se
 equiparasse máquinas seqüenciais uso contemporâneas apenas
 vetores longos ordem centenas milhares elementos o
 código elaborado star rápido contemporâneos de
 uso projeto completo fracasso ocorrendo nenhuma
 venda comercial máquina vendidas máquinas haviam
 previamente sido encomendadas governo americano fato semelhante aconteceu tiasc projeto iniciou-se porém tecnologia obsoleta possuía desempenho tornou-se fracasso
 comercial texas instruments deu continuidade projeto máquinas
 vetoriais modo houve prosseguimento tiasc entanto projeto star completamente reconstruído tecnologia
 lsi entrou pequenas alterações ficou conhecido computaÇÃo paralela hardware
 máquina tornou-se competitiva lançamento estratégia adaptação recursos máquina genérica enquanto o
 otimizada cálculo vetorial cyber memória estrutura pipeline podia características uso revolucionária arquitetura vetorial seguiram caminhos semelhantes evolução replicação processadores cyber supercomputador época possuía performance pico gflop/s flop/s operações
 flutuante buffer de
 comunicação
 iop cpu add
 add
 add
 add
 iop mult
 mult
 mult
 mult
 cpu div
 div
 div
 div
 pa sqrt
 sqrt
 sqrt
 sqrt
 ória
 tilhada
 iop cpu m
 par
 me
 m
 co
 iop cpu unidade vetorial
 cpu iop cpu memória central
 iop cpu cpu unidade de
 serviço
 cyber cpus unidades processamento
 pipeline flutuante de
 iop portos entrada saída dados
 uso idênticas diagramas arquiteturas computadores figura apresenta diagrama arquitetura podia possuir unidades processamento desses
 processadores possuía mesma arquitetura apresentada figura portos entrada saída quais comunicação com
 capÍtulo periféricos padrão discos tapes rede memória compartilhada diagrama arquitetura computador cray figura apresenta diagrama arquitetura cray podemos
 observar registradores específicos vetores pipelines toda
 estrutura vetorial modelos baseados x-mp computaÇÃo paralela hardware
 multiprocessamento multiplicaram replicando processadores o
 pa cray x-mp lançado processadores processadores figura apresenta arranjo esquemático cray x-mp sua
 versão processadores podemos observar cray x-mp é
 duplicação recursos computacionais possui processadores cray x-mp cray apresentados elucidar evolução família porém núcleos
 permanecem exemplos arquitetura simd arquitetura
 vetorial intercom
 unidade de
 controle
 clock
 sincronizador
 buffer de
 instrução
 memória
 word
 1
 dor
 1
 dor
 y
 y
 a
 cessa
 a
 cessa
 cr
 ou
 cr
 pro
 pro
 e/s
 ssd
 discos tapes portos
 ou
 entradas
 pa diagrama arquitetura computador cray caráter tecnológico recebeu destaque projeto em
 comparação cray x-mp compactação utilização processadores com
 alta freqüência principais características devido fatores o
 cray x-mp porém dimensão reduzida restringia dissipação essa
 energia solucionar problema sofisticado refrigeração foi
 adotado circuitos processadores memória fontes ficavam
 imersos líquido inerte dielétrico fluorcarbono figura apresenta o
 capÍtulo computador aspecto inédito computador circuitos podiam observados imersos em
 líquido borbulhante vidro dando fictício computador cray atualmente cray research silicon graphics dando uma
 ênfase visualização científica computação gráfica utilização das
 máquinas científicas cray arquitetura matricial
 diferentemente arquitetura vetorial apresentava uma
 evolução lógica computadores seqüenciais voltada cálculo vetorial a
 arquitetura matricial marcou mudança radical concepção computação
 paralela arquitetura matricial nasceu basicamente único artigo de
 solomon acrônimo derivado operation linked
 ordinal modular network descreve matriz bidimensional x
 elementos processamento elementos contém uma
 memória controle única unidade controle fluxo instrução embora
 solomon tenha sido origem arquiteturas matriciais houve artigo
 anterior inspirado computador espacial publicado unger computaÇÃo paralela hardware
 unger 80-100 104 illiac iv
 phoenix
 1972 100 50 103 pepe
 bsp
 nasf
 1973 1979 pa 200-600 unger
 solomon
 staran
 mpp
 1958 1962 1970 1983 clip
 1976 10-30 dap
 1978 família computadores arquitetura matricial números
 conchetes performances máximas estimadas mflops conceito solomon tenha sido revolução arquitetura de
 computadores projeto construído exatamente descrito artigo
 pepe goodyear aerospace staran icl dap figura defesa americano arpa iniciou projeto computador baseado no
 solomon nascia então clássico illiac figura possuía
 quadrantes unidade controle interpretação instruções para
 elementos processamento flutuante elementos de
 processamento tinha memória processamento memória quadrante eram conectados uma
 matriz quadrantes eram conectados barramento paralelo o
 responsável interface unidade disco a
 unidade secundária projeto inicial possuísse quatro
 quadrantes illiac construído utilizando burroughs
 corporation capÍtulo entrada/saída
 barramento dados
 dados intruções
 muc
 uc
 barramento controle
 rede interconexão
 uc
 unidade controle
 pa muc
 memória unidade controle
 ep
 elemento processamento
 mep
 memória elemento processamento
 diagrama arquitetura computador illiac configuração rede elementos processamento ep despontava problemática software paralelo um
 amplo investimento software illiac possuísse próprio
 operacional linguagens programação específicas 
 tranquil glypnir derivadas algol actus derivada pascal e
 cfd fortran projeto illiac seguido pepe computador encomendado à
 burroughs finalidades militares computador científico comercial bsp e
 phoenix projeto nasa substituir illiac classificado como
 múltiplo-simd phoenix possuía basicamente máquinas illiac cada
 executava fluxo instruções controle única
 pa computaÇÃo paralela hardware
 unidade controle arquitetura matricial marcou computação paralela tornando
 incorporação muitas unidades processamento máquinas
 milhares contribuiu pesquisa software paralelo talvez
 venha desafio computação paralela arquitetura mimd
 termo mimd derivado inglês instructions multiple data é
 proveniente clássico artigo taxonomia computadores proposto flynn
 flynn ucp replicadas replicados pseudo-processadores ex elementos processamento arquitetura matricial existe controle
 único externo responsável fluxo instruções na
 arquitetura mimd entanto ucps unidade central processamento são
 inteiramente replicadas certos casos computadores inteiros modo a
 arquitetura mimd verdadeiramente coleção computadores formando uma
 única máquina paralela arquitetura mimd despontou início década devido queda de
 preço microprocessadores aumento performance a
 tecnologia vlsi arquitetura mimd demonstrou tecnologia
 integradora evolutiva arquiteturas simd prosseguimento de
 projeto tecnologias vetoriais matriciais acabaram tornar arquiteturas
 mimd replicadoras simd exemplos arquiteturas phoenix cray
 cray x-mp eta descritas anteriormente simd modo didaticamente
 evolutivo verdade máquinas mimd paralelizando simd a
 arquitetura mimd amadureceu chegando dias mais
 utilizada pesquisa comercialmente desafio projetos arquiteturas mimd exatamente na
 comunicação computadores casos processadores
 utilizados comerciais larga difusão uso genérico porém consolidação
 tendência mimd surgissem processadores específicos para
 projetos máquinas mimd podemos citar linha transputer inmos
 processadores processamento sinais texas instruments comunicação integração processadores podemos
 capÍtulo classificar arquitetura mimd basicamente memória compartilhada memória
 distribuída conforme apresenta figura diferença básica dois
 modelos enquanto sistemas memória compartilhada utilizam única
 memória acessível processadores utilizam trocar informações sistemas memória distribuída processadores
 possui memória inacessível utilizam troca de
 mensagens via rede barramento efetuar comunicação rede barramento
 p
 p
 p
 p
 p
 pa p
 memória
 m
 m
 m
 memória compartilhada
 memória distribuída
 memória compartilhada versus memória distribuída ucp seção porto a
 registradores
 a
 ucp
 sub-seções
 porto b
 de
 bancos
 rot
 móri
 lecionador
 registr de
 de
 me
 porto d
 se
 instrução
 da
 ída
 rtilha
 sa
 pa
 e
 om
 ção de
 da
 se
 ucp tra
 c
 en
 ór
 em
 porto a
 registradores
 m
 a
 ucp
 porto b
 de
 pa rot
 móri
 seção lecionador
 registr de
 de
 me
 porto d
 se
 instrução
 sub-seções
 bancos
 organização memória cray máquinas mimd memória compartilhada atuais podemos citar séries nec computaÇÃo paralela hardware
 apresenta diagrama arquitetura máquina cray memória compartilhada unidade flutuante
 vcc
 gnd
 capplus
 capm inus
 processador
 reset
 analyse
 serviços do
 bit
 errorin
 sistema
 error
 bootfromrom
 clockin
 serviços de
 linkspecial
 procspeed
 link
 link entrada
 timers
 interface link
 link aída
 link entrada
 interface link
 ram
 link aída
 pa kbytes
 interface link
 link entrada
 link aída
 procclockout
 link entrada
 interface link
 link aída
 notm interface
 notmemrd
 notmemrf
 memória
 memwait
 externa
 memconfig
 memória
 memreq
 memgranted
 diagrama blocos processador transputer ims máquinas mimd memória distribuída obtiveram atenção a
 metade década arquitetura mimd memória distribuída praticamente começou projeto cosmic cube caltech projeto
 introduziu pesquisa torno redes conexão processadores
 hipercubos almasi gottlieb processador microcomputadores pessoais integrava pares processadores 8086
 destinado desenvolvimento arquiteturas paralelas houve difusão
 pesquisa utilização arquitetura mimd devido fato ser
 especificamente voltado desenvolvimento sistemas paralelos transputer
 tornava projetos paralelos simples custos competitivos contar
 série ferramentas linguagens realizavam suporte de
 programação figura apresenta diagrama processador transputer
 capÍtulo inmos dentre universo máquinas mimd distribuídas podemos citar intel ipsc intel paragon cray baseadas transputer ex ibm victor ibm computaÇÃo distribuÍda
 década devido desenvolvimento proliferação da
 tecnologia redes computadores mesmo modo diminuição custo dos
 microcomputadores surgiu arquitetura paralela denominada de
 computação distribuída invés desenvolver hardware específico conceito
 computação distribuída utiliza computadores padrão conectados por
 rede computadores ethernet ficando mecanismo de
 paralelização responsabilidade camadas software tanenbaum pa sendo operacional sistemas operacionais
 distribuídos tanenbaum mensagens tais pvm geist cvmp apresentada tese velocidade comunicação redes computadores seja
 lenta mecanismos desenvolvidos hardware a
 simplicidade custo fizeram sistemas distribuídos viessem se
 tornar difundida utilização arquiteturas paralelas somando utilização
 comercial científica almasi gottlieb classificação flynn flynn considerada mimd memória distribuída almasi gottlieb mesma heurística arquitetura software ocorrem algumas
 máquinas arquitetura mimd compostas elementos de
 processamento arquiteturas paralelas diferentes cray único possuir diversas arquiteturas paralelas diferentes trabalhando
 juntas possuir característica heterogênea sistemas distribuídos
 possuir unidades processamento variáveis caracterizando utilização sistemas tolerantes falha caracterizar um
 aglomerado estações distribuído computação distribuída basta
 exista mecanismo integração máquinas desse
 computaÇÃo paralela hardware
 mecanismo troca mensagens sejam capazes realizar mesma tarefa
 diferentes partes mesma tarefa máquinas elementos de
 processamento distribuído varia indo mesmo
 milhares máquinas figura apresenta diagrama sistema
 distribuído heterogêneo juntos operar estações de
 diversas plataformas diferentes pcs estações risc como
 supercomputadores mimd simd conectados rede distribuído heterogêneo taxonomia computadores
 anteriormente descrevemos série tecnologias apresentadas com
 evolução tempo obviamente abordamos universo das
 arquiteturas paralelas traçamos perfil evolução da
 computação paralela intuito formar bases noções arquitetura
 computadores requeridas tese inúmeras possibilidades organização computadores como
 diversidade processadores geram necessidade classificação dos
 computadores encontrarmos famílias quais agrupadas melhor estudadas comparadas existem inúmeras propostas encontradas na
 literatura classificar diferentes arquiteturas organização dos
 capÍtulo computadores podemos citar flynn flynn jesshope seção vamos apresentar delas classificação flynn taxonomia estrutural de
 hockney classificação duncam pa classificação flynn divulgada literatura seja
 antiga originária artigo popularização tornaram-na importante taxonomia computadores permanecendo utilizada atualmente mesmo falhas dúvidas
 bogni marrone maiores detalhes tentativa realizar classificação abrangente proposta
 taxonomia estrutural hockney classifica computadores
 históricos seqüenciais paralelos atuais característica
 taxonomia estrutural diversidade classes seja bastante
 abrangente classificação conhecida utilizada apresentaremos
 sucintamente taxonomia estrutural seção surgimento tecnologias decorrer décadas de
 pesquisa houve diversificação arquiteturas computadores paralelos muitas quais poderiam classificadas taxonomia clássica tendo vista problema duncan propôs classificação extensiva à
 classificação flynn artigo survey parallel computer
 architectures duncan apresentando sucintamente proposta duncan seção classificaÇÃo flynn
 método classificação computadores inicialmente
 proposto flynn célebre artigo computing systems flynn seqüências instruções atuando seqüências de
 dados princípio básico funcionamento processador busca de
 computaÇÃo paralela hardware
 operandos memória principal seguindo execução instruções compostas
 operandos finalmente armazenamento resultados obtidos na
 memória sendo etapas distintas associadas processamento uma
 instrução constituem ciclo instruções modo ciclo instrução é
 composto encontrar endereço instrução
 buscar instrução
 decodificar instrução
 gerar endereços referentes operandos
 executar instrução
 armazenar resultados
 visualização seqüência execução instruções ser
 comparada fluxo corrente fluxo instruções dirigi-se memória para
 processador execução instruções solicitados dados armazenados memória cuja visualização igualmente comparada um
 fluxo corrente fluxo dados fluxo dados possui dupla
 corrente indo memória processador processador a
 memória fluxo dados
 simples
 múltiplos
 pa de
 simples
 sisd
 simd
 fluxo de
 instruções
 múltiplos
 misd
 mimd
 classificação flynn baseado fluxo instruções fluxo dados michael flynn
 realizou classificação computadores sugerindo combinações classes de
 fluxos dados versus fluxo instruções combinações flynn
 sugeriu classes computadores fluxo instrução fluxo de
 dados sisd inglês instruction stream single data stream fluxo
 capÍtulo instrução múltiplos fluxos dados simd inglês instruction
 stream multiple data stream múltiplos fluxos instrução fluxo dados misd inglês instruction stream single data stream múltiplos fluxos
 instrução múltiplos fluxos dados sisd inglês instruction
 stream multiple data stream figura apresentaremos casos seguir diagrama
 correspondente arquitetura classificada diagramas mostrados
 serão apresentadas espécies componentes unidade de
 controle uc unidade processamento up memória figuras unidade controle uc responsável decodificação instruções
 envio instruções decodificadas processador unidade processamento up executa instruções armazena os
 resultados memória memória armazena dados componentes serão apresentados fluxos
 dados fd fluxos instruções fi observando figuras devemos notar fluxo instruções gerado unidade
 controle independente sisd fluxo instruÇÃo fluxo de
 dados
 classe sisd classifica arquiteturas convencionais von
 neumman seja computadores seqüenciais compõem do
 parque atualmente microprocessadores atuais sisd
 possuam unidade funcional pipeline instrução gimarc &
 milutinovic única unidade controle classificando-os modo sisd figura
 computaÇÃo paralela hardware
 fi
 uc
 fi
 pa up
 fd
 m
 diagrama arquitetura sisd misd mÚltiplos fluxos instruÇÃo um
 fluxo dados
 figura apresenta diagrama conceptual arquitetura
 misd existe implementação real tipo arquitetura ocorrendo então falha classificação modelo flynn almasi gottlieb fd
 uc
 mn
 fin
 upn
 fd
 fin
 diagrama arqui etura misd capÍtulo simd fluxo instruÇÃo mÚltiplos
 fluxos dados
 up
 fd
 up
 m
 uc
 fi
 up
 fdn
 n
 mn
 fi
 pa diagrama arquitetura simd classe simd corresponde computadores matriciais vetoriais conforme podemos observar figura existem elementos de
 processamento sendo supervisionados única unidade controle todos
 elementos processamento recebem mesma instrução transmitida pela
 unidade controle porém operam instruções distintos fluxos dados prática classificação simd levanta dúvidas polêmicas na
 literatura podemos encontrar autores classificam máquinas vetoriais
 pipeline ex jesshope computaÇÃo paralela hardware
 mimd mÚltiplos fluxos instruÇÃo e
 mÚltiplos fluxos dados
 fi
 fi
 uc
 fin
 fin
 fdn
 upn
 mn
 fin
 diagrama arquitetura mimd figura apresenta diagrama conceptual arquitetura mimd a
 sistemas paralelos atuais classificados categoria gerando modo sobrecarga classe abrange as
 máquinas multiprocessadores memória compartilhada sistemas
 multicomputadores memória distribuída modo organização da
 memória classe mimd diretamente dividida mimd memória compartilhada e
 mimd memória distribuída figura capÍtulo taxonomia estrutural
 pa computadores
 Único fluxo instrução
 múltiplo fluxo instrução
 Única unidade
 execução
 aritmética de
 aritmética de
 mimd
 inteiro
 flutuante
 figura serial paralelo n-bit
 computadores
 computadores
 computadores
 seqüenciais de
 seqüenciais de
 seqüenciais de
 bit serial
 bit paralelo
 flutuante
 ibm ibm múltiplas unidades
 execução
 pipelined
 pipeline
 computadores
 matriciais
 figura somente instruções
 instruções
 escalares
 vetoriais
 computadores
 múltiplas
 unidades
 escalares
 controle
 issue-when-
 pipeline
 pipeline
 horizontal
 ready
 uso específico
 uso geral
 cdc pa computadores
 computadores
 computadores
 computadores
 pipeline
 pipeline
 pipeline
 pipeline
 escalar
 escalar
 escalar
 escalar
 horizontal
 horizontal
 cdc cyber fps cray diagrama classificação estrutural taxonomia estrutural proposta hockney jesshope classificação abrangente computadores seqüenciais quanto
 paralelos figuras apresentam diagrama da
 classificação correspondem respectivamente classificação máquinas
 matriciais mimd estratégia utilizada classificação divisão dos
 computadores grupos computadores único fluxo de
 instrução computadores diversos fluxos instrução primeira
 etapa separado universo computadores mimd diversos fluxos de
 instrução único fluxo instrução seriais simd classe dos
 computaÇÃo paralela hardware
 computadores único fluxo instruções então dividida única unidade de
 execução múltiplas unidades execução classe agrupa os
 computadores seqüenciais clássicos classe computadores múltiplas
 unidades execução dividida pipeline máquinas matriciais múltiplas
 unidades execução pipeline divisão podemos notar grande
 abrangência taxonomia estrutural observando classificação classe pipeline
 matricial diagrama classificação máquinas matriciais apresentado na
 figura máquinas matriciais divididas classes máquinas com
 unidades execução flutuante máquinas unidades execução
 bits computadores ortogonais associativos processador
 matricial
 unidade de
 unidade de
 execução de
 execução com
 flutuante
 bits
 pa desconectado
 conectado
 conectado x
 desconectado
 conectado
 memória ortogonal
 conjunto de
 matriz de
 matriz proc computador
 matriz de
 mputador
 processadores
 processadores
 flutuante
 associativo
 processadores
 ortogonal de
 ponto
 ponto
 conectados em
 bits
 bits
 flutuante
 flutuante
 x
 staran
 icl p
 omen
 pepe
 illiac iv
 bsp
 arquiteturas matriciais comentamos anteriormente divisão taxonomia
 estrutural separa computadores mimd classes computadores
 mimd apresentadas diagrama continuação figura diferentemente divisão memória distribuída memória compartilhada denotação largamente utilizada literatura taxonomia estrutural de
 hockney divide máquinas mimd primeiramente máquinas com
 comutadores máquinas redes máquinas mimd memória
 compartilhada tornam-se então subclasse máquinas comutadores capÍtulo devemos observar novamente divergência classificação grupos
 topologia caso redes diferentes classes as
 diferentes estruturas comutadores classes máquinas com
 comutadores mimd
 macro pipeline
 comutado
 pa rede
 chip
 cray x-mp
 cray crossbar
 midas
 reconfigurável
 memória
 multi-estágio
 ultra
 compartilhada
 anel
 barramento
 c
 c
 c
 malha
 minerva
 multidimensional
 elxsi
 m
 m
 m
 cosmic
 intel ipsc
 hipercubo
 n-cube
 cubo
 crossbar
 empress
 conectado
 memória
 multi-estágio
 ciclicamente
 pasm
 distribuída
 barramento
 pringle
 nc-tree
 Árvore
 hierárquica
 c
 c
 c
 x-tree
 m
 m
 pa m
 egpa
 pirâmide
 m
 memória
 aglomerado
 c
 computador
 classificação estrutural mimd classificaÇÃo duncan
 duncan duncan computação paralela devido proliferação popularização recentes
 descobertas proliferação tecnologia processamento paralelo introduziram
 arquiteturas contexto computação paralela modo tornou-se
 difícil compreensão classificação arquiteturas paralelas baseadas na
 taxonomia clássica flynn tentando resolver problema classificação máquinas paralelas
 computaÇÃo paralela hardware
 duncan propôs taxinomia baseado seguinte conjunto imperativos excluir arquiteturas utilizem somente mecanismos paralelismo baixo-
 comuns microcomputadores atuais pentium risc etc continuar adotando elementos baseados fluxo dado instruções da
 classificação flynn incluir processadores vetoriais pipeline arquiteturas intuitivamente
 deveriam receber mérito pertencer classes computadores paralelos conforme vimos anteriomente classificação flynn arquiteturas são
 classificadas sisd simd autores figura apresenta diagrama classificação sugerida duncan arquiteturas divididas classes síncronas assíncronas mimd e
 convencionais classe síncrona contém extensão classe simd de
 flynn classe pertencer arquiteturas simd formalmente
 inseridas arquiteturas vetoriais arquiteturas sistólicas duncan processadores matriciais memória associativa não
 síncronas
 convencionais
 mimd
 vetorial
 simd
 sistólica
 memória
 memória
 compartilhada
 distribuída
 processadores
 memória
 matriciais
 associativa
 pa mimd/simd
 dataflow
 redução
 frente onda
 classificação duncan classe arquitetura mimd assíncrona permaneceu mesmas
 capÍtulo subdivisões clássicas memória compartilhada distribuída duncan porém
 apresenta classe atender arquiteturas modernas classe
 arquiteturas convencionais classifica paradigmas introduzidos à
 arquitetura paralela sejam derivadas arquitetura mimd as
 arquiteturas híbridas mimd/simd dado non-von almasi gottlieb multiprocessing system duncan implementações assíncronas arranjos sistólicos kung dados mdm manchester dataflow machine almasi gottlieb tagged token dataflow duncan classificação convencional capÍtulo
 computaÇÃo paralela software
 medida paralelizamos algoritmos multiplicamos problemas pensamento autor capÍtulo computaÇÃo paralela software
 capÍtulo computaÇÃo paralela 
 software
 introduÇÃo
 capítulo anterior abordamos computação paralela sistemas
 distribuídos prisma hardware iremos discorrer mesmo
 assunto vista software software importante conceito
 abstrato responsável base ciência computação somente partir
 conceito programa armazenado software proposto john von neumann
 meados definitivamente capítulo super calculadoras história ciência da
 computação conceito abstrato software programa permitiu aparecimento dos
 computadores uso genérico máquinas parecidas hoje
 denominamos eram construídas fins específicos da
 teoria computabilidade penrose computadores passaram resolver qualquer problema fosse
 computável bastando alterar conteúdo memória de
 programa pareça trivial conceito solidificou bases computação
 moderna construindo história computação paralela maiores desafios desenvolvimento de
 pa software paralelo atualmente pesquisa computação paralela
 encontra-se destinada aspecto casos paralelismo seja
 realizado unicamente hardware ficando transparente camadas software
 ex pipeline sistemas distribuídos a
 abstração máquinas virtuais mecanismos paralelismo inteiramente realizados software trataremos capítulo conceito software linhas gerais em
 níveis máquina figura enfocando principalmente exploração do
 paralelismo níveis iniciaremos discussão conceito software depois
 capÍtulo apresentaremos modelo camadas computador moderno uma
 camadas discutiremos atuação software exploração de
 paralelismo finalmente concluiremos capítulo apresentando
 conceitos ferramentas voltados desenvolvimento utilização de
 software software
 aproveitando característica multidisciplinar tese vamos apresentar
 parábola ilustrar melhor distinção software hardware nos
 computadores comparando-os sistemas nervosos biológicos mais
 especificamente cérebro humano paralelo homem e
 máquina podemos denominar hardware características físico-químicas
 neurônios células nervosas compõem nervoso seguindo mesma linha raciocínio software de
 aprendizado sabemos aprendizado vital funcionamento do
 cérebro responsável definição modo processamento
 realizado diferentes regiões cerebrais hardware modo podemos software determina modo manipulação
 hardware podemos concluir aprendizado software parte
 física cérebro hardware aglomerado células caro
 leitor jamais estaria lendo tese vamos continuar discussão capítulo entretanto a
 finalidade simples comparação ilustrar importância software embora
 extremamente dependente bases hardware sofisticação evolutiva
 instinto decisão razão sentimento etc fica responsabilidade software mesmo ocorre computadores necessite físico
 hardware concretizar-se software elemento responsável pelo
 comportamento máquina dele computadores modernos são
 capazes executar funções observamos importância vamos definição software
 definido abstração compreendida algoritmos instruções dados informações responsáveis controle supervisão manipulação do
 hardware podemos observar modelo camadas apresentado na
 computaÇÃo paralela software
 figura muitas limiar software hardware sutil de
 modo diferenciação determinados níveis máquina bastante
 complexa entanto termos gerais podemos definir hardware parte
 pa física computador software abstração responsável sua
 manipulação modelo camadas
 importante conceito devemos levar conta organização dos
 computadores vinculação camadas software hardware do
 modelo camadas tanenbaum composições hardware software levando conta hardware software
 definirmos computadores estamos acrescentando conceito plataforma modo mesma máquina função camadas software
 principalmente operacional pertencer diferentes plataformas bom
 abordagem computadores pessoais hardware
 seja mesmo máquina pertencer diferentes plataformas modo
 modificar comportamento bastando alterar operacional
 ex unix windows windows passa constituir arquitetura computadores linguagem alto nível
 tradução compilador linguagem assembly
 tradução assembler re
 wa
 operacional
 ft
 interpretação parcial
 so
 operacional convencional
 interpretação microprograma are
 microprogramação
 dw
 execução microprogramas
 har
 diretamente hardware
 hardware
 organização genérica camadas computadores capÍtulo figura ilustra clássica divisão camadas organização dos
 computadores proposta tanenbaum tanenbaum variar computador computador camadas quanto
 diferença figura representa-se típico computador cisc do
 inglês complex instruction set computer gimarc milutinovic observar desempenho camada afetado diretamente pelas
 camadas inferiores camada modelo apresentado figura representa
 hardware seção abordaremos paralelismo contido camada discutido capítulo anterior camada é
 constituída micromáquina microprogramação computadores cisc compete micromáquina controlar recursos hardware modo cada
 pa instrução convencional processada interpretada dividida pela
 unidade controle microinstruções micromáquina apresenta memória
 especial denominada memória controle tabela controle são
 armazenados sinais controle microinstruções convertidas sinais tabela controlam diretamente hardware camada
 possua conceito programa geralmente classificamos software transparente programador discutiremos sucintamente seção
 abordagens paralelas utilizadas camada camada composta convencional conhecida
 linguagem máquina convencional realizada interface
 software hardware camada constituída conjunto de
 instruções processador registradores dispositivos funcionais alus deslocadores etc espaço endereçamento recursos de
 hardware programador interpretação instruções sua
 execução microprogramação realizado processamento memória interrupções processos entrada saída periféricos apresentaremos o
 paralelismo convencional seção camadas seguintes operacional linguagem assembly e
 linguagens alto constituem camadas software iremos tratar
 assuntos seções finalizaremos discussão modelo camadas bibliotecas de
 troca mensagens assunto seção apresentaremos das
 principais ferramentas disponíveis atualmente introduziremos a
 computaÇÃo paralela software
 ferramenta cvmp decorrer tese paralelismo micro-mÁquina
 compete micromáquina controlar recursos hardware dos
 sinais enviados controle micromáquina
 interpreta instrução executada convencional transforma em
 microinstruções micromáquina apresenta memória especial denominada de
 memória controle armazenados sinais controle as
 microinstruções organizadas campos bits chamados de
 microordens especifica sinal produzido de
 executar hardware mesmo apresentando conceito programa podemos caracterizar a
 micromáquina camada software pois programação ser
 alterada hardware completamente transparente usuário modo a
 programação micromáquina realizada fabricante hardware como
 estamos tratando paralelismo software seção entraremos em
 detalhes implementação paralelas microprogramação micro-ordens
 pa trecho micro-ordens
 grafo dependência dados
 grafo dependência dados máquinas microinstruções verticais hwang capazes executar diversas microinstruções simultaneamente a
 capÍtulo heurística exploração paralelismo consiste basicamente verificação da
 dependência dados algoritmo percorrer as
 microinstruções verificar quais poderão executadas paralelo gerando um
 grafo execução figura apresenta mostrando de
 microinstruções respectivo grafo observa-se devido dependência de
 dados microinstrução executada seqüencialmente paralelismo nÍvel convencional
 camada convencional conhecida linguagem de
 máquina denominação seja incorreta tanenbaum camada realiza interface software hardware é
 caracterizada conjunto instruções processador registradores dispositivos funcionais alus deslocadores etc espaço endereçamento e
 recursos hardware programador possamos discutir paralelismo convencional ponto
 vista registradores dispositivos funcionais espaço endereçamento etc vamos enfocar discussão conjunto instruções compõe linguagem de
 máquina exploração paralelismo camadas inferiores convencional
 ocorre completamente transparente programador disso são
 máquinas pipeline instrução vista programador as
 instruções linguagem máquina executadas seqüencialmente porém a
 unidade controle realiza paralelismo hardware pipeline fazendo
 diversas instruções possam sendo executadas simultaneamente independentemente conhecimento controle programador existe determinado tipo máquina de
 paralelismo transparente programador convencional caso
 máquinas múltiplas unidade funcionais máquinas
 escalares cdc paralelismo hardware somente explorado ocorre
 dependência dados instruções figura ficando a
 responsabilidade programador mesmo compilador tarefa gerar o
 código linguagem máquina otimizado principal estratégia paralelismo convencional é
 computaÇÃo paralela software
 encontrada arquiteturas vliw inglês long instruction word amorin
 tipo máquina possui instruções palavras longas e
 exploram paralelismo hardware replicação recursos ucp
 unidade central processamento pa arquiteturas vliw constituídas única unidade central de
 processamento projetadas executar instruções seqüencialmente mesmo modo ocorre tradicional máquina von neumann o
 paralelismo máquinas porém contido instrução que
 contém informação suficiente explorar potencial paralelo suas
 unidades funcionais replicadas devido complexidade instruções possuem
 capacidade especificar unidades funcionais irão executar seus
 respectivos operandos paralelismo nÍvel sistema
 operacional
 operacional camadas compõem um
 computador sendo constituído inteiramente software responsável pela
 interface aplicativos programas computador compete sistema
 operacional controlar supervisionar dispositivos entrada saída dados organizar gerenciar memória interpretar parcialmente programas serem
 executados etc tanenbaum sistemas operacionais processo importante conceito de
 exploração paralelismo sendo constituído partes necessárias de
 programa execução seja código objeto valor variáveis do
 programa conteúdo registradores indicadores dele o
 operacional capaz isolar programas execução deste
 princípio operacional capaz executar diversas atividades em
 concorrência utilizando único processador técnica recebe a
 denominação multitarefa conceito processo exige um
 sofisticado gerenciamento memória interrupções controle total a
 camada convencional capÍtulo processo processo kernel
 processo processo n
 escalonamento tarefas multitarefa mecanismo operacional utilizando o
 conceito processo alterna processos tarefas permitindo execução de
 programas simultaneamente concorrência figura ilustra o
 escalonamento tarefas processos sendo executados
 alternada tempo supervisão kernel camada sistema
 operacional responsável controle multitarefa kernel habilita a
 execução processo período tempo seguir interrompe a
 execução começa executar processo lista processos kernel volta executar processo sucessivamente que
 sejam terminados procedimento gera ilusão usuário que
 diversos programas sendo executados mesmo tempo técnica auxilia programação concorrente permite ao
 programador executar programas concorrência mesmo sendo esse
 contexto adotado computadores seqüenciais noção paralelismo permite
 programador desenvolver sistemas emulem paralelismo vista
 utilização multitarefa somente sentido efetivo empregada em
 pa sistemas operacionais interface gráfica usuário gui durante década série pesquisas ciência da
 computação viria mudar conceito operacional paradigma
 interfaces gráficas usuário gui inglês user interface bruno research center desenvolvimento conceito gui camada gui não
 simples contribuição método realizar interface o
 computador usuário conceito inserido operacional
 bruno computaÇÃo paralela software
 benefícios acrescidos conceito podemos citar programação
 orientada objetos cox figura apresenta diagrama camadas as
 aplicações operacional unix gui popularização e
 proliferação conceito gui atualmente sistemas operacionais
 disponíveis possuem camada embutida aplicativos
 user shell sh ksh unix gui
 unix
 desktop
 aplicativos
 api/toolkit
 looking glass ixi
 gui
 motif open look
 unix gui
 janelas
 window system
 operacional
 unix
 comparação operacional unix a
 camada gui multitarefa possibilita concorrência processos os
 sistemas operacionais genéricos atuais unix windows apresentam conceito útil desenvolvimento de
 programas concorrentes denominado thread conceito thread bastante
 parecido multitarefa porém invés processos de
 programas podendo mesmo programa sendo executados em
 concorrência conceito importante computação paralela adoção
 arquivo redes computadores tanenbaum camada permite arquivos operacional seja expandido
 dispositivos armazenamento conectados rede somente dessa
 camada implementação sistemas operacionais distribuídos estratégias comentadas relacionadas paralelismo diretamente associadas computadores seqüenciais discutiremos seguir
 capÍtulo pa abreviada sistemas operacionais desenvolvidos especificamente para
 computação paralela objetivo principal sistemas operacionais consiste interface o
 usuário programador aplicação computador modo sistema
 operacional cria camada software simplifica complexidade do
 hardware máquina possibilitando operação disponibilizando base o
 desenvolvimento execução aplicações programas seguindo princípio operacional funciona máquina virtual tanenbaum simples utilizar compreender programar tornando complexo conjunto
 dispositivos constituem computador memória relógios terminais controladores discos rígidos controladores discos flexíveis interfaces de
 rede dispositivos entrada saída processador etc transparentes usuário sendo operacional definido máquina virtual conforme
 comentamos anteriormente torna-se natural transposição desse
 conceito máquinas paralelas modo sistemas operacionais
 paralelos procuram tornar características paralelas igualmente transparentes desenvolvidos sistemas operacionais distribuídos tanenbaum tanenbaum tanenbaum distribuído consiste camada software capaz uma
 coleção computadores independentes aparentem usuário único
 computador entretanto definição teórica existam diversos
 sistemas operacionais distribuídos atual estado arte ciência da
 computação permite implementação efetiva conceito uma
 software barreira paralelismo sabemos projetar implementar usar software distribuído modo desenvolver sistema
 operacional eficácia distribua aplicação diversas unidades de
 processamento atual estado arte sistemas operacionais distribuídos não
 permite paralelizar automaticamente programas aplicações se
 esperar operacional distribuído ideal entanto sistemas
 capazes deixar transparente automática exploração recursos
 paralelos distribuição processos threads processadores
 espalhados rede usuário utilizar operacional distribuído ex amoeba tanenbaum computaÇÃo paralela software
 operacional multitarefa convencional invés conjunto máquinas
 integradas operacional distribuído modo usuário
 executa diversas aplicações operacional distribui máquinas
 distintas modo transparente usuário impressão utilizando
 operacional convencional multitarefa alta performance
 computacional basicamente existem possibilidades implementar sistema
 operacional distribuído desenvolvimento completo consiste desenvolver operacional
 distribuído específico partindo seja utilizar nenhum outro
 operacional existente base desenvolvimento modificando operacional convencional resume utilizar as
 bases operacional convencional normalmente unix pa alterando-o incrementando-o transformá-lo sistema
 operacional características operacional distribuído utilizando operacional convencional consiste desenvolvimento
 camada software adicional operacional já
 existente ficando usuário aplicações operacional modo
 camada conjunto comporte novo
 operacional distribuído importante comentar conceito sistemas operacionais
 distribuídos seja interessante existam mesmo algumas
 implementações tipo abordagem popularizou das
 implementações sistemas caráter acadêmico exemplos se
 tornaram comerciais raros operacional distribuído desenvolvido unix inria instituto
 francês pesquisas posteriormente comercializado chorus sistèmes
 tanenbaum figura apresenta arranjo arquitetura operacional
 distribuído amoeba mullender estratégia desenvolvimento completo amoeba desenvolvido totalmente
 utilizar base operacional previamente implementada originado vrije universiteit amsterdã versão ficou operante em
 capÍtulo distribuído totalmente transparente usuário fornecer bases para
 desenvolvimento programação paralela distribuída objetivo amoeba propósito as
 características paralelas sejam transparentes usuário interessante conceito
 opção existir máquina-mãe processos usuários modo usuário entra entrando como
 determinada máquina compõe apresentado interface shel usuário entrar é
 executada processador arbitrário objetivo amoeba forneça bases para
 pesquisas programação paralela distribuída operado usuário sem
 intenções desenvolver aplicações paralelas devido transparência aparenta operacional multitarefa multitasking executado um
 supercomputador seqüencial porém amoeba possui ferramentas linguagens aplicações específicas exploração paralelismo a
 linguagem orca voltada exclusivamente desenvolvimento aplicações
 paralelas tanenbaum processadores
 terminais x
 servidor arquivos
 servidor impressão
 arquitetura operacional distribuído amoeba conforme podemos observar figura amoeba composto
 basicamente partes grupos processadores terminais x-windows e
 servidores grupos processadores possuem substancial de
 ucps quais possuem memória conexões rede sistema
 pa computaÇÃo paralela software
 permite processadores utilizando memória compartilhada caso a
 troca mensagens otimizada comunicação memória memória
 invés trocar mensagens rede ucps pertencer a
 diferentes arquiteturas mistura máquinas sparc máquinas pertencentes processadores
 máquinas completas teclado mouse monitor simplesmente a
 placa processamento conexão rede memória máquinas
 completas entanto possuem inconveniente serem sub-utilizadas vez
 utilizadas terminais compõe amoeba terminais x-windows utilizados computadores pessoais estações trabalho
 terminais entanto serão sub-utilizados poderão
 participar processamento consiste servidores máquinas executam tarefas específicas ex servidores arquivos de
 impressão aplicações distribuídas
 serviço arquivos
 serviço segurança
 serviço tempo
 serviço diretório
 dce chamadas procedimentos remotos autentificações
 threads dce
 operacional convencional
 hardware
 camadas dce abordagem implementação sistemas
 operacionais distribuídos podemos citar dce inglês distributed computing
 environment rosenberry operacionais convencionais adicionando aplicação funciona uma
 camada software adicional dce transforma conjunto máquinas em
 operacional distribuído figura apresenta modelo camadas do
 dce inicialmente desenvolvido rodar plataforma unix dce portado
 plataformas vms windows atenção caráter comercial constitui base projeto a
 origem capÍtulo paralelismo nÍvel linguagens de
 programaÇÃo
 discutirmos paralelismo linguagens de
 programação interessante definirmos linguagem de
 programação linguagem programação alto consiste método
 desenvolvido ciência computação transformar modo programar
 deixando-o abstrato dependente máquina um
 compilador interpretador programas escritos linguagens alto são
 convertidos linguagem máquina modo transformam-se novas
 aplicações figura conceito linguagem programação alto auxiliou o
 desenvolvimento ciência computação níveis simplicidade no
 pa desenvolvimento programas portabilidade simplicidade desenvolvimento
 programas questões importantes computação informática
 somente conseguiu atingir estado popularização crescente
 variedade aplicações programas fossem desenvolvidos linguagem de
 máquina complexidade tempo fariam software tivesse
 custo elevado impossibilitaria generalização uso computador a
 portabilidade extremamente importante história computação
 bruno programas portáteis modo programadores podem
 desenvolver programa transpô-lo qualquer máquina preocupar
 conjunto instruções linguagem máquina assembly bastando máquina arquitetura diferente possua compilador
 linguagem escrito programa bruno detalhes história computação aspectos portabilidade linguagens programaÇÃo alto
 nÍvel
 sendo objetivo linguagens alto abstração técnica a
 representação problemas modo facilitado programadores esperar linguagem alto desenvolvida base na
 computaÇÃo paralela software
 classe problemas procura atender verificando universo linguagens de
 programação alto podemos constatar caráter orientação ao
 problema seguir vamos apresentar linguagens populares de
 programação respectivas especificações apresentamos na
 figura diagrama genealogia linguagens fortran formula translation projetada aplicações técnicas e
 científicas especificamente cálculos matemáticos considerada
 origem linguagens programação alto não
 possua muita abstração seja voltada simplificar de
 compilação programação fortran linguagens mais
 evoluiu possuindo versões década amplamente utilizado os
 dias principalmente super computação existem muitas ferramentas e
 extensões exploração paralelismo fortran algol algorithmic language algol linguagem alto
 realmente preocupada abstração voltada programador à
 estrutura máquina designado uso introduziu os
 conceitos estrutura blocos procedimentos variáveis locais declaradas
 procedimentos algol influenciou teoricamente das
 linguagens cobol comercial business oriented language linguagem de
 computadores designada especificamente uso comercial cobol hoje
 linguagens utilizadas mundo principal atividade suas
 aplicações manipulação arquivos lisp list processing language linguagem declarativa projetada problemas inteligência artificial áreas
 estruturas dados irregulares melhor representadas de
 listas introduziu conceito recursividade permitido fortran atualmente existem extensões implementações lisp a
 exploração paralelismo pa basic beginner purpose symbolic instruction code linguagem de
 uso utilizada iniciantes linguagens programação popularizou-se a
 meados década tornar padrão linguagem alto
 microcomputadores atualmente visual basic constitui
 evolução linguagem basic adicionando características programação
 capÍtulo visual basic tornando-se linguagem desenvolveu aplicativos a
 plataforma windows pascal possui denominação homenagem matemático e
 filósofo blaise pascal caracterizado estágio evolutivo linguagem
 algol inicialmente projetado ensino linguagens programação em
 superior devido modularidade estruturação sua
 simplicidade popularizou-se pascal tornou principais linguagens
 computadores geração tendo sido projetado uso muitos
 compiladores sistemas operacionais escritos pascal atualmente o
 pascal possui diversas extensões paralelas atual ferramenta desenvolvimento
 delphi calvert orientação objetos cox linguagem alto uso cuja principal característica
 habilidade acessar hardware comportando-se linguagem baixo
 possua tais características programas escritos possuem
 alta portabilidade podendo recompilados diversas plataformas essas
 condições linguagem seja voltada desenvolvimento de
 sistemas operacionais unix escrito popularidade unix em
 sistemas paralelos consequentemente linguagem ganhou diversas extensões
 paralelas smalltalk smal talk linguagem programação visual que
 inspirou programação visual emprego tecnologia orientação
 objetos desenvolvida suportar paradigmas projetos parc bruno modula linguagem modula inspirada novas
 concepções projeto parc xerox bruno designada linguagem alto base estações de
 devido popularização conceito programação orientada a
 objetos desenvolvido extensão linguagem acrescenta conceito orientação objetos características oo
 orientação objetos trouxeram estrutura classes suas
 vantagens reutilização código facilidades projetos extensos prolog programming logic prolog linguagem alto nível
 abstração projetado utilizado inteligência artificial sistemas
 computaÇÃo paralela software
 inteligentes linguagem declarativa baseada predicados lógicos ada denominação homenagear programadora de
 computadores augusta ada lovelace aluna charles babbage spufford &
 uglow parecida pascal encomendada departamento defesa
 americano desenvolvida computação numérica programação sistemas pa aplicações tempo real programação concorrente ada linguagem
 robusta bibliotecas nativas diferentes especificações incluindo a
 exploração paralelismo java criada sun microsystens linguagem java criada para
 atender necessidades internet possuindo caraterísticas facilitam a
 utilização aplicações diversas plataformas computação diferentes
 integração metodologias navegação internet uma
 linguagem uso estruturas parecidas linguagens visuais conceito linguagem visual introduzido
 primeiramente smalltalk plataforma windows conceito introduzido
 linguagem visual basic consiste ambiente programação ferramentas case bruno interação visual programador facilitando desenvolvimento e
 diminuindo tempo programação visual basic popularizou-se rapidamente tornando-se linguagem utilizada possui aplicações
 plataforma windows atualmente existe forte tendência utilização do
 conceito linguagem visual gerando inúmeras extensões visuais linguagens
 tradicionais delphi pascal visual jbuilder visual java visual fortran fortran etc capÍtulo cobol
 java
 prolog
 fortran
 smalltalk
 html
 java visual
 eiffel
 simula
 builder
 algol
 c
 modula oberon
 visual pascal
 delphi
 ada
 smalltalk
 lisp
 basic
 visual basic
 pa genealogia linguagens programação podemos dividir linguagens programação classes principais declarativas imperativas hudak programas imperativos consiste série comandos obedecidos de
 seqüencial possuam abstração baseados na
 estrutura computadores exemplos basic pascal algol cobol ada fortran etc linguagens imperativas possuem natureza
 inerente modelo computação von neumann história evolução e
 desenvolvimento estranhar classe seja mais
 difundida utilizada programadores níveis o
 advento computação paralela trouxe série extensões paralelas as
 linguagens imperativas pudessem explorar paralelismo e
 compiladores paralelos tentam extrair paralelismo linguagens
 imperativas seqüenciais linguagens declarativas constituem-se série funções ou
 predicados lógicos exemplos podemos citar prolog lisp sisal etc considerada autores hockney jesshope eficiente estilo imperativo programação fundada estrutura
 von neumann considerada natureza paralela e
 consequentemente apresenta soluções paralelas naturais almasi gottlieb rigoroso formalismo matemático auxiliar temática da
 complexidade programas atuais discussão vantagens desvantagens classes ou
 estilos linguagem programação atinge patamares filosóficos podemos
 computaÇÃo paralela software
 designar melhor solução programas
 complexos lineares paralelos linguagens declarativas
 clamem superioridade formalismo encontram barreira
 constituída evolução alternativas paralelismo
 discutiremos seguir abordagens explorar paralelismo
 linguagens programação figura programador tenciona desenvolver aplicativo paralelo ele
 possui possibilidades básicas paralelismo automático extensões paralelas
 linguagens imperativas bibliotecas paralelismo linguagens não
 imperativas paralelas paralelismo automático consiste desenvolvimento compiladores
 capazes analisar código seqüencial programa paralelizá-lo tipo
 compilador tipicamente voltado programas escritos fortran almasi &
 gottlieb precisa alterar código fonte aprender ferramentas extensões de
 linguagens aprender linguagens diferentes técnicas estratégias de
 desenvolvimento programas paralelos performance obtida pelos
 compiladores casos satisfatória semântica de
 paralelização demonstra trivial natureza algoritmos
 exploração paralelismo possui lógica estrutura estratégias muito
 complexas depende condições paralelismo camadas inferiores encontrar compilador capaz transformar programa seqüencial em
 pa paralelo eficiência desafio algum atingido exigirá a
 dedicação muitas mentes brilhantes linha pesquisa a
 cobiçada pesquisadores sociedade computação paralela como
 pedra filosofal paralelismo estratégia utilizada desenvolvimento programas
 paralelos consiste utilização extensões paralelas linguagens imperativas
 convencionais abordagem requeira esforço programador aprender computação paralela funcionamento das
 ferramentas adicionais será necessário aprender outra
 linguagem podendo reutilizar muitas bibliotecas programas modo capÍtulo programador utilizar linguagem familiarizado do
 acréscimo comandos estruturas específicas funções paralelas será capaz
 explorar paralelismo estratégia seja criticada manter
 vínculos programação von neumann utilizada atualmente através
 tipo abordagem pode-se conseguir excelentes performances dependendo estratégia paralelismo adotada programador deverá
 conhecer semântica paralelismo estrutura da
 plataforma paralela utilizada alternativa utilização bibliotecas funções e
 procedimentos voltadas desenvolvimento paralelo caso bibliotecas
 utilizadas linguagens programação seqüencial permitindo o
 desenvolvimento aplicações paralelas última opção apresentamos utilização linguagem não
 imperativa nenhum quase nenhum vestígio estrutura von neumann acreditem resposta pródiga mais
 custosa programador aprender linguagem uma
 heurística diferente familiarizado reescrever seu
 código linguagem podemos considerar tipos linguagens apresentam vestígios
 arquitetura von neumann linguagens baseadas predicados lógicos como
 prolog linguagens funcionais sisal linguagens voltadas para
 arquiteturas dataflow duncan performance sisal sobressai fortran melhor
 performance obtida utilização extensões paralelas linguagens
 imperativas entretanto crescente força pesquisa
 almasi gottlieb existem linguagens desenvolvidas exclusivamente exploração de
 paralelismo apresentam estruturas comandos baseados linguagens
 imperativas occam inmos extensão linguagens imperativas computaÇÃo paralela software
 mecanismos exploraÇÃo de
 paralelismo
 dentre estratégias paralelismo apresentamos seção
 anterior estaremos preocupados principalmente apresentar técnicas voltadas
 extensões paralelas linguagens convencionais bibliotecas de
 paralelismo pa começarmos discutir técnicas básicas paralelismo devemos discutir definição máquina paralela definição almasi e
 gottlieb almasi gottlieb elementos processamento capaz comunicar cooperar resolver
 problemas rapidamente utilizando-se definição observando modelo
 camadas computador moderno apresentado figura devemos nos
 lembrar complexidade envolvida exploração paralelismo abaixo
 camada linguagem alto existem diversas camadas que
 modo executar exploração paralelismo desse
 modo devemos concluir existe regra modelo único capaz de
 descrever bases exploração paralelismo possíveis
 combinações exploração paralelismo camadas existem
 técnicas estratégias programação adequadas modo o
 conjunto técnicas programação vasto conjunto das
 combinações paralelismo camadas inferiores estaremos
 limitando discussão item máquinas mimd genéricas devemos lembrar
 universo máquinas mimd abrangente ocorrendo diversas
 situações ex máquinas mimd formadas simd cray jesshope adversas pratt pratt computador von neumann composto conjunto linhas contendo cada
 único comando sendo executadas existe entanto série procedimentos auxiliam eliminar visão estritamente
 seqüencial construir programas interessantes conceitos estão
 presentes linguagens atuais programação são
 conhecidas estruturas programação estruturas programação
 permitem linhas programação sejam integradas estruturas dentre
 capÍtulo podemos citar estruturas condicionamento ex then else estruturas repetições ex estruturas linhas blocos sub-programas ex procedimentos funções a
 diferença comandos estruturas programação responsáveis
 caracterização linguagens programação conceitos programação estruturada aglomeração de
 linhas blocos sub-rotinas sejam conhecidos importantes na
 computação seqüencial constituem bases a
 elaboração programas paralelos tais conceitos praticamente seria
 impossível desenvolvimento aplicações paralelas pois haveria como
 realizar caracterização formal tarefas paralelizar algoritmos correspondentes problema geralmente são
 implementados estruturas programação seqüencial testados somente então paralelizados ocorre devido dificuldade de
 implementação depuração programas paralelos termos gerais bases
 paralelização algoritmo seqüencial obedecem seguintes tarefas definir quais conjuntos sub-tarefas executados paralelo
 dependência dados iniciar finalizar execução coordenar especificar interação enquanto executando pa dependência dados ocorre comando operação depende
 resultado análise gera grafo estilo do
 apresentado figura verificar dependência dados deve-se então
 decidir iniciar finalizar tarefas paralelas existem algumas
 primitivas básicas comuns bibliotecas extensão paralelas em
 linguagens programação paralelas fork/join parbegin/parend doall figura apresenta comparação estratégia
 parbegin/parend fork/join fork/join parbegin/parend possuem mesmo objetivo controlar execução paralela figura podemos observar diferença entre
 abordagens alternativa parbegin/parend oferece um
 código elegante simples exploração paralelismo flexível
 fork/join primitiva comum apresenta estratégia um
 computaÇÃo paralela software
 diferenciada primitiva doall similares foral pardo etc são
 voltadas repetições exploração paralelismo serem principalmente
 empregadas cálculo vetores matrizes comuns linguagens
 científicas extensões paralelas fortran abordagem
 doall seja útil poderosa existe problemas
 envolvendo operações matrizes vetores quais ocorrem dependência de
 dados inviabilizando modo paralelização abordagem parbegin/parend
 fork/join
 a
 a
 fork c
 parbegin
 b
 c
 a
 a
 begin
 fork e
 b
 b
 b
 fork f
 d
 c
 d
 e
 f
 parbegin
 c
 d
 e
 f
 pa join quit
 d
 g
 e
 g
 join quit
 f
 h
 parend
 h
 quit
 end
 parend
 join quit
 h
 join quit
 join quit
 comparação parbegin/parend fork/join alternativas
 diferentes controlar execução paralela almasi gottlieb conceito igualmente poderoso utilizado linguagens
 paralelas extensões paralelas utilizado linguagens
 convencionais mecanismos troca mensagens caso cvmp
 apresentado conceito sub-programas paralelos sub-
 rotinas paralelas caso programa capaz ativar sub-
 programas modo gerar execução paralela concorrente esses
 mecanismos utilizam conceito processos providos sistema
 operacional comentados seção figura apresenta árvore de
 execução paralela ilustrando conceito nela podemos observar processos
 representados retângulos processo principal executa diversos sub-
 capÍtulo processos implementado utilizando concepção chamada de
 processos linguagem possibilitou execução processos concorrentes porém viabilizava
 espécie controle sincronismo coordenação processos que
 inviabilizava desenvolvimento aplicações paralelas atualmente linguagem
 principal
 call task
 a
 call task
 call task
 b
 call task
 pa call call task
 call task
 c
 Árvore execução paralela disparos processos
 realizados linguagem necessidade sincronismo coordenação processos paralelos
 surge devido necessidade melhor exploração paralelismo e
 principalmente dependência dados processos da
 coordenação processos fator importante exploração do
 paralelismo comunicação processos permitindo trocar
 informações referentes dependência dados durante execução existem diversas estratégias coordenação processos tarefas discutiremos sucintamente estratégias utilizadas comunicação e
 sincronismo máquinas mimd memória distribuída mimd memória
 compartilhada caso leitor deseje entrar detalhes encontrará ampla
 abordagem almasi gottlieb codenoti leoncini técnicas utilizadas comunicação computaÇÃo paralela software
 utilizadas sincronismo variando acordo camadas hardware máquinas memória compartilhada usual comunicação
 consiste variáveis compartilhadas variáveis compartilhadas variáveis de
 processos diferentes declaradas mesmo endereço memória permitem diferentes processos tarefas diferentes processadores trocar
 informações devido arquitetura processadores máquinas de
 memória compartilhada acesso mesmos endereços memória e
 graças possibilidade viabilizado mecanismo comunicação via variável
 compartilhada máquinas possuem memória distribuída devido arquitetura permitem diferentes processadores acessem mesmo endereço de
 memória portanto permitem variáveis compartilhadas entretanto a
 comunicação máquinas memória distribuída realizada uma
 técnica denominada passagem mensagens passagem mensagens
 consiste transferência informações rede memória casos de
 utilização sistemas memória compartilhada conexão os
 processadores computadores processos capazes efetuar a
 comunicação via passagem mensagens rede primitivas send e
 receive importante observar linguagens possuem suporte para
 única abordagem ex occam inmos abordagens caso técnica rendezvous linguagem ada naiditch mecanismos comunicação realizados sincronismo a
 coordenação processos paralelos termos gerais coordenação de
 processos realizada sincronização andrews schneider
 andrews schneider pa visto paradigma ação reação palavras sincronismo
 ocorre processo envia mensagem memória distribuída atribui
 determinado valor variável compartilhada memória compartilhada um
 processo executa determinada ação mediante detecção ordem
 alteração valor variável mensagem concepção
 podemos conceber mecanismos sincronização processos um
 mecanismo espera execução processos disparados mediante
 eventos existem série estratégias sincronismo processos capÍtulo testa continua semáforos barreiras rpc monitores etc iremos abordá-
 las porém estratégias melhor estudas almasi gottlieb krishnamurthy atualização verificação variáveis indicam condição ordem outro
 processos sendo implementá-las utilizando técnicas de
 passagem mensagem memória compartilhada figura apresenta genérico aplicação paralela que
 utiliza conceito processos paralelos coordenados uma
 máquina composta processadores processos representados pelas
 caixas cinzas comunicação sincronismo processos setas É
 importante observar dependência dados processos processador processador processador ler dados
 calcula
 b
 calcula
 c
 calcula
 a
 calcula
 calcula
 função c
 calcula
 d
 imprime f
 genérico aplicação paralela coordenação de
 processos dependência dados ferramentas passagem mensagem
 sistemas distribuÍdos
 conforme comentamos seção sistemas distribuídos conjuntos
 computadores conectados rede executar trabalho
 cooperativo explorando paralelismo implementar aplicação distribuída computaÇÃo paralela software
 seja aplicação aproveitará recurso computacional sistema
 pa distribuído necessário utilizar ferramentas realizem comunicação através
 rede denominadas ferramentas passagem mensagem modo
 extensões bibliotecas permitem programador utilizar linguagens
 programação convencionais efetuar troca mensagens máquinas existem diversas ferramentas troca mensagens dentre quais podemos
 citar pvm mpi express parmacs geist pacheco vamos discutir sucintamente ferramentas populares pvm mpi depois
 faremos pequena introdução cvmp pacote pvm
 pvm cujo provem inglês virtual machine foi
 inicialmente desenvolvido trata-se pacote software permite utilizar coleção heterogênea
 computadores conectados rede fossem única máquina
 paralela distribuído geist heterogêneo formulada pvm integração máquinas seqüenciais paralelas vetoriais formando única enorme máquina memória distribuída pacote pvm dividido partes controlador processos
 denominado daemon simplesmente pvmd biblioteca rotinas o
 pvmd aplicação rodar máquinas implementar
 integração funciona basicamente servidor recursos
 residente máquinas dele rotinas pvm são
 capazes comunicar modo principal função módulo pvmd é
 implementar conceito máquina virtual paralela biblioteca rotinas pvm
 consiste conjunto primitivas comunicação coordenação de
 processos conversão dados funciona biblioteca extensão
 linguagem programação convencional modo chamadas
 rotinas pvm usadas conjunto código fonte original biblioteca
 pvm possui dezenas funções constituindo complexo comunicação de
 processos pacote pvm tenha sido originalmente desenvolvido rodar em
 máquinas operacional unix atualmente existem pacotes o
 capÍtulo operacional windows versão baseada java pvm biblioteca rotinas o
 pvm utilizado qualquer linguagem programação possuindo
 atualmente versões linguagens fortran modelo computacional pvm baseado noção uma
 aplicação consiste muitas tarefas tarefa responsável do
 computacional aplicação paralelismo ocorre execução em
 concorrência tarefas diferentes processos sendo executados em
 diferentes máquinas ambiente troca mensagens modo pvm foi
 projetado promover ambiente troca mensagens diversos
 processos comunicar granularidade preferivelmente uma
 característica aplicações pvm preferência modelo spmd do
 inglês program multiple data abordagem cada
 processador mesmo programa executado porém processando dados
 diferentes biblioteca mpi
 pa mpi pacheco passing interface resultado tentativa implantar um
 padrão interfaces passagem mensagem mpi criado um
 consórcio envolvendo cerca quarenta organizações comunidade de
 processamento paralelo mundial sendo estados unidos da
 europa contando representantes diversas áreas indústria comércio e
 universidade versão funcional voltada comunicar máquinas heterogêneas plataforma unix conectadas via
 rede gerando ambiente troca mensagens principal diferenciação entre
 ferramentas mpi composto biblioteca rotinas possuindo nenhum componente biblioteca mpi conjunto complexo apresentam numerosos parâmetros variantes caracterizam sua
 complexidade mesmo modo pvm mpi possui variantes apenas
 linguagens programação sendo linguagem fortran modelo programação mpi computação compreende ou
 computaÇÃo paralela software
 processos comunicam chamadas biblioteca rotinas
 mpi rotinas utilizadas enviar receber mensagens outros
 processos implementações mpi fixo processos é
 criado início programa processo pertence determinado
 processador máquina sistemas mpi apresentam fixo processos existem
 diferentes abordagens comunicação processos podendo haver
 comunicação individual coletiva comunicação individual os
 processos enviam mensagens determinados processos da
 comunicação individual comunicação coletiva único processo grupo
 processos enviam mensagem processos dessas
 características comunicação interessante abordagem adotada mpi o
 conceito modularidade conceito importante principalmente sob
 vista engenharia software mecanismo denominado de
 comunicador permite programador mpi possa definir módulos que
 incorporem estruturas internas comunicação pacote cvmp
 seção vamos apresentação pacote cvmp que
 será abordado longo tese cvmp derivado inglês vision message passage tratando-se pacote exploração paralelismo similar mpi pvm fornecidas ferramentas programação auxiliar desenvolvimento
 aplicações paralelas cvmp desenvolvido longo no
 pesquisa visão cibernética ifsc/usp intuito auxiliar no
 desenvolvimento projetos necessitem exploração paralelismo no
 decorrer pesquisa observou-se necessidade de
 desenvolvimento sistemas aplicações paralelas devido demanda de
 computacional exigida experimentos áreas visão
 computacional processamento imagens existam diversos pacotes de
 exploração paralelismo pesquisa constatou necessidade elaboração
 pacote simples utilização adequado parque computadores
 pa pessoais plataforma windows fosse nativo linguagem de
 programação visual facilitar programação conter
 capÍtulo ferramentas específicas pesquisa visão computacional e
 processamento imagens procurando atender premissas quais encontradas
 integralmente nenhum pacote exploração paralelismo atual decidimos
 implementar cvmp modo cvmp pacote exploração de
 paralelismo baseado troca mensagens simples utilização capaz de
 efetivar comunicação controle sincronismo ambientes distribuídos
 constituídos computadores pessoais plataforma windows via rede máquinas multiprocessadas proposta cvmp busca simplicidade
 desenvolvimento aplicações paralelas sendo principais objetivos do
 projeto simples utilização prover possibilidade implementação paralela a
 programadores experiência especialidade computação paralela
 sistemas distribuídos necessitem desenvolver aplicações
 paralelas característica pesquisadores visão e
 processamento sinais nativo plataforma windows usuários operacionalidade ambientes programação visual ambientes de
 programação visual delphi visual basic etc proporcionam ferramentas
 facilitar desenvolvimento aplicações facilitando processo de
 programação modo possuem importante característica de
 proporcionar ferramenta programação universo de
 programadores inexperiente experiente prover mecanismos facilitar desenvolvimento algoritmos visão
 computacional processamento sinais paralelo base objetivos necessidades projetos desenvolvemos pacote cvmp usuário capaz implementar
 aplicação paralela realizar análise performance localizar gargalos comunicação processos cvmp baseada conceito
 canal virtual canal virtual conceito canal comunicação inspirado processadores transputer inmos canais virtuais objetos cvmp trocar mensagens modo
 computaÇÃo paralela software
 possibilitar comunicação processos canais virtuais são
 estabelecidos par objetos cvmp componente mestre
 escravo estabelecido canal virtual poderá ser
 alterado característica simplifica controle programação do
 vista usuário bruno costa costa componentes objetos cvmp vcls visual component library konopka calvert programação orientada objetos podendo programados visualmente deste
 modo simples usar funcionam computadores plataforma windows
 pa rede tcp/ip bennett máquinas multiprocessadas variáveis compartilhadas diferentemente pvm mpi cvmp possui caráter homogêneo do
 vista plataforma micros deverão executando windows
 pesquisadores programadores diversas áreas exploração paralelismo em
 algoritmos característica acentua algoritmos voltados para
 visão computacional processamento sinais desenvolvimento software
 seção iremos abordar brevemente técnicas conceitos e
 ferramentas auxiliam desenvolvimento software modo os
 conceitos genéricos desenvolvimento software paralelo similares de
 software seqüencial iniciaremos discussão apresentação
 engenharia software constitui série ferramentas métodos e
 procedimentos formalizar desenvolvimento software seguida
 comentaremos avaliação teste software apresentando o
 revolucionário conceito programação orientada objetos passando para
 interfaces gráficas usuário programação visual finalmente terminaremos
 seção discutindo técnicas análise desempenho programas paralelos
 engenharia utilização capÍtulo engenharia software
 décadas história computação marcaram domínio do
 hardware considerado desafio ciência da
 computação deixando software plano conjunto normas organização ferramentas metodologias utilizadas desenvolvimento de
 hardware denominado engenharia hardware realidade tratava-se
 especialização engenharia elétrica engenharia de
 hardware custo tempo desenvolvimento podia ser
 objetivamente calculado estimado modo havia comercialização industrialização do
 software conseqüência desenvolvido empresas pelas
 mesmas pessoas iriam utilizá-los caso erros corrigi-los tipo de
 abordagem permitia desenvolvimento software fosse realizado sem
 qualquer tipo formalismo métodos normas documentação desse
 ambiente mundo software completamente indisciplinado acarretando
 crise software década alto custo insatisfação consumidores longo período desenvolvimento baixa
 qualidade difícil manutenção etc pressman tentativa ordenar criação implementação manutenção de
 software surgiu engenharia software compreende série de
 metodologias critérios conceitos ferramentas possibilitaram formalização
 software pressman pressman instruções programas computadores executadas o
 hardware proceda acordo programação estrutura dados permitem programas manipular adequadamente
 informações pa documentação descreve operação utilização programas filosofia engenharia software projetos desenvolvidos
 ciclos abordagem denominada paradigma engenharia de
 software pressman escolhido acordo natureza aplicação existam
 computaÇÃo paralela software
 diversos paradigmas diferentes apresentamos figura modelo clássico
 ciclo vida software engenharia de
 sistema
 análise
 projeto
 código
 testes
 manutenção
 ciclo vida clássico software projeto software dividido fases definição desenvolvimento e
 manutenção fases possuem diversas metodologias procedimentos análises ferramentas engenharia software tem
 demonstrado forte formalização processos criação produção e
 manutenção software projeto software apresente uma
 previsão tempo custo qualidade previamente determinados nas
 áreas engenharia engenharia software objetivo desenvolvimento de
 ferramentas auxílio modelagem desenvolvimento software dentre devemos comentar case inglês aided software engineering ferramentas case tarefas repetitivas programação podem
 substituídas geração automática código dentre ferramentas case destacam-se voltadas desenvolvimento software utilizam base de
 dados ferramentas geração automática interfaces para
 aplicações direcionadas ambientes gui bruno voltadas base dados possibilitam geração código da
 diagramação metodologias análise dados dfd pressman ferramentas case voltadas interfaces possuam versões
 voltadas ambientes cli hayes veja seção conforme apresentado bruno capÍtulo voltadas ambientes gui simples sejam envolvem complexa
 programação interface preocupam o
 usuário complexidade tratamento interface muitas linhas de
 código sejam necessárias implementar simples aplicação gui tornando
 ferramentas case vitais geram código camada interface
 automaticamente poupando programador tarefa maçante muitas vezes
 repetitiva ferramentas case gui originou-se conceito de
 programação visual tratado seção avaliaÇÃo testes
 avaliação testes software etapas tomam
 pa tempo projeto cerca casos extremos controle vôo reatores nucleares fase teste pode
 custar etapas juntas principais
 objetivos realização testes projetos software qualidade o
 funcionamento correto software
 conforme podemos observar figura etapa avaliação testes
 software últimas realizada projeto engenharia de
 software fase testes localizados erros cometidos fases anteriores
 projeto localizados deve-se voltar fase ocorreram alterá-los repetir testes novamente fazendo depuração desenvolva
 ciclo existem alternativas realização fase testes manual e
 automática enquanto manual software analisado usuários automática
 consiste software capaz efetuar análise automática devido complexidade implementação software análise também
 conhecido case teste depuração testes é
 realizado manualmente erro detectado indicando alguma falha programação pode
 facilmente localizado código fonte erros são
 facilmente detectados análise código programador utiliza algumas
 ferramentas auxílio programação tais disponíveis ambientes programação computaÇÃo paralela software
 computação paralela teste software tarefa mais
 trabalhosa situações análise dispostas modo
 seqüencial código distribuído processadores ser
 analisado conjunto situações falhas claramente
 detectadas independentemente atualmente sistemas de
 computação paralela especialmente computação distribuída possuem
 ferramentas específicas depuração erros utilizando versões dos
 sistemas seqüenciais tornando análise teste software paralelo bastante
 complexa programaÇÃo orientada objetos
 programação orientada objetos oop abreviação inglês oriented programming tenha sido iniciada simula despontou
 juntamente projetos parc palo alto research center xerox o
 parc percorreu década pesquisando obteve meados década
 conceito interface homem-máquina interface gráfica com
 usuário denominada gui abreviação inglês user
 interface intimamente ligada conceito gui programação
 orientada objeto depende necessariamente conceito é
 paradigma ligado modo programação principio básico oop abstrair software modelá-lo do
 conceito objetos existente mundo real cox figura apresenta paradigma oop smalltalk hurson vamos seguir apresentar conceitos básicos oop objeto basicamente pacote informações dados descrições formas
 manipulação métodos principais características objetos a
 encapsulação seja dados objeto protegidos mundo exterior pa sendo inacessíveis único obter acesso dados do
 envio mensagens métodos mensagem definida uma
 especificação método objeto método entidade um
 procedimento descreve seqüência ações serem realizadas algumas
 mensagens possuem característica requerer retorno casos a
 execução método informação solicitada retornada objetos definidos
 agrupados classes bruno capÍtulo declarações formais concepção objeto oop possui diversas características tais organização hierárquica herança polimorfismo facilidade agrupamento ordenado abstração dados reutilização código encapsulação oop possibilita auxilio engenharia software da
 abstração dados encapsulação reutilização código características
 tornam paradigma oop vantajoso projetos facilitando a
 independência programadores integração no
 desenvolvimento software proporcionando reabilitação reciclagem
 software característica relevante oop especialmente o
 assunto capítulo abordagem paralela devido arquitetura
 encapsulada orientada mensagens paradigma oop caracterizado por
 apresentar abordagem natural paralelismo observarmos modelos de
 arquitetura mimd distribuídos seção poderemos constatar muito
 semelhantes modelo oop especialmente refere encapsulamento
 dados comunicação objetos troca mensagens característica paradigma beneficia implementação de
 aplicações paralelas facilidade versatilidade modelar situações
 complexas aplicações paralelas envolvem algoritmos complexos fato considerado maiores obstáculos o
 computaÇÃo paralela software
 desenvolvimento programas paralelos exatamente complexidade e
 dificuldade implementação interface grÁfica usuÁrio gui seção vamos abordar revolucionária interface gráfica usuário
 gui durante década início década conceito de
 interface homem-máquina pesquisado parc palo alto research
 center xerox atualmente utilizado larga escala plataformas
 computadores gui principal característica conceito de
 utilização dispositivo exibição virtual possibilitando usuário
 interaja virtualmente máquina arrastando ícones clicando botões e
 manipulando dispositivos controle diretamente tela definiÇÃo gui
 dispositivo forneceu interface interativa homem 
 máquina largamente utilizado primórdios computação décadas ttys terminais baseados caracteres cada
 caracter digitado impresso papel aprimoramento tecnológico tornaram-se disponíveis terminais vídeo baseados caracteres pela
 pa incontestável superioridade interação ttys terminais vídeo
 rapidamente tornaram-se norma computação hayes sistemas baseados caracteres interface usuário adotada a
 interface linhas comando cli inglês interface vem
 sendo utilizada dias sistemas operacionais interface cli unix vêm
 sendo criticados longo tempo complexidade interfaces o
 usuário desenvolvido utilizado minicomputadores unix criado
 conjunto aplicações compartilháveis dispunham interface
 orientada linha cli interface revolucionária tempo sua
 simplicidade unix introduziu conceito interpretador de
 comandos lê executa linhas comando provenientes teclado peddie pesquisadores xerox parc contudo estavam trabalhando uma
 idéia diferente pesquisavam interface substituísse linhas comando
 capÍtulo telas caracteres telas gráficas mapas bits das
 quais comandos seriam exibidos graficamente icônica a
 interface computador peddie pesquisadores parc precisaram revolucionar conceito
 monitor vídeo antigamente monitor vídeo utilizado somente para
 reproduzir texto usuário digitava teclado concepção o
 monitor apontador caso criado xerox
 parc transformava-se verdadeira fonte entrada dados petzold &
 yao ícones janelas dispositivos verdadeiros comandos
 botões barras rolagem menus etc manipulados
 virtualmente usuário apontador teclado figura apresenta aspecto visual interface gráfica usuário gui gráficos utilização melhor tela transmitindo informações
 maneira visual rica combinação exibição rica manipulação
 virtual gráficos guis etapa evolutiva interface homem-
 máquina modo evolução clis guis trabalhamos um
 computador abstrato peddie durante décadas pesquisas sido realizadas intuito de
 desenvolver arquiteturas aproveitem melhor pesquisas
 apareceram questões prioridades usuários experientes tirem proveito máquinas otimizar curva aprendizado iniciantes hayes interfaces gráficas usuário demostraram resposta efetiva
 questões prioridade interface homem máquina hayes tecnologia utilização máquina satisfaz níveis usuários peddie usuário iniciante simplicidade utilização interação conceitos
 intuitivos imediatamente torna-se hábil utilizar recursos máquina treinamento torna-se então rápido eficaz necessitando leitura de
 manuais extensos aprendiz rapidamente hábil usuário casual executa várias diferentes aplicações diariamente encontra a
 pa consistência padrão diferentes aplicações usuário experiente user beneficiado executar suas
 computaÇÃo paralela software
 tarefas interação beneficia recursos
 providos ex multitarefa aspecto visual gui modelo camadas
 atualmente existe variedade guis diferindo várias
 características diferenças interface variar também
 integração operacional certas guis são
 fortemente agregadas operacional macintosh enquanto outras
 visivelmente colocadas operacional windows guis
 unix definição gui varia fabricante para
 apresentaremos modelo genérico camadas gui tem
 objetivo mostrar componentes figura modelo apresentado
 figura ilustra gui colocada operacional entretanto
 existem casos operacional integrante gui peddie modelo gui figura composto camadas quais
 serão comentadas seguir capÍtulo modelo objetos caminho aplicações reagem si
 freqüentemente envolve uso modelo objetos modelo link &
 embedding ole camada existem gui não
 possuem modelo objetos api abreviação oriunda inglês program interface esta
 camada conjunto funções utilizadas programas se
 comunicarem gui programador precisa especificar quais funções ex janelas menus barras rolagem ícones etc utilizadas gui mencionado outrora gui varia
 fabricante fabricante camada gui ações elementos tela
 residem janelas camada difícil definir camada
 gui x-window janelas passo o
 windows janelas gui construídos juntamente modelo imagem enquanto x-window modelo de
 imagem gui suportam modelo imagem caso do
 news sun microsystem suporta modelo similar modelo imagem
 display postscript dps porém diferente dps trabalhar com
 modelamento complexo phigs gks controle programas de
 cad aided design modelo camadas gui difícil obter modelo genérico representação as
 guis diferem figura apresentado modelo tenta o
 genérico figura apresentadas guis diferentes possibilitando a
 comparação obstante guis possuem as
 pa computaÇÃo paralela software
 camadas descritas modelo genérico existem apresentam
 camadas externas caso nextstep fundamentado numa
 plataforma orientada objeto caso modelo objeto usado
 externo diagrama comparativo camadas gui fundamentos programaÇÃo gui
 conceito gui várias tecnologias programação foram
 capÍtulo adotadas criadas consistência interface homem-máquina contrário filosofia cli plataforma gui voltada usuário e
 programador tarefa programar utilizando compilador
 tradicional ambiente gui simples ambiente cli cuja
 filosofia facilita programador primórdios ambiente gui programação
 aplicativos tarefa extremamente difícil trabalhosa pois o
 gerenciasse janelas facilitasse criação trabalho
 destinado programador atualmente tarefa realizada
 automaticamente case programação visual liberando tempo e
 esforço programador atividades importantes bruno programaÇÃo visual
 idéia programação visual surgiu famoso projeto vivarium no
 crianças utilizavam smal talk desenvolver ambiente então o
 povoavam animais virtuais crianças gerar simplesmente movimentando objetos poderíamos utilizar mesma abordagem
 desenvolver aplicativos bonner idéia básica programação visual desenvolver ferramenta na
 fosse gerar aplicativo escrever linha código porém ocorre programação visual elementos interface o
 usuário características controle gerados visualmente do
 apontador elementos ligado código implementa ação
 provoca elemento código implementado visualmente ficando tarefa linguagens convencionais programação atualmente predominar tendência ferramentas programação
 visual fortemente ligada conceitos gui oop larga difusão duas
 tendências arrastado consigo programação visual influenciado
 ambientes linguagens programação convencionais conceito programação visual base inversão ênfase da
 programação interfaces baseadas caracteres cli compiladores
 tradicionais linguagens procedimentais ênfase programação residia no
 projeto estruturas dados tradução lógica atividade o
 código programa projeto interface usuário ficava normalmente em
 plano ferramentas programação visual invertem equação o
 computaÇÃo paralela software
 processo programação começa interface usuário permanece
 centralizado nela bonner surge filosofia codificação código do
 programa fica ligado diretamente objetos interface usuário só é
 pa ambiente compilador case estejam integrados dentre ferramentas programação visual ambiente windows
 disponíveis atualmente podemos citar exemplos compiladores que
 possuem ferramentas programação visual borland delphi builder
 microsoft visual basic compiladores possuem parque
 estabelecido usuários tornando forte padrão programação em
 ambiente windows principais vantagens simplicidade de
 elaboração protótipos construção automática interfaces utilização
 componentes visuais tornam facilmente acessíveis objetos
 oop poderosos recursos programação anÁlise estatÍstica gargalos e
 desempenho programas paralelos
 conforme comentamos anteriormente principal motivação a
 exploração paralelismo máquinas seja via hardware software o
 aumento performance avaliar performance um
 software mesmo softwares seqüenciais avaliação performance muito
 complexa chegando subjetiva interação camadas
 inferiores figura exerce papel fundamental desempenho normalmente avaliação performance feita comparação de
 desempenho aplicações método conhecido benchmark
 benchmark entanto confiabilidade medidas benchmark questionáveis comparação algoritmos performance dar
 resultados completamente diversos dependendo arquitetura aplicação
 sendo executada compararmos algoritmos que
 utilizam estratégias adversas solucionarem mesmo tipo problema e
 utilizarmos plataformas diferentes freqüente ocorrer um
 algoritmo possua performance superior concorrente plataforma resultado inverta completamente plataforma ocorre devido
 capÍtulo interação camadas inferiores aplicação complexidade avaliação desempenho software aumenta
 tratamos computação paralela especialmente caso dos
 sistemas baseados computação distribuída compostos
 plataforma heterogêneas computação paralela avaliar o
 desempenho essencial seja analisado desempenho cada
 etapas execução programas comunicação processos acesso disco etc somente análise performance tempo
 despendido etapas podemos localizar gargalos seja
 regiões responsáveis comprometimento performance comparação vazão fluxo de
 encanamento desempenho conjunto hardware/software conceito gargalo software similar gargalo fluxo fluídos podemos comparar fluxo execução software vazão fluídos um
 encanamento figura apresenta ilustra a
 comparação execução software paralelo vazão de
 pa encanamento devemos observar término execução vazão ocorre
 fluido nenhum ducto representação devemos observar
 ducto corresponde conjunto hardware/software fluído fluxo de
 processamento devemos observar diâmetro ducto corresponde ao
 desempenho computacional conjunto hardware/software quanto
 diâmetro ducto será vazão desempenho porém modo similar ocorre fluídos existem regiões estreitamento do
 ducto compromete vazão regiões denominadas gargalos o
 gargalo limita vazão ducto importando diâmetro
 computaÇÃo paralela software
 anterior mesmo modo conjunto hardware/software importa poder
 computacional anterior gargalo dependendo quão estreito seja gargalo desempenho conjunto será comprometido modo observamos ducto tenha vazão
 ductos devido gargalo possui vazão muito
 vazão termos conjunto hardware/software o
 ducto poderia comparado processador mais
 poderoso porém algum programa existe intensivo acesso a
 dispositivo hardware lento acesso disco rede algum tipo de
 processamento dispendioso podemos observar simultaneamente ao
 ocorre gargalo ducto ducto aumenta diâmetro equivalente sub-utilização recursos computacionais num
 dado análise gargalo programador rever a
 estratégia paralelização modo balancear carga processamento da
 etapa crítica gargalo fase sub-utilização eliminando o
 gargalo consequentemente aumentando desempenho um
 vimos localização eliminação gargalos vital o
 desempenho software mesmo aplica hardware na
 computação seqüencial análise localização gargalos sejam importantes elas
 cruciais computação paralela existência principalmente à
 velocidade localização eliminação estreitos gargalos sistema
 paralelo diversos processadores possuir mesma velocidade ainda
 pior lento equivalente seqüencial tornando-se completamente
 ineficiente sentido basicamente técnica utilizada localizar gargalos software
 consiste mapeamento etapas registrando performance
 individual existam ferramentas auxiliar a
 medida etapas engenharia software casos
 tarefa realizada programador análise estatística do
 tempo execução delas caso cvmp implementamos
 ferramentas específicas localização gargalos análise desempenho
 software serão comentadas capítulo mapa desempenho pode-se localizar precisão os
 gargalos sistemas paralelos modo auxiliar eliminação outra
 capÍtulo estratégia analisar diferentes etapas algoritmos lineares localizar
 etapas custosas traçar estratégia paralelização eficiente
 pa mesmo implementação versão paralela dessa
 abordagem figura mostra diagrama representa análise de
 desempenho aplicação seqüencial posteriormente versão paralela algoritmo seqüencial
 proc algoritmo paralelo
 proc leitura dados
 proc processamento processamento proc gravação dados
 proc transmissão dados
 tempo duração execução seqüencial versus paralela
 seqüencial
 paralela
 mapa desempenho diferentes etapas programa a
 eliminação gargalo paralelização podemos observar aplicação dividida quatro
 etapas leitura dados processamento processamento escrita
 dados constatamos observar diagrama etapa processamento
 localiza gargalo programa supondo etapa não
 possua dependência dados seja simples paralelizar podemos
 dividi-la partes paralelização divisão
 acrescente etapas responsáveis transferência dados os
 processadores máquinas principal gargalo eliminado e
 computaÇÃo paralela software
 consequentemente ocorre ganho desempenho caso para
 processadores tempo execução programa paralelo ordem de
 devemos observar entretanto concentramos esforços ou
 recursos computacionais único problema ocorre o
 gargalo transferido etapa ciência computação esse
 paradoxo conhecido lei amdahl hockney jesshope aumentarmos recurso computacional seja se
 aumentarmos processadores versão paralela determinado
 gargalo será deslocado etapas programa partir
 faria sentido aumentar recursos computacionais para
 fase havendo então necessidade eliminar gargalos para
 aumentar desempenho efetiva análise medir objetivamente performance e
 desempenho software paralelo equivalente seqüencial medida denominada dada razão tempo de
 execução programa seqüencial tempo execução programa
 paralelo equação termos desempenho importante
 saber eficiência paralelização seja realizado um
 balanceamento cargas efetivo consequentemente gargalos eficiência
 pa dada razão tempo programa utiliza recursos
 computacionais tempo processador uso tempo total execução
 equação existam formas mensurar desempenho de
 software paralelo eficiência genéricas costa &
 slaets ts
 
 tu
 
 tt
 capÍtulo engenharia utilizaÇÃo
 projeto parc palo alto research center xerox influenciou ciência
 computação diversos aspectos diferentes dentre quais podemos citar a
 interface gráfica usuário gui descoberta apontador mouse a
 virtualidade monitor eventos botões gui programação visual a
 programação orientada objetos estação etc observando a
 computação atual importância conceitos podemos concluir grande
 história computação moderna escrita parc bruno idéias apresentadas parc importantes a
 consagração computador software ferramenta conceito tenha sido diretamente ditado parc suas
 idéias impulsionaram surgimento tendência tendência assumir computador ferramenta trabalho
 surgiu revolução micro-informática queda computadores
 porte mainframes aparecimento microcomputadores esses
 começaram proliferar informática iniciou jornada influência as
 áreas sociedade concepção utilização dos
 computadores começou mudar inicialmente computadores existiam em
 reduzido eram caríssimos poucas corporações desfrutavam
 máquinas possuíam equipe profissionais altamente treinados para
 operá-los contexto havia necessidade preocupar a
 dificuldade manipular programar computadores eram
 operados programados profissionais altamente especializados e
 treinados complexidade tarefas problema uma
 característica perfil profissões ligadas computação tais
 profissionais eram únicos usuários computadores surgimento micro-informática proliferação dos
 microcomputadores perfil usuários mudou drasticamente invés de
 especialistas altamente treinados usuários passaram pessoas comuns dispostas utilizar computadores auxiliar alguma tarefas contexto complexidade sobrevivência de
 produto computador software passou depender sua
 simplicidade objetividade usuário claro transição imediata evolução ou
 pa computaÇÃo paralela software
 revolução envolvendo caráter humano ocorre período de
 transição complexo simples história informática ocorrendo
 década continuamos vivenciando processo simplificação manipulação computadores surgiu conceito de
 ferramenta computador informática vistos uma
 ferramenta auxiliar humano conceito tendência novo
 postulado ciência computação atualmente contamos áreas tais
 interação homem máquina engenharia utilização basicamente
 preocupadas questões comentamos anteriormente concepções apresentadas parc
 palo alto research center xerox essenciais formar bases da
 concepção ferramenta conceito interface gráfica usuário
 gui método utilização computador tornasse simples ao
 usuário inexperiente ágil usuário experto podemos constatar pela
 análise feita hayes hayes dia-a-dia podemos observar utilização importante
 informática áreas se
 tivermos escolher abridores latas automáticos executam a
 mesma função mesma qualidade eficiência sendo deles possui
 botão bastando pressioná-lo abrir lata apresenta uma
 interface usuário complicada dezenas ajustes botões e
 alavancas abridores ferramenta útil ?
 conseqüência tendência simplificar manipulação dos
 computadores descobrimos aplicações voltadas usuário
 apresentam-se vantagens analisadas pensadas o
 vista engenharia utilização ferramentas ambientes
 linguagens desenvolvimento razão simples quando
 utilizamos ferramentas complicadas normalmente perder tempo em
 treinamentos desnecessários executarmos demasiado de
 procedimentos realizar tarefa passo utilizando
 ferramentas simples situação completamente diferente procedimentos
 necessários realizar tarefas tempo desperdiçado com
 treinamentos conceitos essenciais desenvolvimento ferramentas capÍtulo ambientes linguagens desenvolvimento software adequados o
 vista engenharia utilização preece programação orientada objetos interface gráfica usuário programação
 visual parc conceitos extraídos engenharia software tais
 ferramentas case reutilização código série de
 linguagens visuais sistemas operacionais gui ferramentas de
 desenvolvimento obedecem regras engenharia utilização são
 simples eficazes programadores engenharia utilização ciência computação
 responsável estudo maneira adequada utilizar desenvolver
 interfaces homem máquina análise estatística o
 comportamento humano utilizar determinado software encontrar o
 pa modo adequado software torne-se ferramenta
 simples intuitiva eficaz preece medida aumenta sofisticação aplicações programas dos
 sistemas fica óbvio necessidade ferramentas de
 desenvolvimento utilizem conceitos engenharia utilização tornem
 simples intuitivas eficazes fica claro especialmente o
 desenvolvimento aplicativos gui autor apresentou dissertação de
 mestrado bruno tradicional observando código fonte diferença procedimentos podemos
 constatar importância utilizar ferramenta adequada simplifica o
 perder eficiência qualidade enquanto compilador tradicional o
 programador deveria escrever código interface invés
 concentrar esforço implementação algoritmo principal do
 ambiente visual programador simplesmente desenha interface de
 ferramenta case gerado código economizando tempo mais
 vantajoso programador concentrar tempo programação algoritmo
 principal programando interface ambiente programação visual uma
 demonstração emprego filosofia engenharia utilização aspecto
 macro entanto engenharia utilização preocupa-se
 detalhes seja interfaces gráficos ícones nomes funções
 modo utilização bibliotecas funções visando tornar ferramentas mais
 intuitivas fáceis utilizar computaÇÃo paralela software
 observamos longo pesquisa normalmente as
 ferramentas voltadas computação paralela preocupam as
 questões engenharia utilização sendo casos complexas exigindo treinamento amplo geralmente necessitando manipuladas por
 especialistas história mostra importância engenharia de
 utilização mesmo modo importância ferramentas simples eficientes estamos questionando eficiência ferramentas desenvolvimento
 paralelo simplicidade preocupação utilização ser
 amigável usuário observado existe latência computação
 paralela adoção princípios engenharia utilização conforme
 comentamos anteriormente problemas computação paralela é
 desenvolvimento manutenção software existem fatores responsáveis
 complexidade itens porém acreditamos deles da
 adoção princípios engenharia utilização consequentemente falta
 preocupação usuário normalmente seja especialista da
 poderia favorecido tais conceitos visando fatores principais objetivos tese o
 desenvolvimento ferramenta intuitiva simples utilizar voltada a
 computação paralela simplicidade utilizada
 mesmo programadores mínimo conhecimento computação
 paralela portanto principais bases pacote cvmp será
 apresentado capítulo abordagem vista engenharia
 utilização acordo evolução natural computação vital existência
 ferramenta desenvolvimento aplicações paralelas obedeça aos
 requisitos engenharia utilização sendo modo intuitiva fácil usar pa simples eficiente capÍtulo capÍtulo
 caminhos paralelos
 visÃo
 paralelism therefore profund significance understanding the workings the
 cerebral cortex and increases several orders magnitude the enormity the
 task needed understand the workings the brain semir zeki
 capÍtulo caminhos paralelos visÃo
 capÍtulo caminhos
 paralelos visÃo
 introduÇÃo
 capítulo estaremos abordando visão biológica eficiente
 aquisição informação criado natureza enfoque seu
 paralelismo iniciaremos discussão abordando evolução função da
 informação paralelismo correlacionando tópicos seguir discorreremos técnicas estudo visão apresentaremos
 introdução neurociência finalmente discutiremos visão
 natural primatas apresentando percurso informação visual do
 maquinário neural enfocando paralelismo informaÇÃo evoluÇÃo visÃo
 lemos livro estamos alimentando memória com
 informações modo aprendendo normalmente atribuímos esse
 aprendizado inteligência esquecemos importância aquisição de
 informações processo salientá-la podemos seguintes
 perguntas existe inteligência informação ?
 indivíduo possui nenhum sentido seja cujo cérebro não
 possui conexão alguma exterior possui inteligência ?
 refletirmos questões podemos chegar à
 conclusão razão inteligência existem a
 informação definidas simplesmente interpretação aprendizado compreensão informação palavra inteligência origem
 latim intelligentia definição tradicional dicionário aurélio da
 língua portuguesa faculdade aprender apreender compreender capÍtulo percepção capacidade compreender adaptar-se facilmente maneira
 interpretar entender devemos observar podemos aprender compreender perceber informação modo podemos concluir que
 existe inteligência informação importância informação tamanha durante bilhões a
 natureza aprimorando sentidos seres vivos possam de
 pa maneira eficiente adaptar modo sobreviver algum
 história vida planeta começou competição espécies e
 informação passou desempenhar papel importante senão vital a
 sobrevivência vamos imaginar espécies planeta procura de
 alimento seja garantindo sobrevivência início criaturas primitivas
 possuíam sistemas sofisticados aquisição informação sentidos portanto métodos procura alimentos eram ineficientes muitas
 criaturas estavam alimento devido de
 informação localizavam-no modo desperdiçavam oportunidades vamos supor espécies evolução darwin tivessem desenvolvido algum tipo aquisição informação através
 pudessem encontrar alimento maneira eficaz no
 houvesse escassez alimento qual
 concorriam espécies possuíssem aquisição eficiente sobreviveriam passo sucumbiriam informação passa vital competição por
 alimento envolvidas atividades predatórias vitória luta entre
 presa predador dada praticamente informação predador é
 fundamental aquisição informação localize presa enquanto
 presa vital informação predador natureza desenvolveu
 dispositivos presa predador intuito obter
 informações sentidos ocultá-las camuflagem ciclo adaptação luta sobrevivência basicamente girando em
 torno informação natureza desenvolveu longo bilhões de
 evolução poderoso obter informação visão dentre sentidos natureza desenvolveu visão consegue
 absorver quantidade informação visão definida a
 capacidade fisiológica perceber mundo órgãos
 especializados olhos ondas eletromagnéticas captadas direcionadas
 caminhos paralelos visÃo
 sensores capazes senti-las seja converter informação proveniente
 sinais neurológicos disso visão consiste processamento e
 interpretação sinais exatamente processos natureza
 encontrou maiores desafios atualmente ciência como
 funciona visão ?
 evoluÇÃo paralelismo visÃo
 seção vamos discorrer evolução paralelismo visão combinação possa inicialmente parecer estranha razão veremos sentido surge paradoxos evolução acordo teoria evolução darwin vida terra começou a
 vida primitiva podemos provar a
 consistência composição exata porém teoricamente supomos essa
 primordial vida constituída única célula seja estamos
 falando unicelular sabemos objetivo último da
 evolução claro anseio formas vida adaptadas muitas
 conseqüência disso complexas busca adaptação consequentemente complexidade algum
 evolução surgiu indivíduo cujo organismo formado de
 célula surgiram indivíduos pluricelulares podemos observar a
 pa escolha natureza paralelismo caso considerarmos a
 célula unidade processamento biológico teria a
 evolução optado criar seres vivos compostos diferentes unidades celulares evolução optou desenvolver seres unicelulares deixá-los
 complexos adaptados porém permanecendo unicelulares pensando respostas verificamos evolução optou realmente
 paralelismo favoreceu indivíduos unicelulares se
 observarmos seres evoluídos podemos constatar são
 pluricelulares poderíamos conjecturar fato seres terem uma
 célula significa termos paralelismo correlação teria o
 paralelismo pensarmos termos microorganismos conceito de
 paralelismo óbvio pensarmos mamífero ?
 caso mamífero qualquer bilhões células possui
 mesmo programa genético funções independentes falar nos
 capÍtulo processos fisiológicos tais respiração reprodução excreção etc se
 pensarmos termos órgãos paralelismo fica óbvio qualquer mamífero possui série órgãos responsáveis uma
 determinada tarefa essencial vida compostos células
 operando paralelo exercem funções paralelamente relação
 órgãos podemos pensar coração pulmão órgãos digestivo sensorial executando tarefas mais
 absoluto paralelismo podemos concluir seres pluricelulares sistemas de
 vida paralelos grau evolução escala de
 paralelismo envolvida concordamos paralelismo envolvendo seres
 pluricelulares voltamos perguntar seres unicelulares satisfazem a
 condição básica vida razão evolução optou desenvolvimento de
 seres paralelos pluricelulares existem seres unicelulares alto
 grau evolução resposta conjunto fatores envolvendo a
 natureza química física vida infelizmente conhecimento muito
 limitado sabemos comportaria vida condições adversas à
 sabemos existe vida evoluída fora terra não
 sabemos responder existe universo leis física regem nosso
 universo existe universos hipoteticamente falando houver universo probabilidade leis físicas
 serem exatamente iguais remota poderia situações adversas a
 natureza desenvolver vida alto grau evolução multiplicação de
 unidades básicas vida seja poderia natureza escolher caminho de
 evolução seres unicelulares respostas perguntas conjecturas parecem do
 alcance entanto natureza acaso bilhões de
 evolução natureza optou paralelismo massa melhor compreender estudar vantagens compreendemos natureza encontrou paralelismo celular ótimo
 mecanismo busca complexidade adaptação evolução aonde entraria
 visão contexto estaria natureza preocupada sistemas de
 visão paralelos ?
 comentamos anteriormente visão ligada necessidade dos
 pa seres vivos obter informações indivíduos competem mesmo
 caminhos paralelos visÃo
 habitat concorrem alimentação qualquer informação respeito vital
 sobrevivência obtiver informação será favorecido luta
 sobrevivência qualidade informação levada em
 conta entanto situação diferente qualidade outro
 fator crucial velocidade pois saber como
 chegar alimento necessário indivíduo obtenha essa
 informação vamos imaginar espécies concorrentes disputando mesmo alimento escasso supondo principal fonte de
 informação ambas seja visão espécies possua um
 visão lento visão veloz diferença básica
 espécies fosse sobreviveria parece-nos óbvio
 espécie obtivesse informação modo lento pereceria que
 concorrentes chegariam alimento necessidade velocidade percepção visual torna crítica
 levamos conta disputa predador presa caso é
 fundamental ambos presa predador obter informações respeito seu
 oponente visão seja única fonte informação disputa conta estímulos olfato audição etc podemos a
 informação visão relevância fundamental mesmo
 primordial espécies claro natureza longo tem
 encontrado diversos mecanismos contornar iludir informação
 oponente camuflagem velocidade reconhecimento e
 localização presa predador fundamental sobrevivência vimos capítulos anteriores história computação demonstra
 resposta desempenho sistemas informação artificiais o
 paralelismo opção paralelismo desenvolvimento seres
 pluricelulares natureza tornou mestra arte paralelizar se
 espantar usasse mesma arte aprimorar sistemas visão
 biológicos exatamente estudo visão constatado neste
 capítulo apresentaremos revisão sistemas visão biológicos com
 enfoque primatas finalizaremos apresentando estudos que
 demonstram adoção paralelismo fases processo visual visão artificial tema pesquisa ponta tentamos todo
 custo desenvolver sistemas artificiais visão entanto esforço que
 realizemos áreas científicas envolvidas conseguimos
 capÍtulo sequer igualar eficiência sistemas visão seres
 primitivos tendo natureza encontrado paralelismo escolha longo
 bilhões possuímos conhecimento limitado
 funcionamento cortical iríamos discordar estudo cÉrebro visÃo
 ciência tenha esforçado arduamente durante século cérebro permanece caixa preta considerarmos estudo do
 cérebro livro conhecimento científico atual corresponderia apenas
 páginas devemos observar complexidade envolvida nesta
 instância estudo cérebro parecer pertencer a
 pa poucas áreas científicas especificamente áreas fundamentadas
 biologia entanto tendência científica atual unindo diversas áreas
 construção imenso quebra-cabeça relacionam estudo assim
 sendo estudo cérebro reunindo concentrando integrando diversas
 áreas científicas possuidoras caminhos históricos diferentes nenhum
 tema científico reuniu áreas distintas graças desafio de
 desvendar cérebro ciência altere curso separatista na
 história especializaÇÕes funcionais corticais
 século passado cérebro visto caixa preta dividida
 partes áreas projeção áreas associação machado metade século passado neurologista francês pierre paul broca iniciou um
 estudo expandiria divisão dualista cérebro broca caso clínico paciente perdeu capacidade falar realizando
 autopsia óbito broca constatou específica cérebro era
 responsável caso clínico duramente criticado científico de
 época porém introduziu noção córtex cerebral era
 composto áreas distintas diferenciadas especialização entanto a
 crença dualidade cerebral perduraria especialmente dificuldade localizar
 regiões anatomicamente distintas córtex plasticidade
 cerebral caminhos paralelos visÃo
 diversidade trabalhos científicos viriam consolidar a
 divisão córtex áreas distintas classificadas mediante função eles
 devemos destacar trabalhos fritsch hitzig fritsch hitzig conseguiram provocar movimentos determinadas partes corpo de
 estímulos elétricos áreas específicas córtex cão divisão córtex áreas funcionais possibilitou clássica
 estratégia dividir conquistar fosse aplicada neurociência permitindo a
 canalização diferentes estudos relativos função áreas determinadas estudarmos determinada função específica córtex podemos
 concentrar esforços região cortical correspondente anÁlise multi-escala
 importante estudo cortical complexidade
 multi-escalar córtex explorado diferentes prismas relativos a
 escala modo vista multi-escala podemos dividir análise
 cortical partes costa microscópica abordagem córtex estudado nível
 celular estudadas células compõe neurônios fibras glias do
 comportamento estudo histológico componentes célula nessa
 escala estudadas ramificações dendríticas axonais técnicas de
 estudo escala histológicas anatômicas empregam corantes dissecações feitas vitro intermediária classe estudados grupos células suas
 conexões comportamento árvores dendríticas compostas as
 redes neurais exploradas conexões neurais região
 cortical estudo cortical escala visualizações redes
 neurais comportamento regiões córtex visual das
 técnicas citoarquiteturas citochromo oxidase mieloarquiteturas a
 pa visualização sub-regiões cataventos blobs inter-blobs sub-
 regiões faixas stripe stripe stripe zeki macroscópica categoria pertence estudo regiões inteiras do
 córtex escala possa explorada vista anatômico o
 interesse reside pesquisa fisiológica principal característica da
 capÍtulo exploração fisiológica envolve aspectos funcionais estudada e
 executadas vivo escala macroscópica os
 estudos cirúrgicos broca tomografia ressonância magnética e
 pet positron-emition tomography devemos lembrar existe divisão distinta escalas ninguém exatamente escala começa termina essa
 classificação único objetivo apresentar características multi-escala do
 estudo córtex visualizando cÉrebro atravÉs visÃo
 vimos anteriormente cérebro visto caixa
 preta especial córtex vista anatômico tradicional quando
 analisamos córtex apresenta estrutura uniforme diferenciando-se depressões intituladas sulcos delimitam os
 giros lobos entretanto existência sulcos termos da
 funcionalidade córtex estratégia utilizada natureza
 permite aumento superfície aumento volume homem cerca terços córtex sulcos machado córtex apresenta-se singular única matéria uniforme enrugada
 sulcos giros devido característica uniforme semir zeki zeki sugere córtex seja diferenciado funcionalidade região deva existir estratégia única funcionamento modo explorarmos desvendarmos funcionamento região cortical teremos
 conhecimentos suficientes desvendar regiões últimas décadas visão recebeu atenção especial nenhum
 sentido região cerebral explorado visão tenha
 sido alvo pesquisa científica revelado seu
 funcionamento estudo visão trazendo evidências funciona o
 cérebro aproveitando trocadilho proposto título livro a
 vision the brain semir zeki zeki ferramenta visualização funcionamento cérebro subseção seja destinada estudo cérebro vamos partir
 daqui enfocar visão sentido região explorados córtex caminhos paralelos visÃo
 visÃo Área multidisciplinar
 dentre áreas conhecimento cientifico envolva maior
 diversidade disciplinas seja visão fácil verificar suspeita estudo da
 visão dividido visão natural artificial visão natural objetos de
 estudos sistemas biológicos visão passo caso ciências exatas tentando reproduzir artificialmente processo de
 interpretação visual mundo realizado sistemas biológicos verdadeiro
 fascínio ciência ocorre integração partes visão natural e
 pa artificial integrando ciências exatas ciências biológicas lado
 biologia tenta desvendar arquitetura funcionamento cérebro cibernética
 desenvolve modelos baseados sistemas biológicos experimentam sistemas
 artificiais aparentemente estejam percorrendo caminhos diversos a
 integração ocorre realimentação conhecimento científico entanto visão complexa contém de
 áreas conhecimento envolvidas versão dualista anteriormente
 apresentada explorar áreas envolvidas vamos considerar a
 definição visão utilizada david marr marr marr processo descobrir imagens presente mundo e
 respectivas posições seguindo abordagem estágio visão
 aquisição imagens olhos captam energia eletromagnética na
 luz converte impulsos nervosos células fotorreceptoras visão mecanismo neurológico baseado estímulos universo físico necessitando modo compreensão conhecimentos ambos
 universos científicos compreensão física neurológica patamar complexidade fica evidente assim
 diversidade áreas científicas envolvidas plano as
 neurociências quais estudados mecanismos neurais o
 entendimento processos percepção compete psicologia como
 entramos questões interesse filosófico levantamos da
 consciência envolvida processo ponderarmos do
 comportamento visual resposta ambiente do
 processo evolutivo levou desenvolvimento visão natural devemos considerar ecologia darwinismo encerrando processo estudo
 visão matemática física desenvolvendo modelos formais das
 capÍtulo interpretações encontradas processo visual finalmente computação
 auxiliando desenvolvimento experimentos fazendo análises abstratas não
 simulações modelagens desenvolvendo sistemas artificiais
 correspondentes figura visão
 matemática
 ecologia
 
 física
 neurociência
 ciência da
 filosofia
 computação
 psicologia
 visão ciência formada integração muitas introduÇÃo neurociÊncia
 seção iremos discutir sucintamente bases neurociência para
 possamos contexto capítulo discorrer funcionamento do
 córtex visual nervoso constituído basicamente tipos de
 células células neurais neurônios glias neuróglias enquanto neurônios
 células especializadas condução processamento sinais eletroquímicos glias finalidade revestimento isolamento modulação atividade
 pa neural defesa machado neurônios estamos limitando perfil processamento de
 informações nervoso
 termos evolutivos complexidade nervoso seres vivos
 determina escala hierárquica primitivo rudimentar é
 nervoso comparado nervoso vertebrados e
 caminhos paralelos visÃo
 compararmos representantes ápice pirâmide evolutiva primatas entanto possuem unidade fundamental células
 neurais neurônios kovács aglomerados células gânglios núcleos córtices seus
 sistemas nervosos seres vivos capazes agir reagir eventos no
 ambiente muitas mesmo modelá-lo nervoso vertebrados costuma dividido porções
 características distintas nervoso central localizado do
 esqueleto axial cavidade craniana canal vertebral nervoso periférico
 localizado fora esqueleto axial nervoso central formado pelo
 cérebro medula espinhal retina visual passo periférico é
 composto fibras aferentes conexões órgãos sensoriais pelas
 fibras eferentes conexas músculos machado figura apresenta esquema detalhado divisões nervoso sistema
 nervoso
 sistema
 sistema
 nervoso
 nervoso
 central
 periférico
 encéfalo
 medula
 gânglios e
 nervos
 terminações
 nervosas
 cerebelo
 cérebro
 tronco
 espinhais
 cranianos
 telencéfalo
 diencéfalo
 ponte
 bulbo
 mesencéfalo
 subdivisões nervoso costa estaremos interessados cérebro composto
 diencéfalo telencéfalo figura encontramos ilustração das
 pa divisões encéfalo podemos encontrar regiões diencéfalo fica
 localizado base telencéfalo componentes diencéfalo tálamo composto regiões localizadas simetricamente porção látero-
 dorsal caminhos sensoriais conexões tálamo entre
 capÍtulo caminho visual núcleo geniculado lateral do
 complexo tálamo telencéfalo
 diencéfalo
 cÉrebro
 mesencéfalo
 encÉfalo
 ponte
 tronco
 bulbo
 encefálico
 cerebelo
 divisões encéfalo telencéfalo composto hemisférios cerebrais
 direito esquerdo corpo caloso hemisférios são
 interconectados hemisférios divididos partes córtex
 cerebral centro branco medular córtex aonde concentrados grande
 neurônios nervoso denominado matéria
 cinza possui cerca natureza superficial córtex alojado cavidade craniana assemelhando-
 jornal amassado maneira formam-se diversos sulcos giros lobos
 figura conforme comentado estratégia encontrada pela
 natureza córtex ocupasse possibilitando deste
 modo ficar contido crânio córtex reveste centro branco medular que
 constituído axônios interconectam regiões corticais pela
 conexão regiões corticais centros subcorticais ex tálamo funciona
 estação distribuição sinais sensoriais caminhos paralelos visÃo
 sulco central
 lobo parietal
 lobo frontal
 sulco
 parieto-occipital
 lobo occipital
 lobo temporal
 sulco lateral
 cerebelo
 lobos sulcos corticais neurÔnios
 figura apresenta neurônio típico transmitindo sinais eletroquímicos
 células neurais neurônios células especializadas condução
 processamento sinais eletroquímicos exista quantidade
 classes neurônios agrupados características
 pa funcionais morfológicas base comportamento eletroquímico mesma
 classes costa membrana celular constituídos basicamente corpo celular soma filamento alongado denominado axônio dendritos caracterizados sua
 natureza arborizada dimensões formas localização soma árvore dendrítica
 variam diversos tipos neurônios diâmetros ordem
 mícrons milímetros neurônios apresentam apenas
 único axônio função básica transmissão sinal resultante do
 processamento informações recebidas dendritos pulsos
 elétricos axônio caracteriza filamento diâmetro uniforme se
 projeta neurônio percorrendo distâncias centenas mícrons até
 metro diâmetro axônios relacionado velocidade de
 transmissão diâmetro taxa transmissão sinal
 costa transportam informação proveniente sensores nervoso
 capÍtulo central caminho inverso ocorre informações são
 transmitidas eferentes organismos axônios agrupar em
 feixes agrupados nervoso periférico conjunto recebe o
 troncos nervosos nervos conter poucas unidades a
 dezenas milhares axônios nervoso central agrupamentos
 denominados tractos kovács estrutura neurônio típico vertebrados axônios revestidos cobertura
 gordurosa denominada capas mielina bainha mielina substância é
 produzida células neurogliais schwamm kovács permite isolamento elétrico fibras aumentando velocidade de
 transmissão diminuindo diâmetro estima-se cérebro dez
 caso fosse adotada capas mielina dowling invertebrados possuem mecanismo indica a
 mielinização axônios passo evolutivo aumentou velocidade de
 propagação impulsos nervosos diminuiu dimensão fibras nervosas oferecendo significativa vantagem competitiva axônios função transmissão impulsos
 nervosos cabe dendritos recepção dendritos prolongamentos
 filamentares arranjo arbóreo constituindo receptiva neurônios sua
 natureza ramificação arbórea finalidade possuir ampla para
 recepção sinais transmissão sinal axônios dendritos ocorre
 caminhos paralelos visÃo
 estruturas contato denominadas sinapses sinapses
 freqüentemente ocorram axônios dendritos axodendríticas podem
 ocorrer axônios soma axossomáticas casos raros
 axônio-axônio axoaxônicas dendrito-dendrito dendrodendríticas dentrito-
 soma dendrossomáticas soma-soma somatossomáticas soma-dendrito
 somatodendríticas soma-axônio somatoaxônicas machado pa ilustração sinapse fenda sináptica dowling figura apresenta sinapse nela podemos observar duas
 membranas pré-sináptica pós-sináptica membrana pré-sináptica transmite o
 sinal enquanto pós-sináptica recebe ambas membranas sinápticas são
 separadas fenda denominada fenda sináptica podemos observar
 figura pulso nervoso chega axônio membrana pré-
 sináptica libera vesículas mediadores químicos denominados de
 neurotransmissores figura fenda sináptica chegam à
 capÍtulo membrana pós-sináptica provocando alteração polaridade uma
 característica fundamental sinapse propagar sinais único sentido membrana pré-sináptica membrana pós-sináptica função ocorrer tipos sinapses excitatória e
 inibitória acordo características químicas neurotransmissores pode
 haver despolarização hiperpolarização membrana pós-sináptica a
 despolarização denominada potencial pós-sináptico excitatório ppse e
 hiperpolarização denominada potencial pós-sináptico inibitório ppsi coelho ppsi sinapse ppse ppsi produz efeito mínimo neurônio no
 entanto neurônios apresentam muitas sinapses kovács kovács ordem sinapses mesmo milímetro cúbico córtex cerebral existam sinapses neurônio funciona integrador sinais modo o
 conjunto sinais sinápticos determinará resposta neurônio sinapses excitatória sinapses inibitória ppse ppsi sinapse produzir polarizações diferentes determinados
 conjunto fatores tais tamanho sinapse quantidade de
 neurotransmissores liberados distância sináptico soma tipo da
 caminhos paralelos visÃo
 sinapse ppse despolarização ppsi polarização kovács sinapses produzir despolarização suficiente ultrapassar limiar conhecido limite disparo acontecendo membrana despolariza em
 microsegundos limiar estímulo transmitido pelo
 axônio fazendo modo polarização membrana retorne lentamente
 disparo polarização original fenômeno denominado
 potencial ação velocidade transmissão impulso nervoso algumas
 dezenas centímetros fibras mielinizadas fibras mielinizadas kovács existe modelos matemáticos neurônios redes
 neurais motivação inicial modelagem neurônios artificiais ocorreu mccul och pitts mcculloch pitts décadas idéia seguidores emergir novamente década
 força renovada linhas pesquisa figura apresenta um
 modelo matemático típico neurônio nele estímulos integrados
 produto interno respectivos pesos produzindo sofre uma
 pa transformação linear implementada função transpondo essa
 representação modelo biológico entrada representada por
 sinapse apresenta diferentes determinados aspectos costa dispara impulso nervoso representado f
 y
 s
 r
 w
 wn
 xn
 modelo matemático típico célula neural capÍtulo caminho visual
 sentidos visão objetivo percepção compreensão mesmo seres evoluídos modelagem meio
 ambiente objetos volta diferença básica visão demais
 sentidos quantidade informações adquiridas sentido sua
 complexidade importância complexidade tamanha mecanismo neural córtex utilizado sentido hubel tovée inicia luz refletindo objetos sendo transformada impulsos nervosos
 fotorreceptores finaliza abstração percepção sinais nervosos
 processados retina córtex visual primário captando luz
 olhos função básica captar luz focalizá-la retina uma
 fina camada localizada parede posterior interna composta neurônios
 especializados converter sinais eletromagnéticos neurológicos entende-
 luz visível região espectro radiação eletromagnética visível pelos
 seres humanos possua visão eficiente homem cego à
 ondas eletromagnéticas figura apresenta espectro da
 radiação eletromagnética destacando porção percebida de
 visão espectro radiação eletromagnética destaque porção
 visível caminhos paralelos visÃo
 figura apresenta estrutura olho humano olho apresenta
 funcionamento semelhante câmara fotográfica de
 lentes composto córnea cristalino focaliza imagem retina luz é
 pa inicialmente refratada córnea superfície côncava converte
 raios luminosos interior olho raios refratados terem passado
 córnea humor aquoso atingem superfície curva anterior lente do
 cristalino então superfície curva posterior lente convexa modo raios
 luminosos refratados locais diferentes refrações são
 convergidos focados retina cristalino flexível alongado e
 comprimido ação músculos ciliares alteração do
 cristalino dioptria óptico alterada possibilitando focar objetos
 localizados distâncias diferentes enquanto cristalino responsável pelo
 ajuste fino foco córnea responsável convergência raios cerca alterar dioptria óptico deslocamento cristalino do
 mesmo modo utilizado câmaras fotográficas método não
 seja utilizado primatas animais rã adotam essa
 estratégia schmidt olho humano corte lateral globo ocular sustentado pares músculos são
 responsáveis movimentação conforme mostra figura músculos
 trabalham oposição responsáveis movimento relação
 capÍtulo planos perpendiculares movimentos globo ocular possuem precisão
 ordem minuto arco fornecer ângulo visão no
 mínimo conjunto coleção reflexos precisamente sintonizados incluindo os
 controlam cabeça hubel músculos sustentação globo ocular globo ocular vista
 dorsal disposição músculos cavidade ocular retina
 retina localizada parede posterior olho recebe luz captada
 óptico focalizada imagem retina inicia-se processo
 transformação luz impulso nervoso retina cérebro desprendeu evolução e
 permaneceu conectada nervo óptico composta camadas
 corpos células nervosas separadas camadas sinapses compostas axônios dendritos estruturas retina encontram-se altamente
 organizadas retina placa camada encontra-se
 depositada parede posterior olho possuindo espessura de
 aproximadamente hubel contendo olho retina ampliada apresentando estruturas curiosamente
 última camada retina composta fotorreceptores células nervosas
 sensoriais capazes converter luz sinal nervoso modo luz
 atravessa estruturas retina chegar fotorreceptores caminhos paralelos visÃo
 corte retina mapa distribuição vascular capilares
 pa mácula retina costuma considerada camadas neurossensorial o
 epitélio pigmentar retina sensorial estrutua celular complexa estratificada composta células fotorreceptoras ganglionares interneurais bipolar horizontal amácrina interplexiforme glias retina sensorial subdividi-se em
 partes interna englobando membrana limitante nuclear interna
 células processamento neurológico descritas anteriormente externa constituindo plexiforme externa fotorreceptores retina sensorial
 interna vascularizada vasos sangüíneos oriundos artéria central da
 retina passo retina externa avascular sendo nutrida coróide a
 nutrição atravessa eptélio pigmentar bruno fotorreceptores
 fotorreceptores células nervosas adaptadas responsáveis pela
 conversão sinal luminoso sinal nervoso existem tipos de
 fotorreceptores retina cones bastonetes retina humana contém cerca
 apresenta gráfico ilustra distribuição cones bastonetes longo da
 retina podemos observar cones concentrados região central da
 retina concentração apresenta pico região denominada fóvea os
 bastonetes concentram regiões periféricas tendo uma
 presença praticamente nula região foveal capÍtulo cego
 m
 por
 es
 bastonetes
 onet
 bast
 cone
 cones
 de
 ero
 núm
 fóvea
 periferia nasal
 periferia temporal
 distribuição cones bastonetes longo retina observando distribuição fotorreceptores retina podemos
 observar cego constitui região chega vascularização até
 retina região sai nervo óptico conjunto axônios que
 levam informações processadas retina córtex distribuição longo retina cones bastonetes se
 diferenciam função bastonetes sensíveis luz que
 cones possuindo percepção locais iluminação ou
 visão noturna entretanto resolução cones os
 sensores utilizados visão diurna alta precisão primatas entre
 homem possuem tipos cones sensíveis diferentes freqüências
 pa eletromagnéticas ondas curtas azul médias verde longas vermelho sendo
 cones responsáveis visão cromática figura apresenta as
 curvas sensibilidade freqüência classe cones encontra fóvea devido fato essa
 região retina responsável visão precisão cerca cones respondem azul ficam distribuídos região periférica fóvea formando estrutura anular cones respondem vermelho e
 verde arranjados regular estabelecendo padrões retina razão cones sensíveis vermelho verde tovée caminhos paralelos visÃo
 rção relativaso
 ab
 comprimento onda nm sensibilidade tipos cones retina primatas bastonete
 cone
 rodopsina
 rodopsina
 terminações
 sinápticas
 diagrama esquemático fotorreceptores cones e
 bastonetes tovèe fotorreceptores destaque cone dowling cones bastonetes possuem funcionamentos
 semelhantes baseados moléculas sensíveis luz intituladas rodopsinas o
 conjunto moléculas rodopsinas localizadas segmento exterior células
 fotorreceptoras responsável excitação único bastonete humano
 contém cerca capÍtulo cuja distância moléculas possui cerca tovèe figura apresenta comparação cone bastonete forma
 disposição moléculas rodopsina figura apresenta
 imagem fotorreceptores retina sensorial interna
 décadas acreditava-se única função retina era
 converter luz sinais nervosos transmiti-los córtex entanto existem cerca informações luz absorvida determinado retina a
 informação transmitida córtex nervo óptico conjunto
 axônios células ganglionares existem milhão relação
 células retina sensorial interna evidências indicam retina realize processamentos da
 informação visual goldstein pa bordas marr função importante implementada retina início divisão caminhos
 visuais parvo magno será comentada adiante retina sensorial interna formada tipos células neurais células bipolares células horizontais células amácrinas células ganglionares ver
 figura células tenham sido vastamente estudadas estaremos
 interessados células ganglionares última camada de
 células nervosas retina sendo axônios formam nervo óptico células ganglionares retina primatas encontrados tipos
 distintos células magno parvo shapley perry características campo dendrítico pequeno região foveal que
 aumenta tamanho linear células distanciam da
 fóvea passo células numerosas possuem campo
 dendrítico pequeno mantém tamanho constante longo a
 retina células irão originar caminhos magnocelular parvocelular caminhos independentemente correlacionados percorrem quase sistema
 visual conforme veremos seção propriedade caminhos
 parvocelular magnocelular sugerem correlação direta células
 ganglionares classes fotorreceptores cones bastonetes caminhos paralelos visÃo
 campos receptivos retina
 campo receptivo caracteriza região sensorial influencia
 célula específica campos receptivos encontrados estudados em
 diversos caminho visual retina campos receptivos são
 classicamente estudados células ganglionares modo célula
 ganglionar possui região retina fotorreceptores influencia on-center
 off-center
 on-off
 estímulo
 estímulo
 centro
 Único ponto
 periferia
 sentido
 preferencial
 centro e
 sentido
 periferia
 contrário
 campos receptivos células ganglionares retina center excitação região central inibição região periférica center inibição região central excitação região periférica off respostas movimentos retina campos receptivos caracterizam formarem estruturas
 concêntricas conhecidas centro-periferia apresentando basicamente três
 pa tipos funcionalidade figura exemplos respostas células estímulos seus
 campos receptivos células campos receptivos figura disparam centro campo receptivo iluminado passo as
 células campos figura ocorre justamente contrário as
 células campos receptivos figura sensíveis ao
 movimento respondendo luminoso percorre direção e
 sentido preferencial dowling capÍtulo importante observar campos receptivos sobrepõem modo
 célula fotorreceptora retina campos
 receptivos diferentes células ganglionares hubel campos receptivos difere célula tendo média
 tamanhos menores campo receptivo regiões foveais maiores
 periferia david marr marr campos receptivos retina tornou clássico literatura sendo
 conhecida filtro marr-hildreth descrita laplaciano gaussiana
 equação modelo campos receptivos ganglionares são
 excelentes detectores bordas r
 r
 
 e
 conexÕes retina cÓrtex
 passo caminho visual transmissão informação
 processada retina córtex visual informações luminosas capturadas e
 processadas retina enviadas lgn núcleo geniculado lateral a
 conexão retina lgn realizada nervo óptico do
 conjunto axônios células ganglionares pode-se retina é
 mapeada topograficamente células lgn zeki entretanto mapeamento obedece sofisticadas estratégias privilegiam
 fóvea integração imagens obtidas retinas figura apresenta diagrama caminho óptico imagem é
 focalizada retina então processada transmitida nervo óptico após
 passar quiasma óptico nervo óptico recebe denominação trato óptico chegando lgn núcleo geniculado lateral informação é
 finalmente transmitida córtex axônios células lgn fibras
 denominadas radiação óptica pa caminhos paralelos visÃo
 olho
 nervo óptico
 quiasma óptico
 trato óptico
 lgn
 radiação óptica
 córtex visual primário
 caminho óptico trajetória sinais visuais retina córtex
 visual primário vamos comentar estratégia mapeamento propicia a
 integração imagens obtidas retinas priorização região
 foveal percurso óptico prosseguirmos devemos lembrar cada
 retina dividida partes quadrantes zeki olho
 focaliza imagem sobreposta quadrantes retina figura
 figura apresenta diagrama demonstra mapeamento da
 imagem formada retina etapa caminho óptico para
 compreendermos melhor diagrama devemos observar campo visual sua
 projeção sobreposição retinas região central campo
 visual coloração escura corresponde região imagem será projetada
 região foveal retina regiões periféricas campo visão
 respectivamente periferia retina tipo mapeamento imagem ocorrer retina
 dissemos anteriormente possui região foveal concentração
 fotorreceptores cones dimensão campos receptivos
 ganglionares região modo favorecer tamanho região
 mapa ocorre distorção ampliando região mapa capÍtulo região central
 região periférica
 intermediária
 campo visual
 região periférica
 extrema
 imagem
 projetada na
 retina
 mapeamento da
 retina lgn
 mapeamento da
 retina córtex
 visual primário
 diagrama estratégia mapeamento imagem longo do
 caminho óptico quiasma óptico ocorre integração mapas visuais se
 dividirmos campo visual partes direita esquerda esquerda do
 campo visual projetada porção nasal retina olho esquerdo temporal
 pa retina olho direito passo direita campo visual porção
 nasal retina olho direito temporal retina esquerda modo teremos retina informação partes campo visual direita e
 esquerda nervo óptico retinas chega quiasma
 óptico imagens campo visual integradas mapa retina
 separado informação referente esquerdo campo
 visual integrada informações ambas retinas dirija hemisfério direito
 cérebro acontecendo mesmo integra dirige-se para
 hemisfério esquerdo mapas correspondentes campo visual esquerdo e
 caminhos paralelos visÃo
 direito então enviados lgn trato óptico células lgn a
 retina continua mapeada mapeamento seja relativo topográfico a
 distribuição difere devido quantidade células voltadas região
 central mácula fóvea lgn informações visuais transmitidas
 córtex visual primário células córtex visual continuam mapeando
 topograficamente retina mapeamento demostrado análise de
 lesões zeki campos receptivos verifica-se células adjacentes apresentam campos
 receptivos adjacentes comprovando manutenção mapeamento retina no
 córtex lembrando ocorre distorção devido super-
 representação celular região foveal regiões córtex visual
 apresentam células mapeamento topográfico imagem
 correspondente retina entanto observa-se medida informação
 caminha regiões seguintes campos receptivos embora
 continuem adjacentes aumentam tamanho caracterizando abstração
 informação zeki nÚcleo geniculado lateral
 núcleo geniculado lateral lgn inglês geniculate
 nucleus núcleo talâmico mediação retina córtex visual
 primário informações transmitidas retina sofrem conexão
 sináptica conforme comentamos anteriormente mesmo mapeamento celular das
 informações visuais transmitidas retina mantido núcleo forma
 precisa processamento realizado lgn detectadas
 respostas células impulsos cromáticos iluminação difusa entanto existem evidências ocorram tipos processamentos
 costa estaremos interessados características lgn segregação caminhos parvo magno iniciados retina ii distribuição e
 replicação mapa visual córtex visual capÍtulo camadas
 parvocelular
 camadas
 magnocelular
 núcleo geniculado lateral hubel conforme iremos comentar caminho visual caracterizado
 dualismo caminho parvo magno caminhos iniciem
 pa retina células ganglionares retina observa-se existência duas
 classes celulares divisão marcante ocorre lgn ser
 observada somente função celulares nível
 organização lgn formado camadas conforme podemos
 observar figura camadas caracterizadas por
 células pequenas parvocelulares camadas células magno
 celulares hubel células magno parvo lgn observando características desta
 tabela podemos concluir caminho magno possui características menos
 evoluídas caminho parvo notado principalmente diferença
 resolução velocidade resposta característica
 magno
 parvo
 tamanho soma
 menor
 maior
 sensibilidade cor
 não
 sim
 resolução
 baixa
 alta
 velocidade
 rápidas transientes
 lentas contínuas
 contraste
 sensitivo
 sensitivo
 tabela principais diferenças células magno parvocelular caminhos paralelos visÃo
 característica lgn distribuição replicação do
 mapa visual córtex visual vimos lgn composto camadas
 parvo magno olho sendo mapeado camadas parvo magno modo retina mapeada lgn livingstone hubel evidenciar paralelismo visual podemos supor como
 sistemas computacionais natureza cópias devido a
 necessidade enviá-las sistemas distintos trabalharam informações
 modo independente informações correspondentes aos
 mapas replicados lgn transmitidos camadas distintas córtex visual
 primário v1 pequena parcela seja projetada regiões zeki cÓrtex visual
 processamento visual inicie captação imagem células nervosas retina processamento visual seja abstração informação visual inteligível maquinário neural é
 realizado córtex visual córtex visual localiza lóbulo occiptal ver
 figura encontra região posterior cérebro divisão
 pa broadmann áreas possui aparência uniforme podendo instância reveladas regiões córtex estriado o
 córtex pré-estriado córtex pré-estriado diferentes técnicas ex citoarquitetura citocromo oxidase analisado demonstra composto por
 regiões distintas modo córtex visual composto áreas apresentam características funcionais definidas sendo delas
 respectivamente denominadas córtex visual estriado córtex visual pré-
 estriado regiões apresentam estruturas bem
 definidas colunas etc obedecem hierarquia longo córtex visual espessura formada camadas de
 estratificação citoarquiteturas caracterizadas termos tipo e
 distribuição células neurais seção discutimos organização funcionamento estratégias de
 paralelismo córtex visual primatas capÍtulo especializaÇÃo funcional cÓrtex
 visual
 informações transmitidas lgn enviadas de
 broadmann conhecida córtex visual primário onde
 prosseguem regiões corticais constituem córtex visual as
 regiões córtex visual apresentam modularização hierárquica as
 teorias respeito modularidade córtex visual destaca-se teoria da
 especialização funcional córtex visual zeki shipp zeki shipp córtex visual dividido módulos responsáveis por
 atributos específicos seja especializados agregados função que
 exercem processamento visual estaremos especialmente interessados teoria
 especialização funcional córtex visual levaremos conta como
 inspiração biológica modelos apresentados futuramente nÍveis paralelismo
 avançarmos caminho visual discorrendo organização
 córtex visual comentaremos respeito prováveis níveis de
 paralelismo cortical conforme veremos córtex visual o
 córtex massivamente paralelo conforme mostrado figura paralelismo
 córtex visual apresenta múltiplas escalas micro escala ocorre
 paralelismo neurônios corticais cerebrais diversas evidências apresentam paralelismo escalas celular paralelismo novidade alguma estando presente
 natureza células neurais cuja principal característica receber e
 integrar informações chegam simultaneamente diferentes células além
 disso velocidade processamento individualmente lenta neurônios impossibilitando existência sistemas seriais complexos velozes como
 encontramos normalmente seres vivos fato paralelismo
 encontrado natureza células nervosas motivado intensamente áreas
 redes neurais artificiais paralelismo macro escala vivenciamos evidências todos
 caminhos paralelos visÃo
 pa dias simples fato cérebro possuir hemisférios prova desse
 paralelismo hemisfério cérebro possui processamento independente do
 ponte vista motor sensorial hemisfério responsável metade do
 corpo fato arquitetura composta pares membros olhos ouvidos etc associada composição vista visão
 hemisfério recebe informações responsável metade campo
 visual integração hemisférios realizada corpo caloso gazzaniga micro
 células
 estruturas sub-regiões ex intermediÁrio
 sub-regiões
 Áreas corticais
 macro
 hemisférios
 paralelismo multi-escala estamos especialmente interessados paralelismo entre
 regiões sub regiões corticais evidências indicam paralelismo as
 regiões corticais presentes conexões áreas podemos observar
 regiões corticais enviam saídas região existência
 saídas paralelas indicam replicação dados funcionamento regiões
 paralelo zeki regiões mesmo acontece sub-regiões demonstrando as
 evidências paralelismo paralelismo áreas sub-áreas corticais micro estruturas etc visuais estreitamente relacionado teoria da
 especialização funcional regiões especializadas atributos diferentes
 estariam executando processamento informações paralelo primeira
 evidência comprovar fato ocorre conexão lgn córtex
 visual estriado retina replicada cópias caminho
 parvo magno cópia enviada sub-área distinta de
 comprovando existência paralelismo sub-áreas capÍtulo mesmo tipo paralelismo observado córtex visual pré-
 estriado processado informações visuais enviadas
 novamente cópias retina enviadas regiões distintas
 confirmando arquitetura semelhante observa-se cada
 milímetro envia fibras anatomicamente separadas diferentes áreas do
 córtex pré-estriado fibras possuem diferentes diâmetros indica o
 sinal transmitido velocidades diferentes evidenciando sincronismo cada
 recebe sinais tempos diferentes paralelismo as
 sub-áreas blobs interblobs faixas observa-se formam
 conjuntos arranjos repetidos conjunto formado diversas
 estruturas replicadas indicando ocorrência paralelismo sub-
 enviar sinais córtex pré-estriado córtex estriado v1 envia
 mapas informação visual áreas simultaneamente mesmo
 ocorre transmite regiões arquitetura
 pa conexões apresenta evidências paralelismo áreas conforme
 vamos apresentar futuramente áreas apresentam forte perfil de
 segregação separando sinais diferentes atributos enviando regiões
 especializadas v3 tipo estrutura sugere existência de
 arquitetura estilo áreas segregação mais
 especializadas v3 devido dependência dados devemos observar
 entretanto comunicação córtex visual extremamente complexa ainda
 sabemos respeito arquitetura existem comunicações sub-
 regiões mesma áreas favorecer a
 integração segregação informação diferentes atributos visuais disso devemos observar existe caminho unidirecional as
 informações transitam ambos sentidos camadas superiores da
 hierarquia visual realimentam camadas processo seções estaremos discutindo organização conexões o
 funcionamento córtex visual consequentemente explorando provável
 paralelismo concluirmos seção devemos lembrar forte correlação
 existente distribuição informação paralelismo busca
 paralelismo processamento biológico implica procura distribuição e
 replicação sinas áreas corticais possuem saídas
 paralelas diferentes áreas chegamos conclusão o
 caminhos paralelos visÃo
 visual paralelo-distribuído cérebro divisÕes cÓrtex visual
 fatia córtex visual apresentando áreas zeki córtex visual localiza lóbulo occiptal áreas de
 bradmann caracterizam aspecto respectivamente córtex
 visual estriado pré-estriado córtex visual estriado constitui áreas
 córtex visual conhecido córtex visual primário passo
 córtex visual pré-estriado dividido critérios anatômicos funcionais
 áreas v2 figura apresenta fatia córtex na
 podemos observar localização anatômica áreas córtex
 visual seção apresentamos áreas Área conhecida córtex visual estriado córtex visual primário ou
 broadmann região estudada melhor compreendida
 córtex recebidas processadas modalidades de
 atributos visuais sendo principal função segregação distribuição
 capÍtulo atributos conforme comentamos anteriormente lgn envia três
 mapas replicam informações visuais retina mapa enviado
 camada cortical específica importante observar única área
 cortical recebe informações visuais lgn conexão lgn é
 feita modo encontramos mapas topográficos retina seja células adjacentes recebem informações regiões adjacentes da
 retina modo vizinhanças campo visual precisamente mantidas sendo conhecida córtex retinal devido característica como
 retina visual continua ocorrendo super-
 representação região central campo visual praticamente metade pa responsável processamento costa micrografia córtex visual primário dowling áreas córtex visual córtex visual primário é
 composto camadas conforme apresentado micrografia figura observando figura vemos camadas distinguidas
 imagem camada dividida sub-camadas cada
 camadas apresentam tipo diferenciado composição celular que
 apresentado tabela fibras saem lgn chegam córtex visual primário da
 matéria branca representado letra figura axônios
 provenientes camadas magno celulares conexão neurônios da
 metade superior camada conhecida passo axônios das
 camadas parvo celulares conectam camadas metade da
 camada 4c camada figura apresenta diagrama
 caminhos paralelos visÃo
 simplificado entradas saídas conexões podemos observar
 camadas corticais diferem natureza celular tabela conexões camada
 tipos células predominantes
 astrócitos oligondendrócitos microgliais neurônios
 corpos celulares ovais
 células piramidais dendritos curtos
 células piramidais tamanho médio pequeno
 neurônios estrelados espinhosos neurônios
 poligonais
 provavelmente neurônios piramidais modificados neurônios poligonais pequenos médios células
 piramidais
 várias células neurônios piramidais
 pequenos médios células triangulares
 tabela composição citoarquitetural camada córtex visual
 primário dualidade visual caminhos parvo magno continua presente
 sendo diferenciadas camadas realizam principais
 conexões caminho magno conexão camada envia
 informações camada camada células seletivas
 orientação células apresentam seletividade para
 direção movimento neurônios binoculares seja
 necessitam estímulos ambos olhos apresentam sensibilidade a
 disparidade retinal visão estéreo tovée caminho parvo conectar camadas envia
 informações camadas superiores divide-se novos
 pa caminhos deles relacionado cor denominado p-b o
 relacionado percepção formas precisas orientação estímulo conhecido p-i capÍtulo entrada
 saída
 lgn magno
 lgn 
 outras
 estruturas cerebrais
 áreas
 distantes
 apresentando principais conexões camadas do
 córtex visual primário hubel camadas córtex visual apresentam conexões camadas as
 áreas córtex visual apresentar conexões regiões
 distantes sendo corticais camadas exceções e
 apresentam conexões fora córtex camadas apresentam a
 conexões áreas córtex visual passo
 camadas inferiores projetam conexões córtex para
 colliculu superior volta lgn respectivamente devemos lembrar essa
 estratégia realimentação lgn realizada camada forte evidência
 pré-processamento informação visual realizada lgn caminhos paralelos visÃo
 colunas dominância ocular camada projeção marcadas deoxiglucose hubel vimos seção hemisfério recebe
 informações visuais campo visual composto metades
 olhos recebendo sinais ambos olhos natureza dual da
 informação visual apresenta estruturas córtex visual primário denominadas
 colunas dominância ocular colunas dominância ocular reveladas
 marcações deoxiglucose hubel colaboradores hubel et
 estriado figura apresenta projeção camada córtex visual
 primário revelando colunas dominância dominância ocular mantém
 constante longo espessura córtex apresentando-se entanto forma
 graduada medida camadas distanciam camada recebe
 aferentes lgn dominância ocular demonstra evidências dos
 mecanismos responsáveis integração informação proveniente olho campos receptivos semelhantes encontrados retina no
 lgn apresenta tipos campos receptivos denominados de
 pa simples complexos campos receptivos simples sensíveis orientação e
 estímulos complexos específicos orientação estímulos
 aparecer diversas posições movimentos figura apresenta um
 modelo mecanismo células simples hubel centro-periferia lgn aferem impulsos células simples da
 combinação estímulos ocorre resposta orientação seguindo essa
 mesma filosofia podemos compreender funcionamento células complexas células simples mesma orientação enviam sinais células
 capÍtulo complexas combinação sinais células simples explicaria o
 funcionamento células complexas possuem campos receptivos maiores
 simples respondem mesma orientação indiferente do
 estímulo campo receptivo diagrama ilustrando campo receptivo células simples sua
 composição células centro-periferia lgn respostas a
 estímulos diferentes orientações zeki peculiaridade importante arranjo encontram
 células estimuladas orientação experimentalmente hubel wiesel hubel camadas células mantinham praticamente mesma orientação passo que
 caminho penetração eletrodo tangencial resposta à
 orientação células variavam linearmente longo percurso embora
 houvesse variações abruptas inexplicáveis características inspiram
 clássico modelo hipercolunas apresentado figura integra as
 colunas dominância ocular distribuição células orientação seletiva caminhos paralelos visÃo
 od
 to
 to
 rei
 quer
 rei
 di
 es
 di
 modelo hipercolunas hubel wiesel marcado técnica citocromo oxidase córtex estriado
 apresenta marcas pequenas bolhas inglês conforme
 podemos observar figura vista fisiológico arranjo foi
 observado apresentavam células sensíveis orientação mas
 respondiam variações comprimento onda cor no
 entanto região apresenta seletividade orientação corrigir
 variações abruptas modelo hipercolunas braitenberg braitenberg
 propuseram modelo teórico devido aspecto denominado cata-
 vento braitenberg braitenberg bonhoeffer grinvald vento coincide citocromo oxidase centro cata-
 vento insensível orientação seja região contorna possui a
 pa estrutura orientação seguindo padrão cata-vento coincidir modelo braitenberg explicam
 dualidade caminho parvo celular p-b p-i ocorre caminho
 parvo p-b parvo-blob privilegia informações cromáticas relacionado
 células pertencentes caminho parvo p-i parvo-interblob voltado percepção precisa formas localizando regiões contém neurônios apresentam respostas orientação linhas barras uma
 células respondem orientação possuem campos
 receptivos diferentes simples complexos encontrados respondem a
 estímulos envolvendo cromaticidade lgn encontradas
 células campo receptivo oponência cromática mecanismo envolve os
 pares cores vermelho/verde azul/amarelo ficam arranjados estruturas
 centro-periferia campos receptivos observados uma
 série experimentos psicofísicos goldstein capÍtulo corte longitudinal córtex estriado tratamento de
 citocromo oxidase detalhe corte paralelo linha imagem apresentando camadas estruturas claros são
 zeki discutimos estruturas encontradas córtex estriado visual comentaremos funcionamento termos gerais enfocando
 questões paralelismo principais funções a
 segregação sinais visuais modo sinal lgn separado de
 acordo atributos retransmitido áreas especializadas ponto
 vista paralelismo segregação realizada evidência forte
 paralelismo diferentes áreas perfil córtex visual primário tem
 função divisão tarefas direciona atributo uma
 especialista disso sincronismo sinas comentamos possui fibras eferentes diferentes espessuras indicando velocidades diferentes paralelismo ocorrer diferentes níveis dentro
 córtex estriado seção escala paralelismo
 neurônios forte evidência células simples e
 complexas vimos células simples recebem sinal células centro-
 periferia células complexas células simples evidência paralelismo
 neurônios impulsos sejam integrados neurônio devem concomitantes indicando ocorrência células processando
 paralelamente subindo escala encontramos diversas estruturas replicadas
 indicando paralelismo regiões respondendo diferentes
 caminhos paralelos visÃo
 orientações finalmente encontramos sistemas distintos magno e
 parvos sendo responsáveis diferentes atributos ocupam espaços físicos
 separados ocorra conexões estruturas camadas
 diferentes indicando independência existência paralelismo
 sistemas Área adjacente região explorada a
 pa região explorada córtex visual semelhante diversos aspectos
 córtex visual primário alvo principal fibras aferentes região
 segrega informações visuais distribuindo áreas especializadas modo incorpora modalidades visuais característica
 preserva córtex estriado constância mapeamento retina possuindo células vizinhas campos receptivos vizinhos campo visual uma
 células adjacentes conectam-se células adjacentes
 região campos receptivos apresentamos
 anteriormente encontramos tipo peculiar denominado células
 hipercomplexas campo receptivo semelhante células simples e
 complexas seletivo orientação entanto orientação resposta
 depende comprimento estímulo células complexas é
 indiferente estímulo células hipercomplexas recebem conexão das
 células complexas devido características devem haver conexões
 inibitórias operando conjunto excitatórias possibilitar a
 seletividade comprimento estímulo marcada citocromo oxidase revela estruturas no
 entanto diferentes estruturas comentamos seção
 anterior conforme podemos observar figura arquitetura citocromo
 oxidase apresentada tiras faixas paralelas formam um
 ângulo quase perpendicular faixas formadas conjuntos
 finas grossas pálidas ficam arranjados intercalada capÍtulo regiões macaco esquilo marcadas citocromo
 oxidase zeki faixas finas grossas caracterizam cores escuras se
 diferenciam espessura faixa apresenta cor clara sendo denominada característica pálida sendo conhecida
 estrutura faixas neurônios faixas grossas recebem maioria
 conexões células camada caminho magno suas
 células possuem características semelhantes camada possuindo
 seletividade orientação movimento apresentam disparidade ocular função primordial visão estéreo células estruturas projetam axônios para
 neurônios faixas finas neurônios estrutura sensíveis à
 orientação entanto metade deles responde comprimento onda células entanto verifica-se ocorrência um
 células oponência cromática dupla neurônios áreas
 enviam fibras estruturas pálidas entre
 faixas região possui células sensíveis orientação não
 apresentam sensibilidade direção movimento cor caminhos parvo caminho magno encontrados continuam
 presentes fato divisão caminho visual fica mais
 evidente encontra visível estruturas faixas tal
 divisão demonstração paralelismo apresenta mapas com
 representações distintas separadas independentes praticamente integrais da
 pa retina zeki faixas grossas apresentam mapa orientação movimento caminho magno caminhos paralelos visÃo
 faixas finas mapa cromático parvo pálidas apresentam mapa de
 disparidade orientação relacionada formas alta definição parvo uma
 demonstração mapas possui representação praticamente
 integral retina fato estruturas adjacentes faixas finas grossa e
 pálidas apresentam campos receptivos sobrepostos indicando representam a
 mesma região retinal mapas transmitido áreas
 especializadas atributos específicos modo continuam exercendo papel segregação distribuição sinais Áreas exploração mapeamento detalhado ocorre áreas não
 ocorre córtex visual foi
 descoberta técnica permite revelar arquiteturas modo sabemos respeito áreas estudos fisiológicos entretanto demonstram diferentemente apresentam modalidades
 atributos visuais cor movimento estéreo áreas mais
 especializadas tornando responsáveis atributos específicos situação
 denominado movimento zeki possuir ocorrer especialização atributo específico
 observamos representações tornando mais
 complexas abstratas medida caminho visual adentrando as
 regiões corticais representação topográfica retina encontrada em
 modo previsão campo receptivo células vizinhas
 óbvia característica comprovar
 crescente abstração tamanho campos receptivos o
 tamanho campo receptivo as
 áreas figura contém ilustração apresenta diferença de
 tamanho relativo conseqüente abstração campos receptivos de
 diferentes áreas córtex visual paralelismo áreas devido conhecimento sobre
 arquiteturas sabemos respeito concorrência única
 exceção recebe divisões caminho parvo indicando existência mínimo sistemas independentes subindo a
 escala paralelismo considerando concorrência áreas capÍtulo trazem fortes evidências paralelismo observado se
 considerarmos independência áreas conexões modo
 mapas áreas vimos processados paralelamente se
 estendem áreas caminhos distintos consequentemente paralelos entraremos maiores detalhes assunto seção pa comparação campos receptivos regiões e
 demonstrando aumento tamanho campo receptivo abstração sentido ocorrer previsão trajeto campo receptivo em
 trajeto penetração eletrodo região explorada trajetória
 eletrodo dimensão disposição campos receptivos trajetória
 centros campos receptivos zeki caminhos paralelos visÃo
 conforme comentamos áreas responsável um
 atributo modalidade visão diferencia áreas que
 possuem representações modalidades consequentemente designam papel segregadoras sinal entretanto evidências foram
 encontradas especialmente projeção fibras diversas áreas corticais que
 indicam ocorrência segregação sinal áreas especializadas v3 e
 devemos supor modalidades representadas uma
 áreas dividida atributos distintos idéia torna
 clara medida sendo descobertas áreas satélites v5
 complexa complexa etc zeki áreas especializadas processam mesma modalidade principal em
 controle paralelismo importante observar áreas recebem
 poucas projeção indicando controle regiões é
 realizado regiões especialistas modo existência áreas satélites
 contribui visão modular estruturada córtex visual seu
 arranjo perfil estratégias paralelismo seguir vamos comentar as
 principais características áreas Área adjacente recebe conexões faixas grossas da
 camada caracteriza apresentar de
 neurônios sensíveis orientação possuir células sensibilidade a
 estímulos cromáticos apresentar indicações esteja relacionada o
 processamento dinâmicas dentre áreas especializadas que
 mantém traços ordenações topografia retina alguns
 primatas exceção homens encontrada subdivisão denominada recebe conexões Área recebe projeções faixas finas pálidas dos
 modo subdivisões caminho parvo são
 contidas áreas especializadas apresenta
 hegemonia marcada citocromo oxidase traçar conexões
 neurônios utilização substâncias as
 enzimas peroxidase conexões analisadas sugerem dois
 pa caminhos parvos continuam divididos geram padrões conexão
 capÍtulo distintos modo acredita-se divisão caminho parvo continue indicando portanto existência sistemas independentes encontramos áreas principais características seletividade à
 cor orientação apresentadas células sendo que
 estímulos complexos áreas anteriores a
 sensibilidade cromática simplesmente responder comprimento de
 onda células respondem cor fenômeno denominado de
 constância cromática exemplificada impressão quando
 objeto iluminado diferentes fontes luz comprimentos onda
 diferentes permanece mesma percepção cor goldstein processamento formas objetos demonstradas de
 experimentos realizados macacos estudos eletrofisiológicos de
 respostas celulares lesões toveè córtex visual temporal aparenta ocorrer integração cor a
 objetos neurônios região demonstraram seletivos padrões e
 objetos complexos rostos rol Área recebe projeções caminho magno sendo
 camada faixa grossa caracteriza por
 possuir praticamente neurônios seletivos movimento não
 apresentar respostas estímulos cromáticos associada processamento
 informações movimento estéreo projeta principalmente córtex
 parietal demonstra região continuidade caminho magno integrando movimento estéreo profundidade representações espaciais organizaÇÃo cÓrtex visual
 discutimos áreas compõem córtex visual como
 arquiteturas tenhamos comentado individualmente conexões
 áreas estaremos apresentando seção conexões organização do
 córtex visual estratégias paralelismo segregação e
 integração sinais caminhos paralelos visÃo
 córtex inferotemporal
 córtex parietal
 comp onda direção;
 orientação orientação disparidade disparidade direção;
 orientação disparidade pálidas
 pa faixas finas
 faixas grossas
 comp onda comp onda direção; orientação orientação disparidade disparidade blobs
 interblobs
 comp onda comp onda direção;
 orientação orientação disparidade disparidade lgn parvocelular
 lgn magnocelular
 cones
 bastonetes
 mapa simplificado interconexões córtex visual zeki capÍtulo figura apresenta mapa simplificado interconexões as
 áreas sub-áreas córtex visual considerações faremos decorrer
 seção serão referentes segregação processo visual se
 inicia retina apresenta tipos células especializadas para
 diferentes informações visuais mediante dualismo fotorreceptores que
 mantém conexões separadas camadas distintas lgn podemos
 concluir paralelismo células retina apresenta dois
 sistemas distintos independentes maquinário neurológico conforme vimos seção visão sofisticado mecanismo de
 integração informações campo visual retinas ocorre cruzamento fibras nervo óptico quiasma óptico depois
 disso realizada conexão sináptica núcleo lateral geniculado lgn sinal segregado consequentemente ocorre sua
 distribuição vimos lgn possui grupos distintos células magno e
 parvo relacionados grupos fotorreceptores retina ele
 composto camadas quais correspondem caminho parvo
 celular magno celular quais caracterizam mapas distintos da
 retina divisão caminhos parvo magno teremos ainda
 segregação caminho parvo lgn modo ocorrem projeções
 básicas lgn células caminho magno projetam fibras pa serão relacionadas processamento realizado camada as
 células caminho parvo segmentadas mapas replicados da
 retina projetam mapa será relacionado estruturas outro
 mapa será relacionado estrutura mapa figura simplificado apresenta as
 principais conexões realizadas apresentamos mapa sentido
 conexões bi-laterais sendo uma
 importante característica processamento visual sentidos de
 transferência informações durante processamento referenciada muitas vezes
 literatura levine projeta fibras volta lgn hemisfério cerebral enviada metade retina juntas compõem campo visual córtex visual primário possui uma
 arquitetura colunas dominância ocular tratamento individual cada
 caminhos paralelos visÃo
 retinas binocularidade indica integração as
 imagens retina estímulo celular preferência binocular é
 encontrado cortical sugerindo seja realmente a
 responsável junção sinais organização apresenta sistemas independentes são
 respectivos caminhos incidentes seja caminhos parvos recebem parvo parvo magno devido à
 independência destino principal individual aspecto funcional acredita-se que
 sejam paralelos paralelismo caminhos encontramos
 devido amplo estudo exploração sub-estruturas replicadas
 caminhos replicados indicando paralelismo multi-escalar
 córtex visual primário caracteriza-se segregador distribuidor de
 sinais provavelmente gerenciador escalonador devido à
 diferença diâmetro consequentemente influencia velocidade de
 transmissão fibras modo projeta fibras diversas áreas
 corticais fora córtex visual projeções extra-corticais
 culículo superior lgn etc dentre principais conexões destacam-se as
 projeções áreas especialistas conexões as
 áreas corticais obedecem padrões restritos indicam os
 estímulos sendo transmitidos conjunto mapas recebe mapas relativos caminhos magno parvo parvo caminhos continuam sistemas
 independentes associados estruturas anatômicas assemelham faixas
 faixas grossa finas pálidas projeta fibras as
 áreas especialistas córtex visual v3 esteja representado
 mapa figura áreas apresentam proximidades
 áreas satélites processam mesmos atributos recebem das
 fibras eferentes áreas principais áreas satélites apresentam fortes
 indícios distribuição processamento ocorre áreas zeki função áreas satélites especializadas encontramos peculiar
 diferença áreas possuam características semelhantes segregadoras sinais ambas apresentam conexões regiões
 especializadas somente apresenta conexões áreas satélites pa capÍtulo caminhos visuais projetados áreas mais
 especializadas córtex visual áreas diferenciam e
 lidarem atributos específicos consequentemente por
 apresentarem representações caminho magno correspondente à
 camada faixas grossas projetado áreas
 especialistas principalmente responsável pelo
 processamento formas dinâmicas movimento caminhos
 parvos entretanto projetados única é
 responsável processamentos cor parvo formas alta definição
 cromática parvo áreas especialistas trocam informações essas
 informações permitem enriquecimento informação componentes
 processados dentre comunicações áreas
 especializadas destacam-se conexões zeki zeki existem indicações conexões realizada integração sinais
 processamento formas responsável pelo
 processamento formas dinâmicas enriquece processamento os
 resultados responsável formas cromáticas alta definição vice-
 versa áreas especialistas informação visual transmitida para
 regiões profundas córtex ficando complexa abstrata basicamente encontramos caminhos principais levam sistemas
 visão localizados respectivamente córtex inferotemporal córtex parietal aparentemente conexões extensões caminhos parvo magno são
 bases famosa doutrina doutrina as
 informações visuais separadas primitivas básicas organizadas
 memória associativa delas responsável processamento e
 armazenamento informações relativas localização espaço a
 processamento armazenamento informações relativas às
 propriedades físicas objetos kosslyn doutrina aonde entretanto amplamente aceita meio
 científico sendo duramente criticada autores dentre críticas destaca-se zeki zeki sistematicamente histórico ocorre tentativa neuro-cirurgiões
 simplificarem estratégias corticais devido limitado conhecimento sua
 caminhos paralelos visÃo
 constituição funcionamento zeki mesmo ocorreu teoria da
 plasticidade cortical via cérebro caixa preta nenhuma
 modularidade específica idéia processamento linear da
 informação visual defendida contestada experimentos hubel e
 wiesel estratÉgias integraÇÃo da
 informaÇÃo longo percurso visual
 diversos estudos córtex visual apresentam diversas noções de
 divisão segregação funcional experiência diária visualizando mundo uniforme diferente leva crer unidade campo
 pa visual percepção atributos processados
 simultaneamente percepção seja válida devem ocorrer sofisticados
 métodos processos integração sinais levados lógica podemos supor
 deveria existir região mestre córtex receberia responsável
 integração informações entanto existe região no
 córtex reportam afirmativa válida apenas
 córtex visual córtex sabemos respeito estratégias integração sinais
 utilizadas córtex mesmo explorado córtex visual temos
 nenhum perfil integração diferentemente processos segregação de
 sinais vastamente estudados feito especulações
 estratégias vamos seguir apresentar supostas estratégias
 integração realizada córtex visual base evidências podemos supor estratégias básicas integração estímulos visuais aumento tamanho campo receptivo permitindo células estejam
 hábeis coletar informações partes maiores campo visual que
 respondam conjunto estímulos observamos medida que
 vamos adentrando percurso visual percebemos células ficam seus
 campos receptivos maiores modo campo receptivo das
 células maiores lgn campos
 receptivos maiores menores é
 finalmente comparamos campos receptivos das
 células córtex inferotemporal parietal notamos maiores das
 capÍtulo áreas córtex visual aumento complexidade estímulo ocorre simultaneamente células aumentam campos receptivos automaticamente
 tratam sinais complexos propriedades mais
 específicas figura apresenta exemplos estratégias unificação sinais diferentes fontes representando diferentes atributos
 visuais ex movimento unificação significa necessariamente que
 sinais devam direcionados célula específica possibilidade
 unificação venha realizado células distantes respondendo em
 sincronismo evento comum zeki caminhos paralelos visÃo
 estratégias integração sinal visual aumento do
 campo receptivo complexidade estímulo reta células centro-
 periferia lgn células simples cor projeção células dos
 faixas finas finalmente observar a
 pirâmide projeção movimento enquanto células são
 estimuladas orientação bordas independentes vetor direção
 ocorre integração modo células são
 capazes fornecer direção objeto zeki capÍtulo pa integraÇÃo informaÇÃo dois
 hemisfÉrios
 alto paralelismo processamento visual encontramos
 córtex demonstrado divisão cérebro hemisférios já
 apresentamos aquisição campo visual realizada das
 retinas reorganizadas quiasma óptico modo córtex visual cada
 hemisfério receba estímulos correspondentes metade campo visual exista divisão campo visual visão possui uma
 integração perfeita sendo impossível percebê-la corpo caloso corpúsculo formado aglomeração fibras cuja
 principal característica conexão hemisférios corpo caloso
 áreas pares hemisfério interconectadas cérebro é
 integrado conexões organizadas definida distinta
 áreas corticais formando referencial a
 divisão conectada separadamente correspondente no
 hemisfério oposto exatamente metades hemisfério possuem mecanismos diferentes áreas requerem
 conexões separadas sabemos córtex visual estriado possui mapeamento topográfico
 preciso retina modo esperar regiões
 posicionadas linha divisória campo visual possuíssem conexões entre
 hemisférios fato exatamente ocorre conexões córtex
 visual primário corpo caloso regularidade traça exatamente linha
 meridiano vertical campo visual hemisfério córtex visual primário possui mapeamento topográfico
 preciso retina apresentando conexões corpo caloso presentes
 células linha divisória campo visual traçado
 corresponde exatamente meridiano vertical campo visual medida que
 avançamos córtex visual áreas tornam específicas abstratas consequentemente mapas ficam desorganizados à
 topografia retina conexão áreas corpo caloso formam
 trilha indicação meridiano campo visual células
 correspondentes região encontram-se espalhadas enquanto apresentam estrutura definida traçando limiar campo visual caminhos paralelos visÃo
 possui conexões espalhadas possuem nenhum tipo ordenação
 clara conexão corpo caloso caracterizar diferentes áreas espalhadas córtex definir a
 precisão mapeamento topográfico retina diferentes áreas córtex
 visual corpo caloso evidencia paralelismo hemisférios entre
 áreas caso óbvio simples existência hemisférios
 só prova paralelismo paralelismo entre
 áreas ocorra necessário diferentes áreas córtex visual
 apresentem representação completa campo visual conexão corpo
 caloso independente áreas indicação área
 possui representação completa campo visual conexão
 par hemisfério indicando consequentemente independência
 paralelismo pa capÍtulo capÍtulo
 capÍtulo capÍtulo introduÇÃo
 capítulo iremos apresentar projetos motivaram constituíram
 princípios desenvolvimento apresentado tese conforme apresentamos bases visão natural seu
 processamento paralelo entretanto visão artificial utilizando este
 recurso prioridade pesquisa vasta literatura visão
 computacional visão artificial processamento imagens forte
 tendência seqüencial principalmente fundamentos áreas tomarmos livros clássicos bíblia visão livro david marr marr considerou recurso vimos plenamente explorado natureza
 sistemas visão apresentaremos capítulo projetos audaciosos visão
 cibernética ifsc usp fortemente inspirado biologia especificamente modelo da
 especialização funcional córtex visual sistemas biológicos o
 atributo visual modelo biológico projeto baseado em
 processamento paralelo apresentaremos projetos similares ao
 vantagens desvantagens sistemas projeto ynergos ambiente
 laboratório desenvolvimento análise técnicas visão processamento
 imagens objetivo auxiliar pesquisa implementação caracterização validação métodos realização experimentos áreas ambos projetos possuem comum processamento paralelo de
 algoritmos sistemas visão filosofia processamento linear agregada a
 visão pesquisas abrangentes paralelismo a
 necessidade ferramentas desenvolvimento controle análise sistemas
 paralelos programadores não-especializados computação paralela foram
 capÍtulo principais fatores motivação serão
 comentados capítulo projeto maiores desafios senão visão artificial o
 desenvolvimento visão versátil entendemos visão versátil capacidade de
 adaptar facilmente diferentes situações ambientes como
 realizar reconhecimento visual objetos diversos longo evolução a
 natureza desenvolveu quantidade enorme variada sistemas visão
 versáteis sistemas visão vertebrados dos
 pa vertebrados mesmo primitivos possuem sistemas visão capazes de
 responder variedade objetos diversas situações e
 ambientes despeito avanços tecnológicos científicos sistemas
 visão capazes construir atualmente compararmos o
 aspecto versatilidade reconhecimento objetos medíocres relação
 sistemas visão primitivos vertebrados mesmo de
 invertebrados normalmente abordagem clássica adotada sistemas visão a
 exploração atributos tratamento individual elaborando algoritmos
 sofisticados isolados aprender a
 natureza fato diversos algoritmos eficientes visão nela inspirados entretanto observando divergências sistemas naturais artificiais podemos perceber sistemas artificiais visão ausências algumas
 estratégias utilizadas natureza êxito quais podemos citar estratégias processamento duplo sentido indo nível
 alto sentido inverso paralelismo biologia investiu longo evolução estratégias de
 paralelismo modo possibilitam execução tempo
 real sistemas visão intrinsecamente ligados aos
 mecanismos integração compartilhamento informações modularidade integração presentes sistemas naturais visão são
 fundamentais performance estando intimamente associadas às
 estratégias arquiteturas paralelas adotadas natureza costa hierarquia fundamental organização informação processos ainda
 modo linear conforme sugerido itens anteriores representação visual efetiva costa ambicioso projeto pesquisa fortemente inspirado biologia cujo intuito desenvolvimento visão versátil capaz se
 adaptar modo quase automático diferentes tipos problemas visão costa
 incorporação estratégias paralelismo natureza demonstra
 problema visão necessárias sofisticadas
 representações algoritmos estruturas paralelas/concorrentes atender tempo enorme quantidade dados
 necessários processamento especialmente níveis baixos força
 constituição estruturas modulares hierárquicas capazes trocar
 informações durante processamento efetuando modo integração aprendendo natureza
 engenharia reversa realizada sistemas biológicos linha de
 pesquisa devido sucesso tornando popular modo invés reinventarmos soluções analisamos modo qual
 natureza milhões evolução solucionou problemas linha
 raciocínio pilares fundamentais visão cibernética procura na
 biologia solução problemas visão artificial seguindo estratégia encontramos base visão artificial característica forte inspiração biológica seção vamos apresentar
 principais princípios biológicos processamento representação e
 pa organização incorporados projeto paralelismo distribuiÇÃo processos e
 troca mensagens
 tradicionalmente sistemas visão artificiais seqüenciais figura
 apresenta diagrama visão artificial clássico nele
 encontramos dispositivo aquisição imagens módulo pré-
 capÍtulo processamento realiza operações tratamento imagem um
 módulo processamento primário extrai características básicas da
 imagem bordas módulos de
 processamento atributos extrai propriedades imagem finalmente o
 módulo classificação recebe resultados contrário abordagem natureza longo milhões evolução investiu profundamente no
 paralelismo ensina solução natural visão cena
 aquisição
 pré-
 imagens
 processamento
 câmera
 processamento
 processamento
 processamento
 atributo atributo atributo classificação
 resultado
 diagrama visão artificial clássico pensamos paralelismo à
 mente desempenho basicamente utilizamos paralelismo o
 intuito aumentar performance sistemas necessitem respostas
 rápidas demandem computacional alguma o
 desempenho importante especialmente sistemas de
 visão versátil tentando resolver diversos problemas necessariamente que
 defrontar série envolvidos diretamente com
 processamento tempo real contexto situação agrava visão utiliza algoritmos dispendiosos demandam poder
 computacional tornam muitas impraticáveis especialmente com
 imagens alta resolução devido tempo execução prolongado e
 consequentemente elevado uso recursos computacionais entanto natureza demonstra opção paralelismo se
 deu única exclusivamente devido benefício aumento desempenho uma
 neurônios relativamente lentos paralelismo diretamente
 relacionado inúmeras questões juntas caracterizam sistema
 visual natureza modularizou distribuiu visual modo os
 atributos visuais cor textura formas estéreo movimento etc pudessem ser
 pa executados concomitantemente disso discutimos capítulo cada
 módulos formado inúmeras estruturas concorrentes ademais sinais separados percorrem caminhos diferentes longo o
 caracterizando distribuição conceito módulos e
 múltiplos caminhos paralelismo distribuição processos troca de
 mensagens desempenham papel fundamental informações são
 trocadas módulos diferentes atributos diferentes
 estágios mesmo caminho modo aprimorar processamento
 visual tipo processamento colaborativo teria sentido regime de
 processamento seqüencial cooperativo processamento simultâneo de
 diferentes atributos córtex apresenta integração colaboração de
 diferentes níveis conhecimento mesmo tempo informações são
 processadas alto mesmo ocorre sentido inverso troca
 mensagens sentidos realiza integração informações aumentando processamento reconhecimento padrões sistema
 biológico novamente tipo estratégia teria sentido utilização de
 arquitetura massivamente paralela alta resoluÇÃo representaÇÃo de
 imagens
 lições básicas natureza ensina por
 questões desempenho raro encontrar visão artificial que
 exceda dimensão visão apresentam resoluções ordens maiores retina um
 olhos seres humanos encontradas cerca fotorreceptores indicação podemos tirar diferença que
 resoluções altas aumentar substancialmente performance da
 qualidade reconhecimento padrões resultados técnicas
 processamento imagens capÍtulo evidentemente aumento resolução aumenta
 proporcionalmente custo computacional processamento especialmente nos
 estágios visão modo operam imagem pixel pixel
 usualmente utilizam métodos empregam convoluções tornando mais
 drástico tempo processamento consumo computacional devido
 multiplicações utilizadas levine problema natureza utiliza processamento massivamente paralelo replicando as
 estruturas processamento módulos processando diversos módulos
 simultaneamente mesmo desenvolvendo mecanismos processamento
 paralelo sinais intimamente ligados estruturas aquisição imagem o
 maquinário neural encontrado retina evidencia a
 necessidade paralelismo bases projeto hierarquia
 organização hierárquica processamento característica dos
 sistemas visão artificiais sendo conseqüência natural do
 processamento visual visão primatas hierarquia nítida
 sintetizada seqüência retina núcleo lateral geniculado córtex
 visual áreas corticais alto estágio hierárquico informação visual
 torna compacta abstrata complexa incorporando mais
 pa informações princípios apresentados hierarquia
 relacionada diretamente tópicos especialmente a
 modularidade paralelismo representação visual efetiva trÁfego informaÇÃo sentido duplo
 princípio exerce papel fundamental desempenho do
 reconhecimento padrões sistemas biológicos realimentação de
 informações duplo sentido informação vasta sistemas de
 visão artificial apresentam único sentido tráfego imagem qual
 níveis baixos níveis altos processamento entende-se nível
 processamento processamentos primários tais detecção de
 bordas normalização histograma suavização etc medida as
 informações processadas ficando complexas retas regiões formas objetos etc nomenclatura processamento tornando de
 alto sistemas visão biológicos tráfego informações realizado em
 sentido duplo modo módulos transmitem
 informações alto reverso ocorre grande
 vantagem estratégia informações processadas alto armazenadas processamentos realizados anteriormente enviadas para
 módulos processamento contribuem eficácia e
 performance processamentos enriquecendo informação visual ocasionalmente observamos objeto cena uma
 percepção instantânea condiz realidade muitas fruto de
 erro concebido fluxo informações alto modularidade
 principalmente devido característica plasticidade apresentada em
 determinadas situações córtex primórdios neurociência acreditava-se
 cérebro especificamente córtex massa uniforme dividida
 regiões motoras sensoriais memória associativa zeki antiga crença influencia âmbito computacional inspira em
 neurociências podemos observar redes neurais artificiais
 caracterizadas interconexões uniformes constituídas único
 tipo neurônio artificial pesquisa científica entretanto elucidou e
 pôs crença uniformidade sabemos córtex uniforme apresenta arquiteturas conexões distintas diferentes regiões tomando
 córtex visual capítulo anterior apresenta diferentes
 arquiteturas caracterizam diferentes áreas córtex visual modularidade apresenta sistemas visão utilização uma
 organização lógica estrutural proporciona bases processamento
 paralelo inúmeras vantagens aspectos arquitetônicos que
 vista computacional vitais ferramentas métodos a
 modularização software hardware vitais ciência computação disso podemos citar programação orientada objetos em
 software desenvolvimento circuito integrado hardware capÍtulo representaÇÃo visual efetiva
 questões importantes sistemas processamento de
 pa dados consiste modo informação será representada é
 importante sistemas processamento visual operam em
 quantidades dados armazenados sucessivamente cada
 estágios processamento modelo biológico preocupação a
 representação visual claramente observável vamos tomar o
 visual primatas diferentes representações longo sua
 hierarquia imagem projetada retina convertida sinal nervoso cerca de
 bastonetes possuem sensibilidades distintas modo mapas
 representações específicas retina realizado pré processamento de
 detecção borda maquinário neural culmina células
 ganglionares mapas então reorganizados representações
 compactadas imagens representadas terminações nervosas de
 pré processamento representação efetiva sinal nervo óptico
 desperdiçando recursos natureza prima economizar marr marr contidas bordas suficientes representar cena gânglios retina informação então enviada lgn então
 redistribui representações distintas entradas específicas córtex visual
 primário realizado processamento alto etapa as
 informações representadas arranjar contextos ricos tais como
 mapas cromáticos mapas segmentos retas disparidade movimento entre
 sejam conhecidas representações escalas
 maiores devido comportamento córtex elaborar representações
 abstratas complexas anteriores podemos presumir linha
 raciocínio existem representações abstratas capazes conter forma
 concisa precisa objetos cenas inteiras especializaÇÃo processos
 antiga crença uniformidade córtex influenciar questões
 estruturais arquiteturais vimos seção caracterizou de
 modo impróprio aspecto funcional modo acreditava-se as
 partes córtex eram capazes realizar qualquer tipo processamento que
 existiam centros regiões repensáveis determinados atributos da
 localização broca broca descoberta áreas especializadas córtex visual teoria especialização
 funcional córtex veio consolidar modo apresentar módulos
 perfil arquitetônico estrutural distintos módulos possui
 funções distintas primatas mamíferos ordem superior o
 processamento atributos visuais movimento orientação cor textura etc é
 realizado distintas especializações processamento zeki shipp livingstone hubel julesz possuir diferentes células fotorreceptoras possui caminhos diferentes de
 processamentos magnocelular parvocelular caminhos novamente
 divididos lgn córtex visual modo módulo
 pa especializado córtex visual receba fluxo sinal principal proveniente um
 caminho sinal específico característica fundamentar o
 processamento especializado define distribuído modo a
 especialização processos caminhos vista computacional permite
 alto grau paralelismo integraÇÃo mÚltiplos estÁgios
 princípios discutidos anteriormente modularidade hierarquia paralelismo troca mensagens tráfego sinais duplo sentido e
 especialização processos constituem organização funcional córtex uma
 principais características interconexão módulos caminhos
 especializados atributos específicos diferentes estágios
 hierárquicos denominada zeki shipp zeki shipp múltiplos estágios estrutura módulos especialistas que
 compõem caminho atributo visual trocar informações qualquer
 estágio hierárquico módulos atributos possibilitando complementar a
 informação colaboração módulos permite precisão performance
 melhores reconhecimento objetos regiões imagem capÍtulo colaboração módulos inspirou profundamente projeto constitui atualmente maiores desafios pouquíssimos sistemas
 artificias utilizam características auxílio mútuo módulos quase nenhuma
 referência literatura apresenta integração atributos visão artificial visÃo foveal
 diferença sistemas artificiais naturais está
 presente estratégia aquisição imagens visão artificial tradicionalmente imagens captadas câmeras vídeo estáticas que
 registram convertem cena matrizes lineares dimensões deste
 modo cena capturada armazenada pixels imagens ou
 elementos matriz processados igualmente conforme comentamos na
 seção distribuição fotorreceptores retina linear maior
 concentração região central fóvea região tenha uma
 resolução região foveal compreende uma
 pequena porção campo visual maquinário neural envolvida
 especificamente processamento compreensão total cena visual utiliza a
 movimentação olhos consequentemente fóvea cena processando-a região região figura ilustra situação foi
 registrada percurso região foveal humana cena durante sua
 percepção movimento olhos durante percepção face traços
 figura apresentam região central olhos durante o
 rastreamento percepção imagem dowling instância possa parecer objetiva estratégia
 captar cena só alta resolução matrizes lineares tipo abordagem apresenta diversas desvantagens sistema
 pa foveal quais podemos citar alto custo hardware compactação visão humano não
 fosse foveal complexo células neural caberia
 caixa craniana alto custo computacional preferindo pequena invés campo
 visual computacional economizado considerando-se custosos
 algoritmos processamento sinais tempo processamento elevado custo computacional acarreta tempo
 processamento interação imagem tempo processamento tempo resposta igualmente modo possui
 interação necessária especialmente trata operações que
 envolvem movimentos atenÇÃo seletiva
 paralelismo sistemas visuais naturais possui estrutura
 piramidal base pirâmide formada estágios massivamente paralelos medida escalamos encontramos estágios
 processamento níveis altos paralelismo de
 modo topo pirâmide processos quase seqüenciais atenção seletiva mecanismo sistemas alto
 concentram temporariamente atenção regiões objetos localizados na
 fóvea obtendo análise detalhada elementos imagem assim
 visão foveal cena rastreada região central retina através
 movimentos olhos integrada córtex na
 atenção seletiva detalhe região objeto localizado fóvea rastreado
 atenção dedicada integrados córtex formando um
 conjunto detalhado integraÇÃo nÍveis conhecimento
 maiores
 princípio diretamente relacionado alto aprendizado
 sistemas naturais utilizam processo visual consultas à
 capÍtulo memória realiza análise contexto ambiente localização história comparando cena observações anteriores reconhecidas registradas o
 receber informações adicionais modo proceder o
 reconhecimento figura apresenta percepção é
 fortemente influenciada análise contexto análise retas corredor informação contextual distância modo imagem a
 impressão pessoa distante ocorre situação
 diferente percepção normal treinados longo vidas e
 portanto idéia miniatura observem duas
 mulheres mesmo tamanho imagem entretanto percebemos da
 imagem importância contexto percepção visual humana embora
 sejam mesmo tamanho imagem figura mulher direita parece
 imagem dowling visÃo cibernÉtica pa intuito prover visão versátil nasceu audaciosos
 projetos visão cibernética costa colaboradores costa biológica especialmente modelo integração estágios múltiplos do
 processamento visual cérebro primatas proposto zeki shipp zeki &
 shipp visão versátil tempo real devido dificuldade proporcionada caracter vanguarda
 pioneirismo projeto idealizado plano pesquisa longa duração do
 participarão diversos pesquisadores atualmente projeto encontra-se fase
 inicial consiste implementação protótipos visando estudo do
 comportamento sistemas visão aspecto distribuição integração de
 tarefas desenvolvimento algoritmos eficientes cada
 etapas módulos processamento específico seção iremos
 descrever projeto itens implementação diagrama blocos modelo estrutural apresentando organização adaptado bruno costa costa figura apresenta diagrama blocos modelo estrutural do
 visão cibernética organização conjunto sistemas dedicados responsáveis processamento análise
 independente atributos visuais cor bordas formas textura estéreo etc representados barras horizontais par câmeras responsável pela
 captura imagens módulo controle sistemas dedicados responsáveis processamento atributos
 visuais específicos processamento dividido diferentes estágios que
 capÍtulo obedecem escala hierárquica correspondente de
 processamento visual escala hierárquica processamento visual possui
 natureza similar caminho visual visão biológico vimos
 capítulo inicia-se processamento retina são
 extraídas características fundamentais imagem ex bordas prossegue pelo
 processamento lgn córtex visual primário secundário áreas corticais etapa caminho visual informações tornando mais
 complexas abstratas representativas bordas retas formas >
 objetos modo dedicado dividido diversos módulos sendo
 responsável processamento individual níveis caminho
 visual atributo módulos representados figura pequenas caixas interior
 barras horizontais responsáveis processamento nível
 esquerda alto direita imagem capturada pela
 câmera transmitida módulo processada gera mapa enviado módulo hierarquia assim
 sucessivamente elevado sistemas biológicos ocorre
 sentido inverso fluxo informação indicado duplo sentido das
 conexões módulos ocasiões alto realimenta os
 módulos informações imagens processadas anteriormente pa contribuindo processamento reconhecimento cena sistemas biológicos módulo sistemas dedicados
 possui método representação dados particular estratégia de
 processamento modo módulos possuem
 representações generalizadas abstratas necessitam maior
 espaço armazenamento medida subimos etapas hierárquicas de
 processamento informações ficando concisas específicas abstratas
 consequentemente necessitam espaço armazenamento ocorre alteração evolutiva representação dos
 dados mesmo acontece estratégia processamento módulos de
 processamento localizado independente requer
 operações aritméticas maiores recursos
 computacionais entretanto devido natureza processamento disperso e
 independente níveis baixos possibilitam estratégias paralelismo mais
 eficientes níveis altos envolvem processamentos com
 dependência dados globalizados tornando-se menos
 viável implementação paralela algoritmos chegando níveis
 predominantemente seqüenciais algoritmos classificação conexões horizontais vimos integram diferentes
 módulos processamento atributo específico conexões verticais ligam sistemas dedicados permitindo troca de
 informações atributos conexões verticais ocorre a
 colaboração sistemas dedicados vamos explicar a
 colaboração sistemas dedicados bordas cor suponhamos o
 dedicado processamento bordas consiga definir bordas de
 determinada região imagem então dedicado atributo borda requer dedicado atributo cor informações adicionais essa
 região posse informações recebidas bordas região ser
 reconhecidas sistemas dedicados controlados módulo mestre que
 manipular fluxo informações atributo também
 concentrar temporariamente processamento sistemas uma
 determinada região imagem atributo específico a
 atenção seletiva sistemas biológicos mestre responsável pelo
 gerenciamento base conhecimento global classificação e
 reconhecimento recebe informações resultantes dos
 processamentos atributo dedicado provido de
 base conhecimento utilizada decisões independentes da
 supervisão mestre fluxo execução determinado próprios
 sistemas dedicados tomando decisões base conhecimento mestre responsável processamento total pelas
 decisões foco atenção implementaÇÃo requisitos
 e
 necessidades
 pa seção iremos abordar principais requisitos necessidades e
 dificuldades implementação projeto capÍtulo científicos tecnológicos encontrados visão computacional processamento de
 imagens computação paralela sistemas distribuídos integração atributos
 visuais controle escalonamento tarefas projeto se
 confronta difícil tarefa integrar recursos humanos envolvidos conforme comentamos trata-se projeto ambicioso longa duração que
 utiliza cooperativo diversos pesquisadores passo dado iniciar implementação definição
 plataforma desenvolvimento definição engloba escolha plataforma
 hardware operacional ferramentas linguagens de
 programação decisão requisitos baseada primordialmente nas
 ferramentas desenvolvimento visão cibernética possui como
 plataformas desenvolvimento matlab etter calvert estando membros familiarizados ferramentas a
 escolha óbvia plataforma desenvolvimento projeto fixou-se nestas
 alternativas linguagens cálculo matricial excelentes ambientes de
 desenvolvimento atender requisitos necessários a
 implementação lentas são
 interpretadas possuem versatilidade linguagens uso normalmente algoritmos desenvolvidos ambientes são
 convertidos pascal utilização consequentemente sua
 compilação ambientes delphi builder existem ferramentas que
 possibilitam utilização direta algoritmos ambientes o
 matcom utilizado consularo costa modo par delphi builder adotado plataforma de
 desenvolvimento projeto escolha reduz drasticamente a
 curva aprendizado pois serem populares fácil
 aprendizado membros pesquisadores atuais estão
 familiarizados ferramentas atendem requisitos de
 performance versatilidade manipulação hardware/sistema
 operacional programação orientada objetos oop programação visual efetiva
 baseada integração ferramenta case bruno costa tendo definido plataforma desenvolvimento escolha
 hardwares sistemas operacionais escolha hardware foram
 adotadas máquinas baseadas padrão ibm-pc possuem custo são
 populares performance atingiu estações existem
 máquinas padrão múltiplos processadores cuja freqüência de
 operação aumenta operacional fazer
 escolha base plataformas desenvolvimento sistemas
 operacionais baseados unix ibm-pc possuam vantagens ao
 desenvolvimento sistemas redes computação científica atualmente eles
 pa possuem déficit ambientes desenvolvimento integrados delphi e
 builder programação visual oop base dados etc devido tais
 fatores optamos utilização windows estendida fabricante ferramentas de
 desenvolvimento escolhidas portando-as unix kylix vimos seções anteriores devido inspiração biológica uma
 bases desenvolvimento projeto desafio implementação discutimos a
 importância paralelismo computação sistemas biológicos como
 sendo vitais acarretam série problemas desenvolvimento de
 programas paralelos envolve aprendizado linguagens computação com
 extensões paralelas ferramentas implementação paralela um
 problemas casos algoritmos desenvolvidos deverão
 portados plataforma desenvolvimento dos
 casos adaptados reescritos dificuldades encontradas portar os
 códigos encontramos senão computação paralela sido voltada no
 decorrer história âmbito científico utilização limita casos especialistas modo pensado
 minimizar curva aprendizado linguagens ferramentas a
 computação paralela comentamos principais linhas desenvolvimento do
 processamento imagens sendo objetivo principal esses
 profissionais possam integrar facilmente desenvolvimento sistema
 paralelo aproveitando trabalhos realizados desperdício tempo com
 longo aprendizado exigido domínio ferramentas tradicionais de
 capÍtulo computação paralela deficiência ferramentas desenvolvimento
 paralelo intuitivas sejam fáceis usar insipiência desse
 aspecto ambientes desenvolvimento utilizados fomos
 motivados desenvolver série ferramentas prover paralelismo nos
 ambientes desenvolvimento delphi builder operacional
 windows algoritmos visão processamento imagens paralelos possibilitando deste
 modo integração cooperação diferentes pesquisadores o
 desenvolvimento capítulo descreveremos conjunto de
 ferramentas intitulado cvmp inglês vision message passage modelo computacional
 tendo discutido principais características conceituais de
 implementação vamos apresentar modelo formal computacional escolhido
 base desenvolvimento inicial projeto figura apresenta um
 modelo implementação nele computadores ibm-pc
 conectados via rede representados blocos horizontais cada
 atributo visual estéreo cor textura borda processado máquina
 específica supervisionada mestre processado uma
 única máquina distinta função máquina mestre possui uma
 base conhecimento classificador estatístico base conhecimento é
 alimentada processamento resultados atributos dela e
 bases locais atributo realiza processamento sentido
 pa inverso seja classificação imagem responsabilidade mestre medida realizado processamento sistemas dedicados atributos as
 características sendo extraídas enviadas unidade mestre posse
 características mestre consulta classificador estatístico caso resposta
 consulta seja satisfatória classificação então finaliza o
 processamento caso contrário aguardadas características para
 alimentar classificador resultado seja representativo tenham sido
 extraídas características estratégia classificação demanda seja tentativa classificação característica extraída possibilita um
 aumento desempenho objetos são
 reconhecidos poucas características modo precisa
 executar processos poupando tempo execução do
 desempenho estratégia possibilita melhor controle supervisão
 mestre resultados obtidos classificação mestre obtém uma
 lista características promissoras classificação ágil essa
 informação supervisão concentra recursos priorizar extração
 delas diagrama blocos apresentando organização hardware do
 cyvis atributo imagem sendo processado em
 diferente máquina computadores conectados rede adaptado bruno costa imagens capturadas par câmeras encontra
 conectado atributo estéreo necessita visão binocular sendo atributos recebem informações provenientes câmera poderiam utilizadas câmeras trazendo benefícios informação porém
 custo computacional câmeras conectadas diretamente nas
 máquinas atributos medida exija investimento de
 hardware placas aquisição imagens deverão replicadas
 máquina reduz drasticamente gargalo distribuição de
 imagens experimentos invés arquitetura apresentada na
 capÍtulo figura conectamos câmeras mestre ficava responsável pela
 aquisição distribuição imagens bruno costa entanto gargalo gerado processo distribuição demasiado que
 comprometia desempenho observações do
 cantoni lombardi cantoni lombardi configuração atual tendo definido arquitetura termos hardware sua
 funcionalidade vamos apresentar modelo computacional utilizado a
 implementação paralela dentre modelos formais abordagem paralela optamos paradigma fazenda processadores processor farm bruno &
 costa utilização processador ideal paradigma fazenda
 tradicionalmente envolve processador mestre conectado dos
 casos canais processadores escravos tarefas por
 subproblemas executados independentemente são
 pa distribuídas mestre acordo disponibilidade processadores
 escravos garantindo balanceamento total carga paradigma
 particularmente apropriado comunicação realizada em
 concorrência processamento ocorre transputers inmos caso específico abordagem paralelização baseada versão modificada paradigma da
 fazenda processor farm paradigma fazenda processos
 tradicional conjunto escravos supervisionados mestre estamos referindo aos
 módulos retangulares sistemas dedicados referentes atributos
 cor borda textura estéreo supervisionados mestre diferença
 modelo adotado tradicional módulos responsáveis
 atributos mestre sistemas independentes que
 obedecem paradigma fazenda módulo possui um
 processo mestre controla diversos processos escravos figura os
 processos locais mestre escravos representados letras s
 respectivamente modelo paralelismo adotado tarefas inicialmente divididas acordo os
 atributos mestre distribuídas módulos atributos cada
 tarefas novamente divididas processo mestre módulo
 repassada escravos sistemas biológicos possui mecanismo atenção seletiva cantoni lombardi gonçalves tarefas realizadas mestre modo determinadas
 situações mestre concentrar processamento uma
 determinada região atributo alojando escravos o
 mestre respectivo módulo previstos diferentes tipos recursos se
 classificam natureza execução seguinte paralelismo máquina processos executados único
 computador conectado rede distribuído paralelismo processador processos executados diferentes
 processadores máquinas múltiplos processadores multitarefa processos executados concorrentemente utilizando o
 mesmo recurso hardware mecanismo multitarefa sistema
 operacional máquina específicos processos somente alojados máquinas que
 contém hardware específico exemplos modalidade máquinas com
 capÍtulo placa aquisição imagem dispositivos processamento de
 sinais específicos alojamento distribuição recursos computacionais do
 dividem grupos fixos recursos pertencem determinado módulo atributo unidade de
 controle executam processos associados módulo podendo
 pa redirecionados fins móveis recursos computacionais utilizados qualquer dos
 módulos sejam redirecionados processos mestres módulos caracterizados por
 utilizar recursos fixos escravos tipos grupo
 pequeno escravos fixos somente servir determinado módulo escravos necessitem recursos computacionais
 extra ex hardware específico placa aquisição imagem etc aqueles
 envolvidos base conhecimento módulo escravos
 fixos motivos estratégicos encontram-se condições se
 comunicar eficientemente recursos computacionais determinado
 mestre ex máquina processadores múltiplos motivos mista distribuição recursos parte
 específicos homogêneos invés clássico conjunto homogêneo de
 recursos pool slaves similaridade biológico prima homogeneidade arquitetura processamento diferente módulos distintos possibilidade incorporação hardware dedicado processamento
 específico determinado atributo visual módulos manter dados localmente armazenados bases de
 conhecimentos locais sendo misto conjunto homogêneo específico podemos
 tirar proveito vantagens sistemas recursos específicos descritos
 acima vantagens distribuição concentração dinâmica de
 recursos melhor balanceamento carga sistemas homogêneos sistemas modelos visÃo suas
 comparaÇÕes seção vamos apresentar sucintamente sistemas modelos de
 visão encontrados literatura possuam características similares do
 características imagem versatilidade visão processamento paralelo além
 descrição vamos discutir similaridades diferenças
 relativas inteligente segmentaÇÃo
 nÍvel imagens
 inteligente segmentação imagens llis inglês low level image segmentation proposto nazif levine nazif levine imagens consiste basicamente abordagem problema engloba a
 integração características representação imagens lógica memória
 associativa estágio visão computacional compreensão imagens
 segmentação etapa deve-se extrair algumas
 características básicas imagem possuem informações respeito seu
 contexto bordas linhas regiões etc tradicionais
 limitam-se abordagem seja específicos extração uma
 única característica llis preocupa integração representação de
 diversas características modo formular representação rica e
 pa complexa informação visual problemas visão computacional modelagem dados
 resultantes processamento segmentação imagem modelar uma
 estrutura dados seja significante representação da
 informação dados resultantes apresentarem resposta simplesmente
 imagens realçadas tais resultados demonstram vasta aplicação são
 devidamente significativos armazenamento transporte aproveitamento
 informações níveis superiores processamento principalmente na
 capÍtulo representação informação llis modelo segmentação imagens que
 procura diferenciar-se modelos tradicionais segmentação por
 apresentar propostas motivação biológica memória
 associativa lógica apresentar estrutura representação efetiva
 combinar diferentes atributos visuais analisar traçar em
 tempo execução estratégias processamento apropriadas diferentes
 situações geração base dados do
 processamento realimente conhecimento processamento informação llis baseado regras as
 informações referentes processamento analisadas comparações
 lógicas não-e operações lógicas verdadeiras então os
 predicados seja ações aliadas operadores executados inicializador
 análise linhas
 s
 análise regiões
 l
 t
 t
 análise área
 m
 m
 atenção foco
 supervisor
 diagrama blocos llis llis formado módulos compõem processos controle e
 segmentação memórias associativas conforme apresentado na
 figura dados referentes imagem entrada segmentação estrutura de
 saída armazenados memória stm memória curta duração inglês short term memory passo memória ltm memória longa duração
 inglês long term memory armazenado conhecimento a
 respeito processamento regras lógicas comportamento
 dados regras referentes estratégias controle dados
 contidos stm alterados durante processamento apagados ou
 pode-se inserir dados passo memória ltm fixa podendo ser
 programada regras comportamento processamento pa inicialmente imagem situada stm processada binarizada resultando agrupados linhas produzem mapa da
 imagem resultados armazenados stm inicial do
 mapa então selecionada realizado processamento alto que
 determinará características região tais saturação cor posicionamento e
 relacionamento objetos linhas regiões processamento irá resultar
 características análise comparação tais adjacência regiões relacionamentos frente paralelo esquerda direita etc linhas relacionamento linhas regiões tais região a
 esquerda direita linha linha toca interseciona região etc ainda
 comportamento áreas textura nebulosa sua
 proximidade linhas etc determinadas dependências lógicas podemos denominar
 processamento realizado processamento alto ao
 dedicado fato llis realizado modelo baseado regras regras divididas classes regras estratégia regras controle e
 meta regras regras conhecimento região linha análise ficam
 alojadas memória ltm regras estratégia regras controle meta
 regras executam alteração memória stm destinadas ao
 controle processos ação operam regras conhecimento regras conhecimento responsáveis processamento da
 segmentação nelas tomados pares conjuntos informações de
 propriedades referentes linhas regiões áreas sendo então comparadas
 logicamente caso situações lógicas satisfaçam decisão lógica então é
 executada ação respectiva funcionamento regras simples conforme podemos observar figura formato de
 regra conjunto combinações lógicas do
 ação executada caso condição seja satisfeita conforme comentamos regras ficam alojadas memória ltm executam ações memória
 stm dados armazenados stm condition actions
 capÍtulo there low difference region feature there low difference region feature there low difference region feature then merge the regions
 regras modelo tendo comentado modelo baseado regras voltemos após
 realizada segmentação definidos mapas fica
 controle módulo supervisor figura módulo foco atenção
 seleciona determinada realizado processamento regras
 módulos análise linha região figura irão alterando
 dados memória stm realimenta finalizado o
 processamento atenção iniciado processamento nova
 atenção sucessivamente visitado áreas de
 atenção imagem determina então existe necessidade de
 processar áreas caso afirmativo repete visita áreas caso o
 tenha visitado focos áreas atenção processa o
 mapa imagem finalizada segmentação imagem pa positivos llis
 característica interessante elaboração uma
 estrutura dados armazenado conhecimento pode
 compartilhado diferentes heurísticas caso llis informações sobre
 linhas regiões compartilham mesma estrutura dados estrutura torna-se
 interessante apresentar possibilidade flexível outras
 heurísticas combinação heurísticas processamento caso
 processamento linha região forte proposta abordagem interessante adotada seleção
 determinadas áreas imagem concentração atenção enfoque de
 processamento áreas abordagem fortes bases biológicas
 kosslyn interessante mecanismo realimentação fluxo inverso informações em
 tempo execução resultado regras alteraram mesma memória em
 dados características imagem armazenados ocorre então uma
 realimentação natural ocorrendo somatório processamento que
 vir enriquecer qualidade processamento negativos llis
 maiores desafios visão computacional segmentação baixo
 determinar linha começa termina faz
 laço paralela apresenta descontinuidade apresenta
 determinada textura possui segmentação nebulosa obter as
 características regiões tarefa extremamente difícil encontra
 plenamente aberta pesquisa proposta llis necessário pré-
 segmentação imagem modo devolva propriedades características
 retas regiões imagem porém extração informações longe
 trivial existindo algoritmo capaz fazê-lo eficiência
 exigida suposto modelo aspecto encontramos principais falhas modelo llis modelo baseado regras segmenta fato imagens executa
 operações lógicas alto dados extraídos autores não
 comentam algoritmo consegue extrair informações imagem original
 performance suficiente operar gramática regras apresentada no
 artigo llis versus semelhanças podemos observar proposta sistema
 processamento específicos linhas regiões áreas mesmo modo o
 cor estéreo borda textura semelhança utilização um
 módulo controle supervisionar módulos processamento embora
 possuam semelhanças abordagem difere paralelismo solução adotada visão natural capítulo para
 resolver diversas questões integração sendo llis é
 essencialmente serial devido modelagem baseada regras predicados
 capÍtulo inteligência artificial convencional pa possuírem módulos distintos diferentes tipos de
 processamento similaridade sistemas tentativa de
 compartilhamento informações módulos melhorar a
 interpretação processamento imagem porém maneira realizada a
 abordagem diferenciada llis memória global
 compartilhada stm dados processamento estarem
 compartilhados dividem mesma estrutura dados passo o
 módulo informações trocadas mensagens entre
 módulos supervisor visÃo mit massachussetts
 institute technology visão mit apresentado poggio weinshal poggio &
 weinshal sistemas biológicos realizarem processamento visual primeiros
 estágios integram diferentes atributos processamento cena realizar a
 interpretação fato constatado literatura autores acreditam a
 chave características flexibilidade reaproveitamento robustez dos
 sistemas biológicos inspirado integração diferentes atributos visuais realizado sistemas biológicos proposto sendo proposta
 integração desenvolvimento algoritmos paralelos visão organização observada figura das
 intenções explorar desenvolvimento algoritmos paralelos para
 visão imagens processadas paralelamente diferentes
 algoritmos módulos correspondem diferentes propriedades visuais além
 módulos responsáveis diferentes atributos sendo executados paralelo algoritmos compõe módulo igualmente executados
 simultaneamente constituindo abordagem altamente paralela sistema
 possui plataforma computador massivamente paralelo mit o
 connection machine almasi gottlieb módulos caracterizados diferentes atributos visão
 utilizados processamento borda estéreo cor textura e
 movimento módulos executados concorrência do
 processamento gerado mapa descontinuidade global mapa resultante formado integração mapas módulo informações
 complementares imagem
 original
 cor
 textura
 borda
 movimento
 estéreo
 nhas processos
 ntínuos
 li
 co
 pa descontinuidades
 mapa
 físicas rotuladas
 final
 diagrama organização máquina visão mit seguir vamos descrever sucintamente módulos de
 processamento detecção borda módulo detecção borda procura encontrar
 descontinuidades brilho imagem realizar processamento são
 utilizados algoritmos cruzamento do
 laplaciano gaussiana marr canny gonzalez woods usado módulo estéreo movimento passo canny entrada
 integração utilizando campos markovianos estéreo realização processamento visão estéreo requer
 dispositivos aquisição imagem diferentes deverão focalizar a
 mesma cena porém ângulos diferentes cena seja mesma capÍtulo devido binocularidade ocorrerá disparidades imagens módulo de
 estéreo consiste encontrar disparidades imagens gerando deste
 modo mapa disparidades movimento módulo movimento objetiva cálculo campo fluxo óptico procedimento consiste armazenar vetor imagens comparar suas
 disparidades resultantes movimento considere uma
 imagem imagem formada instante seguinte encontrada disparidade obtido um
 mapa descontinuidade contendo bordas objetos movimento cor módulo cor consiste encontrar fronteiras superfície função
 reflectância espectral seja descontinuidades cromáticas imagem textura módulo textura dedica-se encontrar descontinuidades entre
 regiões preenchidas padrões semelhantes resultado processo
 converge mapa fronteiras regiões textura módulo é
 utilizado versão simplificada algoritmo paralelo textura desenvolvido por
 voorhees poggio voorhees poggio módulos processados paralelamente originando mapas de
 descontinuidade mapas contém informações características de
 atributos respectivos módulo objetivo do
 integrar módulos obter mapa descontinuidade enriquecido características específicas dos
 atributos cor borda estéreo movimento textura resultado desta
 integração mapa bordas imagem original existam
 inúmeros algoritmos obtenham mapas bordas contribuição dada pelo
 visão mit mapa enriquecido integração inúmeros
 atributos contendo modo concentrada filtrada diversas informações o
 resultado proveniente processamento atributos esparso e
 ruidoso adoção modelo mrf realizada integração diferentes
 atributos simultaneamente filtragem ruído originando mapa mais
 confiável pa seja incorporar diferentes atributos realizar processamento imagem a
 filosofia estrutura estratégia sistemas divergente discutiremos diferenças sistemas relativamente seguintes
 tópicos estrutura hierarquia organização dados aspectos computacionais estrutura
 estrutura sistemas grosso modo parecida ambos
 sistemas visão computacional tempo real plataforma
 computacional paralela sistemas processam diferentes atributos
 mesma imagem tentam integrá-los obtenção único resultado para
 atributos sistemas adotam módulos algoritmos
 independentes realmente diverge organização transferência dados hierarquia sistemas mit vision machine módulos apresentam ordem
 hierárquica definida módulos processados paralelamente sem
 dependência dados maneira síncrona processamento todos
 módulos então realizada integração resultados obtenção um
 mapa resultados abordagem existe hierarquia processos nem
 mesmo dados única preocupação integração estatística dos
 resultados modelo campos aleatórios markov mrf diferentes níveis hierárquicos ocorre dependência dados deste
 modo módulo detecção borda hierárquico alto
 poderá executado resultado módulo cor nível
 hierárquico inferior hierárquico alto módulo detecção
 borda necessita informações cromáticas imagem modo estratégia integração sistemas é
 diferenciada vision machine integração resolvida único
 processo matemático mrf processamento modo ameno módulos hierarquia superior como
 entrada dados resultados módulos hierarquia inferior modo
 realizada integração diferentes módulos mesmo atributo de
 necessitar resultados níveis hierárquicos baixos mesmo
 capÍtulo módulo existem módulos necessitam dados provenientes de
 módulos atributos diferentes módulos responsáveis integração
 diferentes atributos ocorre diferentes etapas singularidade inverso hierarquia processamento propagation propriedade faz
 seja módulo alta hierarquia requerer módulo de
 baixa hierarquia seja executado novamente passar parâmetros complementares
 obter informações anteriormente foram
 extraídas organização transferência dados
 devido diferença estrutura hierarquia organização e
 transferência dados apresenta diferentes aspectos caso vision machine estrutura dados comum módulos o
 pa resultado módulo constituído mapa descontinuidades bastante
 semelhante módulos escala hierárquica não
 ocorre dependência dados resultados módulos atributo
 semelhantes serão integrados mesmos passos modo da
 transferência dados unidimensional estimulada a
 comunicação módulos diferentes atributos organização dados diferentes módulos atributos diferentes níveis
 hierárquicos medida subimos escala hierárquica dados tornam-se mais
 compactos informações simbólicas modelo ocorre dependência
 dados processos seja processo executado enquanto
 tiver resultado processo hierárquico inferior diferente da
 estratégia utilizada vision machine integração ocorre estágio de
 integração matemática mrf organização dados ocorre módulo mesmo modo organização dados fluxo transferência
 altera decorrer níveis hierárquicos baixos a
 transferência módulos envolve quantidade dados uma
 freqüência baixa medida vamos subindo escala hierárquica pacotes de
 dados diminuindo fluxo transferência aumentando aspectos computacionais
 sistemas utilizam estratégias paralelização vista
 computacional utilização microcomputadores padrão interconectados rede e
 multiprocessados abordagem algoritmos sistemas distribuídos
 máquinas então processados modo síncrono abordagem além
 desempenho visa padronização custo mit vision machine adota plataforma computação
 paralela desenvolvido mit denominado connection
 machine super computador massivamente paralelo almasi gottlieb abordagens diferentes mit vision
 machine utilizando plataforma exclusiva deixa isolado sem
 portabilidade porém plataforma poderosa possui características
 singulares computação paralela possibilitando pesquisa abrangente
 consequentemente melhor desempenho oposição estratégia desempenho portabilidade custo modo utiliza plataforma
 popular pcs barata trazendo benefício padronização e
 portabilidade modelo visÃo kosslyn
 modelo kosslyn apresentado livro image and brain kosslyn vista percepção visual modelo kosslyn refere-se às
 imagens mentais formadas cérebro mentalizamos
 simples objetos ambientes inteiros desejamos consultar base dados de
 relembrarmos objeto ambiente precisamos extrair informações contidas
 memória informações entanto compiladas pelo
 pa processamento cerebral armazenadas otimizada lembrarmos por
 cores faixa dorsal famoso fusca hollywood herby meu
 fusca falasse walt disney encontrar informação memória
 associativa referente imagem carro compreendermos imagem lembrarmos detalhes armazenada em
 memória visual informação memória visual
 capÍtulo poderemos mentalmente imagem fusca então novo
 processamento detalhes relembrar coloração das
 faixas marcavam carro logotipo formado experimentos demostraram fenômeno formação imagens mentais
 possuem linha processamento modo podemos constatar o
 compartilhamento áreas processamento visual alto percepção
 mentalização característica biológica conexões levam
 informações áreas processamento alto níveis superiores existem
 aproximado percurso inverso fortalecer ainda
 modelo busca informação
 seletor atenção
 mapa
 módulo propriedades espaciais
 visual
 memória
 associativa
 janela de
 atenção
 módulo propriedades objetos
 regras modelo kosslyn propõe interessante modelo processamento visual alto
 modelo apresenta empírica compartilhamento e
 reconstrução imagens mentalizadas figura apresenta modelo de
 kosslyn devemos lembrar refere modelo identificação de
 objetos compartilhado percepção mentalização vamos descrição elementos do
 modelo mapa visual entrada informação provinda olhos porém
 processada topograficamente regiões janela atenção Área mapa visual destinada processamento
 detalhado módulo propriedades objetos ventral áreas do
 cérebro lóbulo occipital inferior lóbulo temporal inferior macacos podemos ventral inclui regiões teo as
 células regiões tipicamente respondem propriedades objetos como
 cor textura principal função codificação informações o
 armazenamento memória associativa módulo propriedades espaciais dorsal áreas
 pa formadas regiões conexões lóbulo occipital lóbulo
 parietal denominado responsável pelas
 informações localização navegação principais propriedades processadas
 localização tamanho objetos dorsal funciona
 simultaneamente ventral principais funções dorsal codificar informações que
 utilizadas primeiramente guiar ações movimento olhos memória associativa saídas sistemas dorsal ventral chegam
 simultaneamente armazenadas memória associativa memória
 associativa dados armazenados somente representações de
 percepção modo abstrato nomes categorias partes de
 pronúncia etc casos informações enviadas sistemas dorsal ventral
 suficiente selecionar representação adequada memória
 associativa modo identificação realizada é
 realizar identificação dados então solicitar
 coleta dados busca informação dados codificados sistemas
 ventrais dorsais implicam inicialmente objeto específico informação
 coletada circunstâncias precisamos olhar aleatoriamente
 objeto coletar informações adicionais busca de
 capÍtulo informação realiza processamento seja procura informações
 memória associativa relevantes informações anteriormente obtidas o
 gera então informações guia obtenção das
 informações auxiliares necessárias identificação modo sistema
 visual saberá exatamente procurar tentativa reconhecimento seletor atenção processo somente acesso à
 informação necessário acionamento mecanismos dão
 atenção região visual objeto cena possuem informações
 características mecanismo atenção seletiva posiciona corpo cabeça olhos
 janela atenção porção imagem processada mais
 detalhes tendo brevemente discutido componentes modelo kosslyn vamos
 descrever funcionamento percepção termos sucintos a
 imagem proveniente retina processada áreas processamento de
 então transmitida mapa visual imagem contida mapa visual
 então codificada representação memória associativa processamento ocorre simultaneamente sistemas dorsal módulo de
 propriedades espaciais ventral módulo propriedades objetos onde
 respectivamente propriedades localização propriedades cor textura borda etc codificadas representação codificada objeto então
 transferida memória associativa caso informações estejam satisfatórias
 existam dados coerentes objeto memória associativa então objeto é
 reconhecido caso contrário módulo busca informação irá pesquisar na
 memória associativa quais informações características necessárias essas
 informações então transmitidas seletor atenção posicionará a
 janela atenção mapa visual e/ou solicitará detalhes imagem o
 visual caso tenha necessidade coletar imagem atenção
 pa seletiva então informação contida janela atenção será processada
 novamente passando ventral ciclo repetido o
 objeto identificado mentalização imagens mesmas áreas utilizadas embora
 exista compartilhamento utilização modelo diferente por
 caso herby perguntamos cores formas listras
 dorsais logotipos carro precisaremos mentalizá-lo possamos
 recordar módulo busca informação busca memória
 associativa encontrar representações carro feito imagem é
 reconstruída mapa visual tivesse sido originada percepção do
 óptico mecanismo seletor atenção posicionará janela atenção
 porção imagem contém informações necessárias imagem será
 então reprocessada ventral possa ocorrer identificação
 cores formas listras supondo recordamos logotipo pois lembramos dele lateral carro mecanismo seletor de
 atenção irá então posicionar janela atenção adequada para
 detalhar logotipo processamento ventral novamente consultas na
 memória associativa podemos identificar logotipo cor o
 presente principais diferenças percepção mentalização imagens
 imagens desaparecem rapidamente processo mentalização imagens mentais criadas imagens armazenadas diferentemente
 imagens processo percepção originadas mundo
 exterior imagens mentais diferentes percepção recriadas diferentes
 modos podemos rotacionar objeto ampliar detalhe mudar a
 distância movê-lo etc modelo kosslyn mesmo sendo modelo kosslyn visão alto diferentemente do
 motivações biológico realizada modelagem processos alto nível
 visual humano modelo caracteriza paradigma dos
 caminhos what/where teoria baseia dualidade dos
 caminhos informações visuais córtex entanto teoria recebeu duras
 críticas literatura sendo simplificação problema complexo
 zeki modelo kosslyn sinais atributos agrupados dois
 conjuntos integrados sinais referentes caminho cor linhas capÍtulo formas etc separados integrados separadamente sinais referentes ao
 caminho movimento estéreo etc agrupamento sinais ocorrer integração qualquer
 combinação atributos mecanismos atenção seletiva explorados modelo
 kosslyn conforme podemos observar figura módulos que
 pa compõe modelo voltados atenção seletiva realizada mestre entanto modelo kosslyn nos
 sugere complexa necessita mecanismo robusto
 implementação podendo levar decorrer projeto incorporação módulo específico modelo entretanto explanação detalhes módulo por
 procura informações memória associativa descrita forma
 subjetiva atenção seletiva modelo kosslyn fortemente
 baseado divisão sinais onde/o caminho ou
 propriedades objeto envolvidas diretamente processo seemore
 abordagem clássica sistemas visão artificial análise
 profunda característica atributo marcante extração de
 propriedades classificação objetos ultimamente podemos observar a
 tendência seguir mesma abordagem estabelecida sistemas visão
 biológica seja combinação diversos atributos classificação de
 objetos visão artificial seemore autoria barlett mel mel visão combina diferentes atributos da
 imagem classificação efetiva objetos funcionamento básico consiste extração número
 características imagem eventual classificação de
 ferramentas estatísticas analisar treinadas classificação espiral telefone imagens complexas dimensões o
 seemore demostrou capaz reconhecer imagens diferentes ângulos e
 escalas variando fator imagens capturadas mesmo
 ambiente iluminação normalizada treinamento seemore consiste captura diferentes vistas
 objetos dependendo natureza objetos rígidos necessários vistas diferentes ângulos variando intervalos esfera visual objeto imagens escaladas vista tendo aleatório diferentes posições escalas processamento seemore consiste extração características imagem característica denominada canal o
 conjunto canais constituem vetor características entrada o
 classificador estatístico modo banco dados objeto possui um
 total canais cor quais correspondem pequenos nódulos
 parametrizados melhor matiz saturação canais cantos parametrizados ângulo abertura canais características parametrizados principal alongada ou
 arredondada tamanho objeto canais características contorno canais textura baseados saída função gabor faugeras processamento seemore seqüencial mesmo existindo
 dependência dados módulos possuindo estrutura permite
 pa exploração paralelismo levada conta autor modo execução realizada modo extrair as
 características montante características enviadas classificador estatístico compara o
 resultado atual banco dados formado treinamento o
 reconhecimento objeto combine diversos atributos reconhecimento objetos o
 seemore possui estrutura simples existe integração atributos estratégias paralelismo análise dados
 automática cooperação atributos análise caminho inverso visão simplificada podemos resumir seemore um
 extrai características cena análise
 capÍtulo prévia direcionamento alimenta parâmetros um
 classificador estatístico modo visão ensinar aprender seemore mesmo
 possuindo arquitetura simplificada termos visão resultados de
 reconhecimento apresentados revelam performance ainda
 resultados reconhecimento mel mel compara performance classificação seemore utilizando um
 atributo cor textura combinação atributos resultados
 demostraram eficiência classificação alimentada dados dos
 diferentes atributos dado relevante combinar atributos desempenha integração cooperação execução seemore seqüencial mesmo possuindo dependência
 dados hierarquia rígida facilita implementação paralela questão
 abordada diferentemente filosofia implementação paralela principais objetivos projeto ynergos
 desenvolvimento sistemas realização experimentos visão apresentam-se série dificuldades devem vencidas esforço a
 experimento possa realizado êxito dentre dificuldades podemos citar validação técnicas bastante
 trabalhoso certificar técnicas algoritmos funcionando perfeitamente implementação correta algoritmos muitas direcionados linguagens
 modelagem ex matlab iii análise estatística dados obtidos partir
 processamento muitas diversos atributos extraídos imagem
 classificam-na modo igual tornando-se redundantes algumas
 ocasiões atributos extraídos distinguindo adequadamente
 diferentes classes sendo necessário adição características normalmente pesquisadores desenvolvem algoritmos específicos a
 realização testes análises estudam experimentos para
 melhor compreensão problemas apresentados acima entanto é
 trabalhoso custoso implicando tempo o
 desenvolvimento sistemas experimentos problemas comuns área
 visão motivaram desenvolvimento ferramenta auxiliar a
 pa pesquisa experimentos desenvolvimento sistemas visão projeto ynergos bruno ferramentas auxiliar desenvolvimento sistemas experimentos em
 visão ynergos composto conjunto módulos caracterizados por
 ferramentas atuam áreas específicas principais módulos ynergos
 pesquisa visão computacional módulo inclui ferramentas tradicionais
 visão computacional processamento imagens tais fourier e
 métodos transformação detecção bordas segmentação de
 imagens etc pesquisa visão biológica composto ferramentas diferentes
 atividades relacionadas visão biológica psicofísica síntese e
 modelagem estruturas biológicas análise dados classificação módulo tratados procedimentos
 reconhecimento padrões análise classes funções estatísticas sendo
 útil auxiliar validação características validação testes módulo contém métodos verificação integridade
 rotinas implementadas avaliar melhorar performance
 algoritmos base dados base dados imagens dados genéricos fornece alicerce
 diferentes métodos tais performance algoritmos validação selecionador automático características possam agir computação paralela abordagem responsável auxílio em
 implementações aplicações tempo real paralelização de
 algoritmos base paralela adotada ynergos cvmp capítulo inteligência artificial encontram rotinas aquisição conhecimento
 sistemas especialistas experimentos algoritmo genético
 goldberg mineração dados data mining módulo refere funções para
 encontrar regras gerais conjuntos dados usadas para
 modelar estruturas biológicas aquisição conhecimento sistemas
 especialistas visualização gui módulo responsável visualização científica dados da
 interface usuário máquina capÍtulo internet interação internet diferentes situações síntese geração
 automática documentos html dados provenientes www internet via cgi-bins perl java interação aplicativos externos módulo responsável permitir o
 ynergos possa interagir comunicar aplicações tais matlab
 adobe photoshop tornando-o versátil ambiente investigação de
 imagens principal idéia trás projeto
 ynergos auxiliar o
 desenvolvimento sistemas experimentos conceito sinergia se
 exprime sentença soma partes deste
 modo resultado união diversos métodos computacionais único
 pa soma partes vantagens
 desvantagens relativas módulo complementar usuÁrio
 i/o gui gerÊncia
 biblioteca prÓpria
 programas
 databases
 aplicaÇÕes
 internet
 computad remotos
 modelo camadas ynergos modo ynergos caracterizado sofisticado
 laboratório visão desenvolvidos poderosos
 experimentos baseados interação módulos figura apresenta
 modelo camadas expressa arquitetura ynergos sendo
 implementado principalmente colega luís augusto consularo
 consularo plataforma windows programação visual bases dados programação internet cgi-bin programação
 orientada objetos oop modo contribuído implementação
 efetiva conceitos envolvidos projeto características ynergos natureza paralela distribuída implementação paralela distribuída sendo implementada utilizando as
 ferramentas cvmp cybernetic vision message passage capítulo tendo
 plataforma computacional máquinas ibm/pc conectadas via rede ou
 processadores multiprocessadas operacional windows adoção plataforma windows adotada preferencialmente as
 máquinas ibm-pc atingiram alto performance ex portabilidade popularidade hardware software iii baixo
 custo paralelismo visÃo desafio
 capítulo discutimos apresentamos sistemas visão artificial
 necessidades paralelismo entretanto demanda paralelismo nas
 áreas relacionadas visão computacional ampla que
 envolve manipulação quantidades dados imagens sendo
 processados elevado operações aritméticas que
 consequentemente resulta consumo computacional tempo da
 desempenho existe integração colaboração atributos
 visuais conceitos estejam fase inicial pesquisa motivados
 sistemas biológicos acreditamos paralelismo soluções essas
 questões visão computacional diversas áreas científicas que
 necessitem computacional venham beneficiadas a
 utilização paralelismo barreiras freqüentemente impedem adoção tais necessidade escrever código voltado paralelismo muitos
 casos alterar estratégia algoritmo gerando aumento na
 pa implementação algoritmos permitindo utilização códigos já
 desenvolvidos programas paralelos obedecem princípios funcionamento de
 programação diferem seriais dificulta implementação vez
 formação típica programadores processamento seqüencial sendo necessário conhecimento princípios básicos paralelismo e
 ambientação código paralelo voltado determinada arquitetura paralela capÍtulo reduzindo portabilidade código padronização necessidade mudar linguagem ambiente desenvolvimento poucos
 ambientes programação apresentam soluções implementação de
 código paralelo especialmente comerciais integrados visuais delphi builder visual visual basic sendo necessário situações a
 mudança ambiente mesmo linguagem programação reutilizar código programadores obrigados a
 aprender operar ambientes linguagens familiarizar ferramentas linguagens programação voltadas ao
 paralelismo caracterizam serem voltadas especialistas em
 computação paralela preocupando programador comum com
 dificultam implementação programas concorrentes aumentam
 drasticamente curva aprendizado hayes alto custo especialmente soluções paralelismo envolvem
 computadores arquiteturas convencionais analisando barreiras podemos constatar maiores empecilhos para
 desenvolvimento programas paralelos relacionados humano observarmos história ciência computação verificaremos importância
 interação homem computador consequentemente interação e
 simplicidade uso ferramentas operação programação idéias simplificar modo operação ferramentas computacionais são
 conceitos atingiram ápice pesquisa projeto parc bruno objetos linguagens visuais smalltalk hurson graças elementos páginas viradas história computação a
 informática impulso expansão chegando parte
 direta indiretamente atividades científicas importância ferramentas simples desenvolvimento programas
 observada popularidade plataformas computacionais sendo principal motivo difusão windows apresenta diversas
 ferramentas possibilitam criação aplicativos maneira simples destacando visual basic linguagem iniciantes simples utilizar que
 possui aplicativos desenvolvidos conceitos interação homem máquina sejam
 consagrados amplamente difundidos empregados forma
 efetiva computação paralela provavelmente natureza
 científica aplicação restringe científico e
 pa consequentemente ecléticos especialistas computação paralela devido demanda paralelismo visão computacional mais
 especificamente projetos visão cibernética carência de
 ferramentas simples utilização implementação paralela compatíveis com
 linguagem ambiente programação vigentes motivados a
 desenvolver conjunto ferramentas implementação aplicações
 paralelas viessem atender necessidades nasceu cvmp vision message passage será
 apresentado capítulo conjunto ferramentas visuais a
 implementação aplicações paralelas simples utilização voltada visão
 computacional cvmp pesquisadores visão cibernética
 necessitam mudar linguagem ambiente desenvolvimento a
 implementação programas concorrentes poupando árduos treinamentos longos
 períodos familiarização portar códigos modo de
 maneira simples efetiva programação visual orientada objetos desenvolver programas paralelos integrar projetos visão
 computacional necessitam paralelismo tais capÍtulo capÍtulo
 cvmp cybernetic vision
 message passage
 coisas complexas condenadas decadência buda
 capÍtulo cvmp
 capÍtulo cvmp
 introduÇÃo
 capítulo estaremos apresentando base paralelismo proposta
 cvmp iniciaremos capítulo comentando aspectos que
 levaram desenvolvimento plataforma estaremos
 apresentando princípios funcionamento seguida estratégias de
 comunicação desempenho disponibilidade utilização nas
 plataformas mimd memória compartilhada mimd memória distribuída finalizamos capítulo apresentando conjunto ferramentas constituem o
 cvmp motivaÇÃo histÓria
 vimos capítulo anterior computação paralela traga
 inúmeros benefícios áreas visão computacional processamento de
 imagens áreas relacionadas obstáculos impedem proliferação dentre
 principal obstáculo dificuldade implementação programas
 concorrentes ferramentas desenvolvimento de
 programas paralelos destinada especialistas dificuldade aumenta
 devido necessidade mudar ambientes programação até
 mesmo linguagens determinados casos modo tempo gasto
 aprendizado metodologias paralelas necessário investir
 pa tempo processo familiarização ferramentas programação necessidade portar reescrever código plataforma observando dificuldades motivados idealizar uma
 metodologia desenvolvimento programas concorrentes simples
 efetiva simplicidade utilização primordial facilitar o
 desenvolvimento programas concorrentes utilização linguagens e
 ambientes programação integrados visual programadores estejam
 ambientados reduzindo tempo aprendizado portar reescrever o
 capÍtulo código tendo adotado plataforma desenvolvimento o
 borland delphi cantù características necessárias plataforma desenvolvimento moderna ver
 optamos utilização ambiente história cvmp parecida diversos produtos nasceram
 derivados projetos situação comum ciência da
 computação mouse conceito orientação a
 objetos surgiram parc palo alto research center bruno projeto interação homem máquina realizado xerox ao
 longo década caso cvmp projeto apresentado capítulo anterior bases paralelismo sistemas visão vimos desempenho exerce
 papel fundamental integração corporação atributos visuais das
 características projeto complexidade pesquisadores visão cibernética especialistas diversas modalidades
 exigidas desenvolvimento sendo pesquisadores participam virão participar projeto
 especialistas visão processamento imagens defrontamos grande
 barreira computação paralela dentre inúmeras dificuldades já
 mencionamos ambientes linguagens diferentes portar código dificuldade de
 implementação etc acompanham benefícios computação paralela nos
 defrontamos principalmente dificuldade implementação de
 sistemas paralelo características podemos observar na
 computação paralela manifesta diversas áreas da
 ciência perfil eclético dificilmente encontramos sistemas comerciais
 paralelos utilização paralelismo sistemas computação
 repousa berço pesquisa científica encontrando nela principal nicho provavelmente razão existe preocupação efetiva a
 interação homem máquina preece podemos facilmente comprovar natureza complicada ferramentas de
 implementação caso famosas mpi pacheco paralelismo especialistas devido dificuldade implementação sistemas
 cvmp
 paralelos motivados desenvolver ferramenta trouxesse os
 benefícios computação paralela mundo visão computacional e
 processamento imagens modo simples usar possibilitando o
 pa desenvolvimento programas paralelos pesquisadores visão sem
 conhecimento específico computação paralela nascia ferramenta de
 troca mensagens cvmp principais requisitos encontramos atendemos
 simplificar desenvolvimento programas paralelos plataforma desenvolvimento convencional comentamos treinamento
 plataformas linguagens desenvolvimento tempo gasto
 portando programas empecilho razão optamos pela
 adoção plataforma desenvolvimento convencional popular optamos ferramentas borland delphi builder de
 serem populares ferramentas adotadas de
 visão modo pesquisadores possam facilmente desenvolver
 versões paralelas programas mesma linguagem ambiente com
 quais familiarizados programação visual programação visual diretamente associada o
 paradigma orientação objetos tecnologia trouxe inúmeros
 benefícios desenvolvimento software programação
 visual tempo desenvolvimento aplicativos utilização de
 linguagens programação simples fácil programação orientada objetos inúmeros benefícios proporcionados por
 tecnologia termos operação computadores conceito de
 programação orientada objetos surgiu simultaneamente interface
 gráfica usuário gui possibilitou enorme passo a
 popularização informática engenharia software paradigma
 possibilitou benefícios similares conceito circuitos integrados em
 eletrônica cox coluna dorsal cvmp paradigma possibilita de
 simples utilização reutilização código modelagem sistemas
 complexos primitivas conceitos iremos apresentar no
 decorrer capítulo conjunto ferramentas cvmp transformou base
 desenvolvimento paralelo projeto capÍtulo ferramenta desenvolvimento aplicações paralelas simples utilizar que
 permite utilização profissionais diferentes áreas demonstrado ser
 interessante tornar benefícios computação paralela acessíveis
 áreas ciência computação cvmp cybernetic vision message
 passage
 cvmp abreviação inglês vision message passage podemos traduzir ferramenta troca mensagens visão
 cibernética trata-se conjunto ferramentas desenvolvimento de
 programas paralelos plataforma delphi builder utilizando conceitos de
 programação visual orientação objetos ideal contribuir a
 proliferação computação paralela especialmente utilização forma
 simples visão processamento imagens atualmente tem
 demonstrado eficiência plataforma desenvolvimento paralelo grupo
 visão cibernética utilização diversos pesquisadores no
 desenvolvimento projetos beneficiem paralelismo sendo modo
 pa especial base desenvolvimento vital modelo cvmp composto conjunto componentes vcl visual
 component library nativos delphi aplicativos componentes são
 compostos grupos cvmp básico cvmp processor farm cvmp image
 processing estatística launcher aplicativos grupos estatística launcher figura apresenta paleta componentes ambiente delphi os
 componentes cvmp paleta componentes cvmp ambiente delphi cvmp
 objetos cvmp
 decorrer capítulo forneceremos maiores detalhes um
 componentes aplicativos compõe conjunto ferramentas
 cvmp seguir vamos apresentar rapidamente grupos de
 componentes cvmp básico composto componentes fornecem as
 primitivas troca mensagens sendo componente sistemas mimd de
 memória distribuída mimd memória compartilhada cvmp pro contém biblioteca funções procedimentos componente
 cvmp básico biblioteca encapsulada cvmp pro biblioteca cvmp pro
 contém funções procedimentos manipulação pacotes mensagens sincronização troca mensagens semáforos mecanismos controle
 utilizadas conjunto cvmp básico suporte para
 operações básicas imagens tais partição divisão blocos cvmp processor farm contém componentes arquitetura fazenda de
 processadores processor farm implementada máquinas
 escravas cvmp processor farm usuário modo visual
 implementar facilmente aplicação distribuída precisar escrever nenhuma
 linha controle estratégia paralelismo cvmp processor farm
 máquinas escravas composto dupla componentes um
 mestre escravo componente mestre responsável supervisão dos
 escravos divisão automática tarefas enquanto componente escravo
 responsável execução tarefas cvmp image processing técnica processamento imagem
 implementada cvmp facilmente convertida componente
 reutilizado futuramente conjunto técnicas de
 processamento imagem implementadas prontas utilização tais transformada fourier convolução máscaras sobel transformada de
 hough enfim categoria expansão implementada
 usuário caso componente personalizado desenvolvido em
 capÍtulo conjunto alan salvany felinto jander moreira moreira possui inúmeros protocolos personalizados método aquisição remota de
 imagens placa aquisição imagens vídeo de
 integração cor estéreo apresentaremos futuramente estatística composto componentes análise estática outro
 análise dinâmica auxiliar análise estatística comportamento de
 execução programas concorrentes desenvolvidos cvmp tais fluxo
 pa tempo execução tráfego mensagens componente análise estática
 medidas desempenho diretamente código programa que
 conter estratégicos estipulados programador chamadas a
 métodos objeto chamadas componente realiza cálculo do
 tempo armazena arquivo visualizado aplicativo de
 estatística conjunto ferramentas cvmp componente para
 análise dinâmica possui mesma estratégia utilização parceiro entretanto invés serem armazenadas arquivo análises enviadas
 tempo execução aplicativo análise dinâmica podendo modo
 feito visualização desempenho fluxo execução troca mensagens enquanto executado launcher composto único componente cvmp-launcher possibilita o
 disparo aplicativos máquinas rede realizado conjunto os
 aplicativos launcher chamadas métodos objeto programa
 disparar execução determinado programa máquina
 específica rede aplicativos cvmp
 aplicativos cvmp programas auxiliam utilização ou
 funcionamento objetos cvmp aplicativos dividem grupos análise estatística contendo aplicativos voltados análise fluxo de
 execução desempenho troca mensagens launcher contendo aplicativos
 permitem disparo programas máquinas remotas estatística existem aplicativos análises estatísticas sendo para
 cvmp
 análise estática dinâmica aplicativo análise estática um
 utilitário permite visualização análise resultados gerados do
 componente estatística aplicativo análise dinâmica complexo estático permite visualização análise resultados entanto resultados obtidos tempo execução aplicativo
 recebe mensagens componente compartilhamento memória
 virtual mensagem recebida atualizada janela exibição permitindo
 modo análise comportamento tempo real launcher composto aplicativos módulo central disparadores os
 disparadores aplicativos ficam barra tarefas windows tray e
 ficam aguardando ordens ordens recebem executam os
 programas determinados módulo central aplicativo recebe comandos
 objeto launcher entradas diretas usuário missão transmitir as
 ordens execução programas disparadores espalhados rede canais virtuais
 comunicação objetos cvmp realizada pares conceito mestre/escravo conforme apresenta figura um
 par objetos cvmp estabelecido canal virtual bruno costa costa inspirado canais transputer inmos processadores utilizados década impulsionaram forte interesse em
 paralelismo época devido facilidade implementação hardware
 paralelo proporcionavam canais transputers os
 canais virtuais fixos definidos alterados a
 estratégia fixar conexão componentes idealizada modo a
 pa simplificar utilização canal virtual conecta processos processo utiliza um
 objeto cvmp dele enviar receber mensagens processos
 mesma máquina sendo executados concorrência da
 multitarefa operacional podendo diferentes
 processadores máquina multiprocessada máquinas
 conectadas rede capÍtulo m
 s
 conceito mestre/escravo conexão do
 canal virtual caixa simboliza objeto cvmp configurado mestre enquanto configurado escravo barra vertical representa o
 canal virtual comunicação processos diferentes máquinas conectadas via
 rede distribuído canal virtual possui conexões o
 tráfego pacotes pequena granularidade utilizando protocolo tcp/ip e
 pacotes alta granularidade utilizando protocolo netbeui ipx/sx estratégia permite desempenho melhor rede possibilitando tráfego
 pacotes ágil comentaremos seções estratégia forma
 detalhada instância parecer utilização canais
 fixos conexão pares limitam possibilidades conexões no
 entanto existe limite canais virtuais número
 objetos cvmp utilizados processo modo arquiteturas complexas
 facilmente implementadas figura apresenta exemplos de
 configurações permitidas utilizando canais virtuais demonstrando sua
 flexibilidade configurações apresentadas mesmas sistemas
 distribuídos mimd distribuído máquinas multiprocessadas mimd
 compartilhado máquina conectada máquinas
 utilizando pares cvmp conectados canais virtuais processos conectados máquina monoprocessada multitarefa combinação situação complexa ilustrando versatilidade cvmp cvmp
 m
 s
 m
 s
 m
 s
 m
 s
 m
 s
 pa m
 s
 s
 máquina processador
 m
 s
 canal virtual
 s
 m
 m
 s
 m
 cvmp mestre
 m
 m
 s
 m
 s
 s
 cvmp escravo
 possíveis configurações utilizando canais virtuais arquiteturas mimd
 seção discutimos arquiteturas paralelas utilizadas a
 implementação sistemas cvmp técnicas
 computacionais utilizadas implementação cvmp delas comentamos anteriormente cvmp incorpora estratégias de
 arquitetura paralela sistemas distribuídos máquinas multiprocessadas na
 literatura termo distribuído amplamente empregado discriminando
 sistemas operacionais amoeba mul ender dados sistemas computação distribuída estaremos
 empregando termo designar aplicações programas concorrentes que
 executados diferentes máquinas conectadas via rede seja computação
 distribuída podemos classificar sistemas distribuídos implementados com
 cvmp máquinas mimd memória distribuída capítulo outra
 arquitetura paralelismo permitida cvmp desenvolvimento de
 programas
 concorrentes
 em
 máquinas
 multiprocessadas máquinas
 multiprocessadas sistemas computacionais apresentam um
 processador principal existe diversidade máquinas se
 enquadram perfil almasi gottlieb sistemas padrão ibm-pc multiprocessados plataforma windows-nt em
 capÍtulo arquitetura anterior podemos classificar tipo mimd
 memória compartilhada pa arquitetura mimd distribuÍda
 contexto cvmp denominamos arquitetura mimd distribuída
 conjunto máquinas ibm-pc plataforma windows rede apresentando conjunto aplicações utilização das
 ferramentas cvmp conseguem cooperar executando processamento conjunto figura apresenta arquitetura nela sistema
 paralelo formado processos alojados máquinas distintas conectadas por
 rede quais escravos extremidades mestre centro através
 objetos cvmp representados figura pequenos quadrados cinza no
 interior processos estabelecidos canais virtuais possibilitam troca de
 mensagens processos canal virtual
 cvmp
 processo
 aplicação paralela arquitetura mimd
 distribuída arquitetura mimd distribuída mimd compartilhada utilizado
 objeto base cvmp específico implementa primitivas troca de
 mensagens apropriadas estabelecem canais virtuais modelo mimd
 distribuído existem mecanismos troca mensagem específicos para
 pacotes pequena granularidade baseada protocolo rede tcp/ip na
 interface rede socket alta granularidade baseada troca arquivos
 protocolos netbeui ipx/sx cvmp
 mensagens tcp/ip socket
 canais virtuais estabelecidos conexões interfaces
 socket dumas facilitar troca mensagens protocolo tcp/ip sendo nativo para
 unix especificamente bsd berkeley software distribution os
 ambientes windows utilizam versão socket berkeley denominado de
 winsock sistemas winsock caracterizado dll biblioteca de
 ligação dinâmica bruno programação aplicativo acessada programação delphi apresente versões componentes
 simplificam acesso winsock cvmp implementado utilização
 recurso fazendo chamadas diretas api melhorar performance possuindo conjunto primitivas troca mensagens troca arquivos
 observamos processamento imagens visão computacional especialmente estágios comum transferência de
 arquivos imagens dados quantidade memória plataforma
 windows dependendo configuração máquinas rede apresenta o
 melhor desempenho troca pacotes utilizando protocolo tcp/ip visando
 melhorar performance rede incorporado alternativa cvmp para
 protocolo situações troca alta granularidade seja troca de
 arquivos modo cvmp possui estratégia troca e
 compartilhamento arquivos métodos api windows utilizam os
 protocolos nativos netbeui ipx/sx determinado configuração windows
 configuração aumenta performance troca pacotes pa comparaÇÃo plataformas troca de
 mensagens
 cvmp visto camada software adicional interface
 socket acesso redes cvmp distribuído cujo objetivo fornecer
 modelo orientado objetos simples usar flexível reutilizável o
 desenvolvimento programas concorrentes exista grande
 capÍtulo diversidade métodos desenvolvimento sistemas distribuídos e
 programação concorrente constituem-se camadas software
 protocolos rede acreditamos principal contribuição cvmp a
 simplificação metodologia tornando simples ágil do
 especialista provendo benefícios paralelismo programadores não
 especialistas dentre ferramentas troca mensagens podemos destacar entre
 populares atualmente pvm mpi dcom corba representam
 classes distintas estratégias concorrência bibliotecas funções e
 objetos distribuídos classe composta pvm parallel virtual
 machine geist desenvolvimento programas concorrentes podendo incorporados como
 extensões linguagens programação genérica específicas parte
 integrante linguagens paralelas classe objetos distribuídos é
 caracterizada dcom distributed component object model grimes corba common object request broker architecture grimes paralelismo fica cargo camada extra software integrada sistema
 operacional responsável distribuição comunicação objetos um
 específico funcionamento estratégia apresentado pelo
 dcom dcom aperfeiçoamento denominado na
 literatura longo alcance component object model grimes wil iams possibilita criação interfaces aplicações permite essas
 comuniquem tempo execução dcom baseado na
 mesma filosofia entanto invés aplicações mesma máquina se
 comunicarem tecnologia permite aplicações diferentes máquinas
 conectadas via rede comuniquem enquanto bibliotecas funções pvm mpi desenvolvidas com
 finalidade específica computação científica alta performance seja
 voltadas computação paralela tecnologia objetos distribuídos possue
 uso voltado integração aplicações ambiente gui o
 caso com/dcom plataforma windows corba projeto
 gnome gnu network object model environment gnome plataforma
 cvmp
 unix possa utilizado programação concorrente utilização mais
 freqüente classe destina integração aplicações interfaces gráficas
 usuário rede aplicações banco dados internet dentre alternativas adequam ao
 desenvolvimento programas concorrentes bibliotecas funções para
 pa troca mensagens entretanto utilização apresenta mesmos problemas
 comuns computação paralela seja dificuldade de
 desenvolvimento programas limitando horizontes utilização aos
 especialistas computação paralela computação paralela aparenta
 possuir perfil eclético seja concentre esforços especialistas dificultando utilização programador comum razão inviabiliza
 estudos arrojados torná-las amigáveis essas
 ferramentas possuem natureza programação estruturada por
 procedimentos fato impede utilização direta paradigmas programação
 orientada objetos tecnologia objetos distribuídos seja toda
 baseada conceito orientação objetos utilização computação
 paralela simples usuário especialmente em
 ambiente windows dificuldade programação interfaces mesmo sendo integrante plataforma necessária uma
 configuração sistemas rede utilização fator limitante para
 utilização tecnologia fato máquinas ser
 servidoras dcom máquinas plataforma windows limitam a
 serem clientes cvmp conjunto ferramentas implementação
 programas paralelos baseados troca mensagens representa novo
 conceito mostra computação paralela estendida para
 diversas áreas utilizada espectro usuários desse
 prisma cvmp camada adicional software criada
 tornar programação paralela simples amigável contexto cvmp
 baseado qualquer mecanismo troca mensagens podendo
 camada adicional pvm mpi mesmo dcom corba situações alternativas especialmente atraentes uma
 possibilitariam integração imediata sistemas programas
 paralelos implementados plataformas capÍtulo desempenho rede
 seção vamos discutir resultados desempenho da
 transferência pacotes rede desempenho comunicação rede
 depende diversos fatores hardware diversas camadas
 software envolvidas comunicação descrição modelo camadas da
 rede funções apresentados didática tanenbaum
 tanenbaum estratégias troca mensagens baixa alta granularidade modo seja camada software adicional rede praticamente
 desprezível cálculo desempenho diversas leve
 camadas envolvidas processo modo desempenho da
 comunicação cvmp praticamente igual desempenho winsock para
 pacotes granularidade baixa protocolo netbeui ipx/sx as
 granularidades altas gargalos influenciam desempenho rede ser
 comparados pirâmide base físico hardware determina o
 desempenho diminui camada adicional modo a
 configuração rede fator imprescindível eficiência comunicação a
 interface software hardware elemento limitar a
 pa performance interface realizada programas conhecidos como
 device driver usualmente sistemas operacionais possuem device drivers
 genéricos exploram características específicas hardware e
 consequentemente comprometem performance realizamos medidas desempenho comunicação cvmp uma
 rede computadores plataforma windows configuração genérica vez
 cvmp possui consumo software desprezível outras
 camadas rede medidas expressam desempenho sistema
 operacional rede padrão ethernet cvmp
 gráficos desempenho transferência pacotes via rede cvmp usando protocolo tcp/ip cvmp usando transferência arquivo
 chamada api utilizando protocolo netbeui comparação
 resultados figura apresenta gráficos resultados obtidos da
 transferência diferentes tamanhos pacotes função tempo neles são
 apresentados resultados procedimentos transferência dados do
 cvmp figura apresentado resultado desempenho de
 transferência winsock usando tcp/ip procedimentos cvmp
 baixa granularidade gráfico procedimentos alta granularidade consistem troca arquivos chamadas api usando protocolo
 capÍtulo netbeui ipx/sx podemos observar gráfico protocolos netbeui e
 ipx/sx apresentam desempenho melhor transferência dados o
 protocolo tcp/ip plataforma windows motivou implementar dois
 métodos diferentes troca mensagens via rede alta para
 baixa granularidade pacotes otimizar comunicação linhas do
 gráfico representam traçado reta ajustada regressão linear dos
 caso obtivemos resultados taxas aproximadas megabits/s megabits/s respectivamente protocolos tcp/ip netbeui arquitetura mimd compartilhada
 arquitetura mimd compartilhada diferente arquitetura mimd
 distribuída caracterizada multiprocessamento seja máquina
 constituída diversos processadores compartilham memória os
 sistemas distribuídos comentados anteriormente processadores dessa
 arquitetura trabalhar conjunto efetuando comunicações da
 troca mensagens modelo processadores utilizam memória
 compartilhada comunicação processador
 canal virtual
 cvmp
 memória
 processo
 aplicação paralela cvmp arquitetura
 mimd compartilhada máquina multiprocessada
 pa processadores figura apresenta arquitetura nela uma
 máquina constituída processadores compartilham mesma memória cvmp
 processadores alojado processo quais da
 extremidade escravos central mestre arquitetura
 distribuída objetos cvmp pequenos quadrados interior dos
 processos estabelecidos canais virtuais possibilitam troca de
 mensagens processos processo a
 processo b
 processador processador memória compartilhada
 diagrama ilustrativo mecanismo troca mensagens em
 mimd compartilhado objetos cvmp memória compartilhada canais virtuais utilizam a
 memória compartilhada trocar mensagens figura apresenta uma
 ilustração conceito nela processadores efetuando troca de
 mensagens memória compartilhada troca mensagens memória compartilhada realizada no
 cvmp mecanismo windows denominado que
 consiste conjunto apis permitem manipulação memória global
 memória ram memória virtual requintes tratamento arquivos deatz mecanismo estabelecidos canais virtuais permitem diferentes
 processos alojados processadores diferentes mesmo processador possam realizar troca mensagens objetos cvmp performance comunicação arquitetura superior à
 distribuída sendo taxa transferência processador memória ram é
 incomparavelmente alta rede mesmo considerarmos a
 capÍtulo transferência memória virtual envolver operações disco desempenho superior obtido via rede taxa de
 transferência superior tempo acesso inferior diminuindo
 latência comunicação modo arquitetura bastante
 promissora sistemas visão demandam considerável troca de
 dados entretanto alto custo hardware relativamente
 processadores máquinas disponíveis mercado processadores
 máquina inviabilizam arquitetura combinação duas
 arquiteturas mimd compartilhado distribuído aparenta solução bastante
 interessante aumenta máquinas paralelo
 possibilita estratégias balanceamento carga algoritmos com
 gargalo troca mensagens alojados arquitetura compartilhada e
 distribuída funcionamento bÁsico cvmp
 cvmp básico objeto elementar ferramenta cvmp trata-se um
 componente vcl nativo delphi possui propriedades métodos que
 pa efetuam troca mensagens controle processos sendo composto de
 versões arquitetura mimd distribuída tcvmp para
 arquitetura mimd compartilhada tcvmps operação cvmp simples passo usualmente
 operações vcl delphi programador arrastar soltar cvmp
 básico paleta componentes cvmp formulário efetuado esse
 procedimento deve-se então criar arquivo configuração objeto arquivo
 configuração arquivo formato ascii contém informações a
 respeito máquinas redes porto socket necessárias objeto possa
 estabelecer canal virtual figura apresenta típico um
 arquivo configuração arquivo configuração criado editado diferentes maneiras usuário criar arquivo editor textos qualquer então utilizar o
 gerador automático arquivo configuração acompanha ferramentas
 cvmp gerador automático aplicação simples usuário
 preenche campos dados gerados arquivos de
 configuração alternativa configurar propriedades componente
 cvmp
 cvmp diretamente feito programação pela
 janela object inspector ambiente delphi propriedades master_ip ip
 máquina master_n domínio master_pt porto socket slave_ip slave_n slave_pt conteúdo arquivo de
 configuração
 máquina
 slave informações sobre
 máquina escrava
 name=neon domínio
 path=c ;
 master localização diretório
 informações sobre
 troca arquivos
 máquina mestre
 name=acara path=d ;
 informações sobre
 port canal virtual
 arquivo configuração objeto cvmp editado arquivo configuração atribuído propriedade
 mp_init_file diretório encontra arquivo configuração
 pa correspondente objeto devemos lembrar canal virtual possui dois
 arquivos configuração idênticos objeto mestre o
 escravo arquivos configuração idênticos objetos cvmp mimd
 compartilhado distribuído objetos cvmp arquitetura distribuída a
 configuração port define porto socket utilizado canal virtual enquanto arquitetura compartilhada port define rótulos dos
 ponteiros memória poderão haver canal virtual o
 mesmo port mesma arquitetura configuração objetos cvmp canal virtual pronto ser
 estabelecido realizar troca mensagens sendo tarefas programação
 realizadas manipulação métodos propriedades objeto cvmp estabelecimento canais virtuais definidos papéis de
 objeto objeto escravo executado método mp_listen mp_slave capÍtulo modo objeto ficará aguardando conexão par mestre
 canal virtual seja estabilizado estando objeto escravo aguardando a
 conexão então executado objeto definido mestre método
 mp_connect mp_master modo estabelecido canal virtual os
 objetos permitindo troca mensagens componentes
 mestre escravo programaÇÃo
 programação aplicações paralelas cvmp realizada de
 conjunto primitivas realizam troca mensagens caracterizadas por
 métodos propriedades objeto cvmp figura apresenta principais
 primitivas troca mensagens respectivas funções mp_init_file
 propriedade determina a
 localização arquivo configuração mp_listen mp_slave
 método define objeto escravo utilizado estabilizar canal virtual mp_connect mp_master método define objeto mestre utilizado estabilizar canal virtual mp_send método envia mensagem do
 canal virtual str método função retorna primeira
 mensagem fila mensagens recebidas setblocking
 método define mensagens são
 bloqueantes sendfile método envia mensagem alta
 granularidade arquivos receivefile método recebe mensagem alta
 granularidade arquivos mp_close
 pa método termina canal virtual principais primitivas troca mensagens utilização primitivas desenvolver aplicações
 paralelas programando diferentes estratégias paralelismo trocas
 mensagens referências estratégias paralelismo são
 encontradas almasi gottlieb brawer figura apresenta algoritmo concorrente utilizando
 cvmp
 primitivas cvmp nele computações sendo realizadas cálculos obtidos mediante resultados vamos supor
 cálculos leva tempo igual supondo maior
 tempo troca mensagem realizada basicamente resultados e
 parâmetros computação então podemos desconsiderar tempo tomado pelos
 processos comunicação caso algoritmo hipotético seja implementado de
 modo seqüencial tempo total algoritmo apresentado figura versão paralela computação cálculos são
 executados simultaneamente máquinas troca resultados
 processos igualmente processados concorrência cada
 máquinas modo tempo total processamento igual a
 obtendo performance computação caso houvesse a
 dependência dados necessitarem resultados de
 máquinas poderia aumentando performance algoritmo processo mestre
 algoritmo processo escravo
 while f<> begin
 application calcula b
 end calcula a
 calcula c
 while f<> begin
 calcula d
 application end pa show result1 implementação algoritmo paralelo utilizando
 primitivas cvmp capÍtulo modelo camadas
 devido natureza orientada objetos cvmp permite reutilização
 consequentemente desenvolvimento objetos herdam suas
 propriedades conceito fundamental arquitetura cvmp permitindo
 sejam desenvolvidos objetos especificidade mais
 simples utilizar programação visual desenvolvida etc além
 desenvolvimento ferramentas compõem conjunto cvmp é
 desenvolvimento personalizado componentes acordo com
 necessidades programador cvmp visto modelo
 camadas cvmp básico camada básica permite inserção de
 ilimitado camadas adicionais seções vamos apresentar série objetos aplicações
 desenvolvidas princípio componente
 personalizado cycomm moreira moreira alan felinto incorpora diversas características tais editor
 interno modificar arquivo configuração protocolos adicionais troca
 imagens servidor imagem máquinas captura esse
 componente utilizado desenvolver comunicação controle de
 módulos descrito capítulo tese disparador aplicaÇÕes launcher launcher disparador aplicações denominação atribuímos à
 ferramenta responsável execução processos remotos sua
 utilização módulo principal disparar aplicativos geral
 escravos longo rede cvmp-launcher composto aplicativos e
 componente sendo aplicativos constituídos módulo principal e
 disparadores módulos disparadores possuem instalação altera os
 registros operacional executados o
 windows reiniciado necessitando usuário sequer modo mesmo máquinas sendo utilizadas usuários ser
 solicitadas executar processos paralelo módulos disparadores
 instalados diversas máquinas rede serem utilizadas sistema
 cvmp
 distribuído disparar processos locais módulo principal aplicativo cvmp-launcher janela
 principal janela configuração rede existir máquinas módulos principais em
 máquinas responsáveis controle vão
 requerer execução processos escravos espalhados rede figura pa apresenta janela módulo principal respectiva janela configuração processos remotos disparados remotamente objeto
 tlauncher baseado cvmp memória compartilhada componente
 envia mensagens modulo principal ativando disparo mensagens para
 máquinas remotas modo possam executar processos remotos cvmp processor farm
 cvmp processor farm constituído conjunto componentes
 delphi desenvolvido cvmp permite implementação visual de
 capÍtulo aplicativos paralelos utilizam estratégia processor farm desenvolvido para
 simplificar programação algoritmos paralelos cvmp processor farm permite
 mesmo programadores inexperientes possam desenvolver seus
 sistemas distribuídos dentre estratégias paralelismo observamos processor farm ou
 fazenda processadores genérico amplamente utilizado
 diversos algoritmos visão característica importante
 estratégia balanceamento automático carga sistemas
 híbridos máquinas performances diferentes prontamente
 utilizados programador preocupe distribuição máquinas
 compõem computacional figura apresenta diagrama ilustra estratégia como
 podemos observar processor farm consiste processo supervisão que
 controla distribui tarefas conjunto processos escravos processos
 escravos ordenados fila processos livres fica
 armazenada supervisor necessário distribuir tarefa o
 supervisor escolhe elemento fila atribui tarefa então
 retira-o fila medida processos escravos terminando execução
 tarefas sendo inseridos novamente fila processos disponíveis o
 principal inconveniente estratégia preferência sistemas sem
 dependência dados entanto adaptações pode-se
 utilizá-la mesmo sistemas relativa dependência dados proce
 vres
 ss
 li
 exe
 supervisor
 cu
 rocessos
 ta
 p
 ndo
 de
 ta
 fi
 refas
 diagrama ilustrativo estratégia paralelismo processor farm cvmp
 pa cvmp processor farm desenvolvido intuito fornecer
 sofisticados recursos implementação distribuídos mesmo
 tempo simples usar modo inexperiente dos
 programadores possa desenvolver aplicação paralela cvmp
 processor farm áureo cvmp permitindo desenvolvimento genérico
 aplicações paralelas modo visual intuitivo janelas object inspector delphi mostrando as
 propriedades eventos objetos cvmp processor farm supervisor
 tprocfarmm4 escravo tprocfarms cvmp processor farm constituído basicamente componentes escravo mestre supervisor componentes escravos o
 componente mestre devem arrastados soltos formulário aplicações
 escravas supervisão respectivamente object inspector o
 programador configura atributos seleciona eventos serem
 programados figura apresenta janela object browser mostrando as
 propriedades eventos objetos supervisor escravo objeto supervisor
 utilizado figura limite controle processos escravos
 designados eventos entanto implementamos objetos
 capÍtulo supervisores controlar diferentes números máximos processos escravos
 processos utilização simplificada permite conforme vamos demonstrar um
 sofisticado distribuído possa implementado mediante cliques de
 mouse poucas linhas código exemplificarmos vamos imaginar um
 simples possa ilustrar utilização cvmp processor farm dada função hipotética vamos chamar um
 determinado parâmetros realize cálculo interativo retornando um
 resultado vamos presumir problema necessite resultados de
 diversas chamadas supondo executada um
 demasiado computacional seja demandado paralela aumentar performance consequentemente diminuir o
 tempo resolução supondo execução demore minuto e
 problema necessite executada máquina situação utilizarmos máquinas iremos
 reduzir tempo execução figura apresenta principal rotina máquina escrava é
 chamada evento ontask podemos figura pequenas
 linhas código cvmp processor farm permite programador extraia os
 parâmetros enviados supervisor cálculo função calculado
 retorne resultado único modelo de
 escravo existe necessidade escrever código específico cada
 máquina bastando replicar aplicativo distribuí-lo rede procedure var index vet real extrai elemento mensagem
 begin
 extrai parâmetros cálculo f
 pa index vet result calcula parâmetros passados vet
 end empacota índice resultado
 mensagem re-transmitida supervisor
 codificação evento ontask componente
 escravo cvmp processor farm cvmp
 figura segmentos código aplicação
 supervisora necessários eventos cada
 processo escravo designação tarefas oninitask o
 término tarefas recebimento resultado onendtask respectivamente
 mostrados figura modo podemos observar através
 códigos programação supervisor simples necessitando poucas
 linhas código iniciar processamento paralelo executado o
 método descrito parâmetro conter de
 processos utilizados tarefas serem distribuídas procedure var mensagem incrementa variável global determina índice linha
 begin
 mat contém parâmetros serem calculados f
 empacota índice mensagem
 empacota parâmetros
 end mensagem enviada escravo
 procedure var index begin
 desempacota índice task index mensagem recebida mestre res end desempacota resultado
 armazena vetor res codificação eventos componente supervisor
 cvmp processor farm evento oninitask disparado ser
 pa atribuída tarefa processo escravo evento onendtask disparado escravo finalizou tarefa método iniciar a
 execução processamento configuração simples realizada
 visualmente usuário necessitando feita via programação para
 executado método config componente supervisor que
 apresenta janela tempo execução usuário descrimina os
 capÍtulo nomes diretórios processos escravos conforme mostrado figura procedimento gera automaticamente arquivos configuração do
 supervisor escravos janela configuração automática distribuição exibida chamada método config componente supervisor componentes possuem mecanismos visualizar o
 processamento tempo execução propriedade watch figura estiver atribuída verdadeiro então exibe janela mostra
 simultaneamente resumo tráfego mensagens enviadas recebidas pelo
 objeto útil depurar para
 analisar comportamento componente supervisor possui acesso
 automático ferramenta visualização estatística desempenho tempo de
 execução descrita seção anÁlise desempenho estatÍsticas
 tarefa importante projetos programas paralelos a
 análise desempenho estatísticas quais estimada a
 performance balanço carga gargalos empregos do
 cvmp
 paralelismo consiste aumentar performance mecanismos computacionais
 execução rápida algoritmos entanto gargalos má
 distribuição cargas emprego incorreto determinada estratégia de
 paralelização sistemas paralelos sejam mesmo mais
 lentos seqüenciais perdendo completamente sentido existência medidas análise desempenho estatísticas constituem em
 árdua tarefa programador muitas devido escassez de
 ferramentas apropriadas desenvolver programas auxiliá-lo na
 realização medidas tomando tempo devido esses
 fatores desenvolvemos ferramentas extrair medidas performance modo auxiliar programador simplificar importante etapa no
 desenvolvimento sistemas paralelos ferramentas análise desempenho estatística cvmp se
 dividem grupos análise estática análise dinâmica ferramentas anÁlise estÁtica
 ferramentas análise estática compostas componente
 tstat aplicativo visualização componente tstat ferramenta de
 uso genérico auxiliar medidas desempenho programas seqüenciais
 paralelos dela programador estimar tempo duração dos
 procedimentos funções métodos utilizados programas mesmo o
 tempo execução linha conjunto linhas código figura contém utilização tstat mostrando a
 pa utilização componente caso hipotético nele apresentados os
 métodos componente tstat initialize terminate métodos utilizados iniciar terminar medidas
 realizadas tstat método initialize chamado inicia a
 contagem tempo total medida sendo concluída método
 terminate start finish marcam tempo linhas código chamada aos
 métodos start finish makefile grava arquivo contendo medidas realizadas capÍtulo stat inicia análise denominada medida stat begin
 stat mede tempo total
 mede tempo
 laço cálculo
 stat calcx
 calcxtot
 end stat stat mede tempo
 calcb calcb
 stat termina análise denominada medida stat stat gera arquivo medidas
 utilização componente tstat janelas aplicação statviewer apresentando das
 diferentes formas visualização blocos medidas linhas
 horizontais representam processos paralelos formados blocos
 exprimem tarefas visualização blocos simples blocos
 pequenos linhas cvmp
 aplicativo visualização denominado statviewer apresenta medidas
 usuário arquivo gerado componente tstat de
 diagramas barras medidas visualizadas permitindo análise da
 arquitetura paralela distribuição processos localização gargalos modo possibilitando aprimoramento projeto consequente aumento
 pa performance figura apresenta visualização medidas
 statviewer nela mostradas janelas diferentes diagramas de
 barras mostram resultados arquitetura processor farm composto máquinas escravas processos representadas linhas
 verticais janelas compostas blocos corresponde
 tarefa permitir visualização medidas statviewer possui série
 métodos auxiliar usuário zoom permitindo observar maiores
 detalhes processos tarefas permitindo destacar agrupar blocos cores específicas facilitando a
 análise ferramentas anÁlise dinmica
 ferramentas análise dinâmica assemelham estáticas diferenciando-se essencialmente permitirem análise tempo de
 execução ferramentas análise estática constituídas por
 componente tstatonline aplicação visualização statonline componente tstatonline possui propriedades similares tstat possuindo mesma metodologia utilização entanto invés armazenar
 medidas arquivá-las arquivo objeto envia aplicação
 statonline permitindo maneira visualização tempo execução a
 comunicação componente aplicação realizada cvmp
 memória compartilhada necessário encapsular objeto no
 componente statonline capÍtulo janelas aplicação statonline apresentando medidas de
 performance aplicação paralela processor farm máquinas
 escravas visualização blocos listagem medidas aplicação statonline fica espera mensagens contendo medidas
 realizadas componente recebe armazena-as memória
 exibe-as possibilitando visualizar comportamento durante o
 processamento figura apresenta janelas aplicação statonline exibindo medidas distribuído estratégia processor farm constituído máquinas supervisor escravos diagrama
 blocos linhas horizontais representam máquinas escravas os
 blocos constituem linhas representam tarefas executadas função do
 tempo gráficos representa respectivamente cada
 máquina blocos tarefas realizadas cuja duração expressa
 altura finalmente listagens medidas tempo de
 cvmp
 duração início término tarefa componente visual operaÇÕes
 bÁsicas processamento imagens
 convolução máscaras templates imagem constitui uma
 abordagem clássica operação filtros tais detectores de
 bordas filtros passa alta sobel robert filtros suavização filtragem
 pa gaussiana média vizinhança realce passa baixa castleman popularidade filtros amplamente utilizados seção
 apresentamos experimento realizado demonstrar potencial criação de
 componentes personalizados extrema simplicidade desenvolvimento e
 operação utilizando cvmp devido simplicidade técnicas convolução máscaras sua
 larga utilização decidimos adotá-las experimento componente
 timage acompanha delphi cvmp processor farm foram
 desenvolvidos componentes tsobelpar mestre escravo tmaskpar mestre
 escravo devemos lembrar invés estarmos preocupados as
 questões performance usual tratando-se sistemas paralelos nesses
 experimentos preocupamos didática máxima simplicidade de
 utilização figura mostra diagrama ilustrativo implementado
 utilizando componentes tsobelpar nele aplicações mestra e
 escravas operação programação componentes simplificados bastando arrastar soltar componentes formulário aplicação executar
 linha código aplicações escravas método tsobelpars máquina
 escrava aplicações mestras método tsobelparm de
 máquinas execução método aplicação mestra realizada criação
 canais virtuais seguida aplicação mestre divide imagem contida no
 componente visual tsobelparm tiras horizontais figura a
 imagem dividida tiras divisão tiras permanece na
 aplicação mestre enquanto transmitidas aplicações
 capÍtulo escravas transmissão inicia-se execução convolução máscara
 sobel imagens componentes mestre escravos atualizadas cada
 pixel resultante convolução apresentando didática execução
 paralela finalizado processo convolução aplicações mestre e
 escravas dados resultantes transmitidos aplicação mestre qual
 monta tiras exibe resultado convolução máscara sobel aplicação paralela utilizando componentes
 tsobelpar variação componentes tsobelpar componentes tmaskpar possuem funcionamento semelhante diferença máscara a
 convoluída imagem determinada programação componente
 mestre tmaskparm matriz 5x5 contém máscara personalizada é
 transmitida aplicações escravas juntamente tiras imagem permitindo realizem convolução experimento caráter didático permitiu usuário a
 visualização execução paralela apresentando máquinas o
 processamento gráfico perdendo desempenho cvmp
 perspectivas cvmp
 conjunto ferramentas cvmp considerado camada
 adicional protocolos comunicação memória compartilhada redes suas
 pa principais vantagens metodologias possibilitam a
 computação paralela tais pvm mpi simplicidade utilização programação visual encapsulamento reutilização código programação
 orientada objetos cvmp abordamos capítulo possa relacionado
 diretamente protocolos comunicação primitivas tcp/ip netbeui
 socket impede cvmp seja desenvolvido metodologias redirecionando métodos comunicação primitivas técnicas acreditamos característica aumente potencial cvmp ficando como
 sugestão desenvolvimentos futuros versões cvmp pvm mpi modo permitir-se-á desenvolvimento aplicações mistas beneficiar amplas bases tecnologias prover a
 plataformas benefícios mpi pvm voltados mundo unix e
 cvmp mundo windows necessário aguardar lançamento kylix
 kylix ambiente compatível delphi versão linux previsto segundo
 semestre versão cvmp unix venha trazer facilidade desenvolvimento
 paralelo plataforma possibilitando desenvolvimento sistemas
 paralelos heterogêneos plataforma unix windows aspecto interessante cvmp versatilidade possuindo
 inúmeras possibilidades desenvolvimento arquiteturas paralelas vez
 apresenta código simples enxuto componente cvmp básico cerca
 arquitetura convencional desenvolvida
 cvmp máquinas mimd distribuídas baseadas interface scsi tecnologia redes constituindo gargalo conseguindo acompanhar performance processadores atuais as
 arquiteturas baseadas interface scsi apresentam-se nova
 possibilidade arquitetura paralela henry phil ips capÍtulo capÍtulo
 estudos algoritmos
 paralelos visÃo e
 implementaÇÃo com
 cvmp
 computer design driven problems looking solutions solutions looking
 problems the anwer both almasi gottlieb
 capÍtulo estudos algoritmos paralelos visÃo
 capÍtulo estudos de
 algoritmos paralelos visÃo e
 implementaÇÃo cvmp
 pa introduÇÃo
 capítulo realizaremos estudo estratégias arquiteturas
 implementação paralela algoritmos visão computacional e
 processamento imagens iniciaremos estudo operadores locais seguindo
 tratamento individual canais cromáticos imagens paralelismo nos
 algoritmos transformadas fourier continuando estratégias de
 paralelismo transformada hough restauração imagens baseados em
 campos aleatórios markov finalmente encerramos capítulo a
 paralelização cálculo dimensão fractal minkowski métodos
 implementados ferramentas cvmp ser
 utilizados diretamente aplicações mesmo convertidos para
 componentes personalizados modo complementar cvmp operadores locais
 definimos operadores locais algoritmos atuam isoladamente
 conjunto pixels modo ocorra dependência dados
 componentes imagem algoritmos locais estar
 baseados transformações envolvendo único pixel isoladamente em
 conjuntos pixels locais transformações conjuntos pixels locais conhecidas como
 operadores vizinhança caracterizam convolução filtros em
 domínio espacial gonzalez woods utilizadas algoritmos processamento imagens de
 filtros borramento passa baixa filtragem mediana etc filtros nitidez passa
 alta detectores borda incluem filtros diferenciais sobel robert laplaciano gaussiana transformações ser
 capÍtulo expressas como
 imagem entrada imagem resultante processamento
 operador definido operações vizinhança pixels
 definida matriz cujo elemento central a
 coordenada conforme podemos observar seguir x
 y
 y
 y
 x
 pa x
 transformações envolvendo único pixel expressas pela
 equação
 variáveis correspondentes valores cinza das
 coordenadas respectivamente representa operação realizada variável sendo operador limiar binarização transformação realizada condicional sendo um
 limiar então será igual caso contrário igual operações locais
 envolvendo único pixel serem utilizadas binarização de
 imagens empregadas variações intensidade brilho para
 alterações coloração imagem gonzalez woods conjunto análises histograma gonzalez woods demanda computacional requerida métodos classe uma
 operação pixel imagem vamos discutir possibilidades de
 paralelização entretanto métodos convolução domínio espaço por
 envolverem diversas operações aritméticas pixel imagem requerem
 computacional consequentemente tempo execução suficiente para
 requererem soluções paralelas devemos lembrar demanda computacional
 aumenta proporcionalmente dimensão máscara convoluída estudos algoritmos paralelos visÃo
 i
 ii
 iii
 iv
 v
 estratégia paralelismo operadores locais quatro
 unidades processamento divisão imagem faixas divisão da
 imagem quadriláteros etapas iii representam
 respectivamente imagem original divisão imagem distribuição processamento imagem unidade processamento
 diferente reconstrução resultados resultado processamento basicamente estratégia paralelismo algoritmos operadores
 locais consiste divisão imagem partes distribuição forma
 máquina processador fique responsável processamento um
 pa pedaço imagem dividida finalmente união resultados figura contém diagrama ilustra estratégia paralelismo duas
 abordagens diferentes divisão imagem formuladas arquiteturas
 contendo unidades processamento consiste divisão da
 imagem tiras distribuídas unidades processamento após
 serem processadas resultado reconstituído imagem é
 dividida quadriláteros imagem virtualmente dividida qualquer
 formato entretanto maneiras apresentam óbvios simples de
 implementar sistemas paralelos ex multiprocessadores fragmentação da
 capÍtulo imagem porções alta granularidade apresenta
 vantagens desempenho balanceamento cargas entanto devido latência comunicação via rede computação
 distribuída optamos estratégias utilizem pacotes quantidade
 dados baixa granularidade otimizar transmissões dados esta
 abordagem utilizada somente seção demais
 implementações longo tese detalhes divisão imagem resolvendo dependência dados
 máscara vizinhança elementos linhas divisórias cinza particionamento imagem levar conta dependência de
 dados ocasionada filtro manipulação pixel envolve
 computações referentes vizinhança seja abordagem divisão
 considerada deve-se adotar metodologia embutir porções
 distribuídas vizinhança necessária cálculo elementos linhas
 divisórias figura ilustra detalhes processo de
 divisão considera-se filtro possui dimensão observar juntamente porção imagem dividida cor branca acrescentada vizinhança elementos anexos linhas divisão modo a
 solucionar dependência dados cálculo elementos implementação algoritmo cvmp realizada de
 inúmeras maneiras envolvendo diferentes números máquinas unidades de
 estudos algoritmos paralelos visÃo
 processamento opção versão estratégia processor farm onde
 invés processo supervisor processo mestre de
 distribuir tarefas escravos realiza processamento nossa
 implementação utilizamos componente cvmp básico cvmp launcher para
 disparar processos escravos figura mostra arranjo esquemático dos
 processos objetos cvmp canais virtuais escravo
 cvmp
 canal virtual
 mestre
 variação arquitetura processor farm adotada paralelismo
 algoritmo operadores locais mestre distribuir as
 pa tarefas processa porção imagem figura diagrama ilustra trocas mensagens num
 composto máquinas mestre representado particiona a
 imagem envia partes escravos seguir ocorre processamento
 paralelo imagem cujo resultado retorna mestre finalizando o
 algoritmo podemos observar blocos processamento este
 apresenta balanceamento carga satisfatória tarefas
 terminam quase simultaneamente fato possuir uma
 distribuição uniforme computacional balanceamento automático
 unidades processamento forem uniformes entretanto sistemas
 heterogêneos seja unidades processamento diferentes
 desempenhos balanceamento realizado divisão imagem tamanho porção imagem processado proporcional ao
 computacional unidade processamento podemos observar diagrama figura bolhas devido ao
 algoritmo esperar envio frações imagem iniciar o
 processamento bolhas eliminadas tornando mais
 capÍtulo eficiente imediatamente envio porções imagem mestre solicitar
 escravos processamento entanto tática permita um
 desempenho acarreta necessidade redimensionamento das
 frações processo partição imagem devem considerados
 tempos referentes envio porções imagem cálculo da
 divisão imagem vamos seguir apresentar resultados experimento realizado
 mediante implementação arquitetura quais poderemos
 analisar comportamento algoritmo paralelo performance
 frente análogo seqüencial experimento utilizamos rede
 composta computadores interligados placas ethernet mb/s implementamos arquitetura apresentada figura divisão igual
 componentes imagem modo houvesse
 desbalanceamento carga máquinas deveriam possuir
 performance homogênea configuramos ajustamos máquinas para
 tivessem performance equivalente microprocessador amd com
 freqüência interna performance homogênea diagrama ilustrando trocas mensagem balanceamento de
 carga experimento medimos tempo execução algoritmo paralelo e
 seqüencial tamanhos imagens diferentes 250x250 aplicadas operadores máscaras diferentes tamanhos 3x3 operadores locais básicos caracteriza filtragem passa baixa
 estudos algoritmos paralelos visÃo
 gonzalez woods dimensão fracionada componentes filtro pa x
 filtro passa baixa imagem imagem imagem imagem comparação tempo execução algoritmo paralelo e
 seqüencial figura apresenta gráficos resultados experimento sendo deles respectivo tamanho imagem 250x250 capÍtulo segundos eixo elementos filtro eixo imagem imagem up
 up
 d
 d
 ee
 ee
 sp
 sp
 pa máscara
 máscara
 imagem imagem up
 up
 d
 d
 ee
 ee
 sp
 sp
 máscara
 máscara
 pa desempenho algoritmos paralelos performance implementação paralela frente seqüencial aumenta à
 medida caminhamos eixo filtros elementos tais como
 podemos observar ampliação detalhe gráfico referente imagem de
 medida speed medida desempenho dada razão tempo de
 execução seqüencial tempo execução paralelo figura encontramos
 gráficos desempenho correspondentes figura podemos
 verificar resultado interessante pequena variação desempenho frente a
 dimensão imagem imagem inferior dimensões possuem características aumento
 performance pequeno imagens tamanho indicando que
 fator fundamental desempenho tamanho filtro filtro de
 estudos algoritmos paralelos visÃo
 desempenho aproximado varia imagem superior imagem implementado máquinas atinge performance máxima aproximadamente
 superior versão seqüencial razão baixa performance algoritmo paralelo filtros com
 elementos compreendida tempo de
 processamento tempo transferência dados observando figura podemos verificar base computacional algoritmo dividida em
 partes transmissão dados processamento operador na
 transmissão dados etapas distribuição partes imagem a
 serem processadas transmissão resultado máquina mestra medida
 filtros tornam maiores demanda computacional processamento
 operador aumenta enquanto demanda requerida transmissão
 dados continua mesma dados envolvidos transmissão são
 consideráveis etapa consome recurso computacional especialmente
 sistemas distribuídos possuem baixa banda transferência para
 justificar tempo desperdiçado transmissão dados recursos
 computacionais gastos processamento operador precisam ser
 maiores máscara
 comparação porcentagem tempo consumido o
 processamento transmissão dados imagem gráfico figura apresenta porcentagens tempo execução
 pa capÍtulo processamento operador transmissão dados conforme podemos observar máscaras elementos o
 percentual demanda computacional requerido processamento operador
 pequeno justificando implementação paralela entanto medida
 computacional exigido processamento aumenta percentual da
 transmissão dados diminui aumentando performance upd sp
 mbits/s
 máscara
 comparação performance rede ethernet conforme vamos observar decorrer capítulo gargalo grande
 sistemas distribuídos processamento imagens visão se
 encontra transmissão dados processamento áreas
 relacionado imagens modo maneira aumentar a
 performance sistemas utilizar redes rápidas sistemas memória
 compartilhada figura comparação experimento executado
 rede performance filtros menores 3x3 consideravelmente permanecendo entretanto desempenhos nos
 filtros dimensão comparando resultado gráfico figura podemos justificar diferença aumento performance medida que
 filtros aumentam torna-se gargalo constituído transmissão de
 dados diferente convencional arquitetura apresentada seção as
 aplicações envolvem máscaras justificam utilização redes de
 alto desempenho estudos algoritmos paralelos visÃo
 canais cromÁticos
 cor percebida primatas composição percepção de
 diferentes fotorreceptores possuem absorções máximas onda em
 diferentes faixas espectro vermelho verde azul sistemas
 computacionais cor igualmente formada composição contribuições das
 diferentes faixas espectro entanto invés funções contínuas como
 ocorre sistemas visão natural representações numéricas cor são
 quantizadas funções discretas possuem existem diversas representações cromáticas sistemas computacionais cujo princípio baseia-se formação espaço cores quantificam os
 estímulos cromáticos dentre espaços cores existem combinam matiz
 pa brilho iluminação contraste invés combinar cores diretamente caso sistemas yiq yuv hsi hsv moreira pratt modelo biológico combinam faixas espectro dessa
 classe rgb difundido análogo sistema
 tricromático biológico sendo formado combinação matizes vermelho verde
 azul representações sejam compostas três
 canais existem seguem padrão caso do
 cmyk representação cromática baseada absorção e
 combinação tintas formação cores largamente utilizado aplicações
 envolvendo impressões gráficas cuja combinação formada matizes azul
 claro cyan vermelho claro margenta amarelo preto canais combinação sistemas representações cromáticos
 considerados planos imagens independentes tomemos por
 rgb imagens cromáticas formadas três
 imagens níveis cinza representando planos contribuição
 azul verde vermelho planos possa processado
 técnicas convencionais processamento imagens tons cinza plano conter informações diferenciadas relativas às
 variadas absorções espectro componentes imagem processamento
 individual plano possibilita revelação detalhes obtidos na
 análise componentes vista paralelismo planos tratados modo
 capÍtulo isolado existe dependência dados simplifica a
 implementação algoritmos cromáticos utilizam abordagem vamos
 apresentar paralelismo explorando canais cromáticos um
 detector retas imagens cromáticas cujo objetivo didático que
 prático partindo idéia informações diferentes concentradas
 diferentes planos imagem cromática algoritmo explora planos
 individualmente expectativa encontrar retas detectáveis versão
 monocromática imagem plano cromático algoritmo efetua extração bordas da
 imagem popular filtro sobel sobel operação realizada transformada hough parametrização normal responsável detecção retas implementamos distribuído utilizando máquinas conectadas por
 rede mestra escravas conforme apresentado figura a
 máquina mestra responsável aquisição imagem cromática divisão
 planos distribuição máquinas escravas a
 distribuição planos realizado processamento algoritmos sobel hough simultaneamente máquinas finalmente resultado retornado máquina
 mestra combinado operadores lógicos diagrama ilustrando trocas mensagem balanceamento
 carga máquina mestra compararmos performance situações distintas implementamos configurações diferentes seqüencial paralelo duas
 máquinas paralelo máquinas conforme mostra figura o
 experimento realizado redes homogêneas computadores três
 pa máquinas incluindo formada computadores processadores freqüência interna estudos algoritmos paralelos visÃo
 implementadas usando placas ethernet podemos comparar desempenho paralelo versus versão
 seqüencial frente sistemas diferentes performances permitindo avaliá-lo perante evolução microprocessadores aquisição imagem
 canal verde
 divisão canais
 canal vermelho
 processamento sobel
 canal azul
 processamento hough
 resultado verde
 receber resultado
 resultado vermelho
 combinação lógica
 resultado azul
 configurações seqüencial paralelo máquinas paralelo máquinas figura apresenta comparação performance a
 implementação paralela versão seqüencial nela apresentado gráfico do
 tempo execução situações pixels da
 imagem processada figura apresentado gráfico tempo de
 execução função máquinas utilizadas parametrizado pelo
 tamanho imagem dado pixels desempenho speed-up é
 aproximadamente uniforme diferentes tamanhos imagem ficando em
 capÍtulo torno superior rodando máquinas vezes
 superior máquinas conforme podemos verificar figura seqüencial
 po
 po
 m
 m
 te
 te
 paralelo
 tempo execução máquinas pa pixels comparação versões seqüencial paralela máquinas processadores parametrizado
 pixels resultados experimento realizado redes homogêneas com
 diferentes microprocessadores apresentam queda performance versão
 paralela frente seqüencial observado speed-up medida
 desempenho diferentes situações gráficos figura microprocessadores apresentam performance diferentes taxa transferência
 rede continua mesma caracterizando-a gargalo processadores
 velozes podemos observar figura taxa crescimento
 performance medida tamanho imagem aumenta esta
 arquitetura paralela tenha tornado inviável imagens utilizadas no
 experimento atingir performance aceitável imagens grandes
 dimensões situação carga processamento tornará a
 transferência observamos performance permanece constante diferentes tamanhos imagem indicando uma
 demanda superior carga processamento frente transferência dados
 atingindo equilíbrio estudos algoritmos paralelos visÃo
 máquinas
 p
 eed usp
 máquinas
 pixels
 pentium p
 pa eed u
 eed u
 sp
 pixels
 pixels
 gráficos desempenho função tamanho da
 imagem redes homogêneas baseadas ethernet taxa figura apresenta diagrama ilustrativo compara tempos de
 execução versões paralelas máquinas plataformas em
 realizado experimento dele podemos observar diminuição
 crescente tempo execução frente tempo transferência dados justificando razão decréscimo desempenho em
 plataformas microprocessadores velozes caracterizando troca de
 mensagens gargalo alternativas eliminar gargalo
 podemos citar utilização redes velozes implementado
 utilizando rede ethernet substituída solução taxa transferência superior tempo de
 transferência reduzido diminuindo gargalo utilizar imagens com
 capÍtulo dimensões maiores empregadas experimento aumentando tempo
 proporcional processamento caixa preta figura frente tempo de
 transferência caixa barras diagonais figura implementar sistema
 arquitetura memória compartilhada solução possibilita grande
 redução gargalo devido performance superior transferência dados entre
 processos desvantagens adoção entanto limitação de
 processadores modelos comerciais atualmente sistemas hardware
 tecnologia possuem limitado processadores sendo indicados pa vista computação científica soluções processos
 paralelos caso especial apresentado seção envia dados
 sobel hough
 pentium
 recebe dados
 tempo comparação tempo execução experimento três
 diferentes sistemas homogêneos imagem transformada fourier
 seção vamos comentar implementação paralela transformada de
 fourier rápida fft dimensões baseada cvmp transformada de
 fourier dispensa apresentações sido utilizada em
 processamento sinais imagens teoria aplicações podendo caracterizada bases clássicas processamento de
 sinais imagens transformada fourier inversa analítica dadas
 equações respectivamente enquanto discreta podem
 encontradas equações observando transformada fourier
 discreta tfd transformada fourier discreta podemos avaliar carga
 computacional requerida processamento devido de
 estudos algoritmos paralelos visÃo
 multiplicações exponenciações diminuir enorme carga elaborada a
 transformada fourier rápida fft fast fourier transform algoritmo
 baseado artifícios matemáticos capaz diminuir de
 operações agilizar processamento brigham seja aproximação transformada fourier seja limitada a
 vetores sinais cuja dimensão seja geralmente potência grande
 performance justifica utilização u
 
 exp dx
 
 u
 exp du
 pa 
 
 transformada fourier transformada fourier dimensões dada equação u
 
 ux
 
 dxdy
 transposta discreta tfd transformada fourier
 discreta resulta n
 m
 u
 
 ux
 exp
 vy
 n
 m
 escrita capÍtulo m
 n
 u
 
 ux
 vy
 exp
 exp
 pa n
 m
 possibilitando separação núcleos equação resultando m
 u
 
 vy
 u
 exp
 m
 resultado demonstra podemos obter tfd tfd valendo mesmo transformada discreta inversa basicamente possui
 diferença sinal expoente exponencial deve-se
 calcular tfd linhas imagem obtendo e
 calcular tfd colunas obtendo finalmente brigham schafer fft caso invés calcular tfd passo ser
 calculada fft brigham classicamente implementação algoritmo paralelo fft consiste
 combinações horizontais verticais fft conforme apresentamos
 anteriormente figura apresenta diagrama ilustrativo implementação
 realizada cvmp nela mestre divide imagem horizontalmente envia
 partes processos escravos ficando com
 processos realiza fft linhas horizontais
 porção imagem procedimento transmitem real e
 imaginária resultado mestre divide resultados
 verticalmente distribui-os novamente então disparado processamento
 vertical máquinas consiste fft linhas verticais
 matrizes complexas real imaginária finalmente resultados que
 consistem matriz real imaginária enviados mestre onde
 combinados formando matrizes real imaginária resultantes fft da
 imagem estratégias paralelismo fft ser
 encontradas detalhes chu george estudos algoritmos paralelos visÃo
 linhas horizontais
 linhas verticais
 resultado real
 resultados
 imaginário
 horizontais
 imagem
 horizontal pa divididos
 fft
 original
 verticalmente
 resultado
 fft fft algoritmo
 algoritmo
 escravo a
 escravo a
 mestre
 escravo b
 mestre
 mestre
 escravo b
 mestre
 escravo c
 escravo c
 mestre
 mestre
 estratégia paralelismo fft processos
 máquinas processadores podemos verificar fluxo dados intenso pa especialmente devido combinação resultados processamento horizontal e
 combinação processamento vertical entretanto intensidade de
 trocas estratégia paralelização devido natureza dados volume
 transmitido aumenta demasiadamente tornando-se enorme gargalo aumento volume dados ocorre devida circunstâncias alteração
 tipo dado ii matrizes transformada complexas matriz real e
 matriz imaginária fator caso estejamos aplicando transformada fourier a
 imagem sendo imagem processamento imagens elemento matriz imagem constituída um
 byte vamos tomar imagem níveis cinza caso espaço memória ocupado armazenar a
 imagem megabyte elemento matriz imagem é
 constituído byte 256 quantidade memória determinada pela
 imagem pixels entretanto algoritmo transformada oferece maior
 precisão flutuante tabela apresenta espaço bytes ocupada
 principais tipos variáveis presentes object pascal delphi versão podemos espaços ocupados elementos matriz são
 multiplicados pior hipóteses caso exista necessidade uma
 precisão tipos variáveis permitem
 capÍtulo armazenamento flutuante ocupam bytes single bytes real e
 double matriz imagem flutuante passa ocupar megabytes atribuída tipo single megabyte tipos real double tipo
 bytes utilizados
 byte
 byte
 integer
 bytes
 real
 bytes
 single
 bytes
 double
 bytes
 tabela tipos variáveis object pascal delphi memória
 utilizada caso considerar transformada fourier é
 baseada números complexos modo obrigados duplicar os
 dados constituir matriz complexa utilização matriz
 flutuante representar real imaginária tomando anterior caso tivéssemos optado dados tipo single teríamos manipular megabytes megabytes tivéssemos optado
 tipo real double estratégia paralelismo utilizada basicamente quatro
 conjuntos trocas mensagens correspondentes distribuição imagem
 matriz entrada ii retorno resultado processamento horizontal o
 pa mestre redistribuição porções verticais iv envio resultado o
 mestre algoritmo utilizado imagens mensagens ser
 constituída fragmentos imagem diminuindo maneira fluxo dados volume dados envolvido processos tempo de
 processamento gasto operações relacionadas transferências de
 dados processos leitura conversões comunicação rede acaba sendo
 tempo gasto processamento matemático tornando a
 implementação estratégia inviável sistemas distribuídos redes
 possuindo taxas transmissão implementado máquinas conectadas rede ethernet
 estudos algoritmos paralelos visÃo
 megabits/s máquinas utilizadas possuíam processadores amd mhz caracterizando homogêneo figura apresenta um
 diagrama ilustrativo implementação utilizando máquinas sistema
 distribuído rede megabits/s mostrando tempo estimado trocas de
 mensagem processamento matemático podemos observar gargalo
 formado processos envolvidos trocas mensagens estratégia paralelismo fft processos
 máquinas processadores alternativa redução volume dados envolvidos nos
 processos transferência utilizamos algoritmo lzw nelson compactação memória maneira dados serem transmitidos via
 rede efetuamos compactação máquina estudar o
 comportamento diferentes situações tentativa otimizar os
 mecanismos troca mensagem consequentemente aumentar performance
 versão paralela implementado diferentes maneiras utilizando memória massa disco rígido armazenar dados a
 serem transmitidos via rede utilizando memória massa compactação dados da
 transmissão utilizando memória ram armazenar dados serem transmitidos
 via rede idem anterior compactação dados transmissão figura apresenta tempos execução diferentes
 implementações paralelas frente versão seqüencial tamanhos diferentes de
 imagens 128x128 capÍtulo observar melhora performance provocada compactação dados antes
 transmissão possua gastos computacionais processos de
 compactação descompactação justifica utilização taxa compactação reduziu tamanho dados cerca pa m
 m
 o
 p
 p
 mp m
 tem
 tem
 te
 seqüencial
 paralelo disco rígido
 m
 paralelo disco rígido
 
 pa p
 m
 compactação lzw
 p
 m
 m
 paralelo 
 te
 armazenamento ram
 paralelo 
 armazenamento ram
 compactação lzw
 tempos execução seqüencial modalidades
 paralelas diferentes tamanhos imagem modalidades
 paralelas implementadas sistemas distribuídos máquinas figura apresenta porcentagem tempo gasto o
 processamento matemático gasto procedimentos relacionados as
 trocas mensagens leitura gravação rede compactação conversões nela
 podemos observar consumo recursos computacionais os
 processos envolvidos troca mensagens envolvido o
 processamento matemático justificando baixa performance arquitetura
 sistemas distribuídos figura apresenta taxa desempenho speed-up sistemas
 paralelos frente seqüencial conforme podemos observar taxa de
 desempenho aumente gradativamente medida aumentam dimensões das
 imagens atinge patamar desempenho satisfatório dimensão de
 paralela fft máquinas ficou maioria
 casos lento versão seqüencial atingiu desempenho máximo
 estudos algoritmos paralelos visÃo
 pa al
 al
 n
 n
 al
 tacio
 tacio
 u
 u
 tacio
 p
 mp
 m
 pm
 co
 rso
 rso
 rso
 e
 e
 cu
 r
 r
 er
 %
 %
 pa %
 al
 al
 n
 n
 paralelo disco rígido
 paralelo disco rígido
 tacio
 tacio
 compactação lzw
 mp
 mp
 paralelo 
 armazenamento ram
 rso
 rso
 paralelo 
 e
 e
 r
 r
 armazenamento ram
 %
 %
 compactação lzw
 pa processamento matemático
 proc relacionado transf dados
 porcentagem utilização recursos computacionais o
 processamento matemático processos relacionados as
 transferências dados p
 p
 p
 u
 u
 u
 u
 ed
 ed
 ed
 ed
 e
 e
 e
 e
 pa gráficos taxa desempenho speed função do
 tamanho imagem dado imagem quadrada gráfico disco
 rígido disco rígido compactação lzw ram ram compactação
 lzw gargalo situado fluxo de
 transferência dados arquitetura paralela proposta seja
 promissora sistemas distribuídos rede convencionais ser
 satisfatória sistemas memória compartilhada possuem
 velocidade troca mensagens verificarmos sua
 performance arquitetura memória compartilhada implementamos uma
 versão experimental cvmp memória compartilhada vez
 capÍtulo dispúnhamos máquina múltiplos processadores realizamos a
 simulação utilizando característica multitarefa operacional as
 medidas feitas cautela beneficiar arquitetura compartilhada situações optamos simulação beneficiasse de
 vantagens arquitetura concluindo portanto real
 podemos realizar implementação otimizações p
 up
 ud
 ed
 ee
 spe
 pa gráficos taxa desempenho speed-up função do
 tamanho imagem simulação arquitetura memória
 compartilhada processadores equivalentes amd desempenho memória compartilhada frente versão seqüencial desempenho memória compartilhada frente melhor caso arquitetura
 distribuída ram lzw figura apresenta resultados simulação nela gráfico
 taxa desempenho speed paralelo quatro
 processadores eliminando transferência dados via rede custo algoritmos de
 compactação dados lzw obteve melhora de
 performance gráfico taxa desempenho arquitetura
 compartilhada função versão seqüencial performance superior
 sistemas distribuídos chegando quase speed viabiliza a
 utilização versão paralela gráfico mostra taxa desempenho da
 arquitetura compartilhada frente melhor caso arquitetura distribuída seja o
 caso ram lzw nele podemos observar implementação paralela em
 arquitetura compartilhada ficou rápida a
 implementação distribuído estudos algoritmos paralelos visÃo
 transformada hough
 inicialmente elaborada calcular trajetória partículas câmaras
 bolhas hough tradicional análise imagens reconhecimento padrões globais a
 idéia básica técnica consiste encontrar curvas ser
 parametrizadas tais segmentos reta polinômios círculos elipses etc espaço parâmetros arranjo acumulador possa utilizada em
 dimensões maiores principal utilização consiste localização padrões em
 dimensões schalkoff dentre padrões globais disponíveis transformada hough o
 amplamente difundido utilizado segmento reta provavelmente devido
 importância modalidade visão processamento imagens sendo
 muitas generalizada transformada hough técnica de
 detecção retas seção vamos concentrar modalidade
 transformada hough segmentos reta encontrados imagem ser
 pa parametrizados cos sen
 distância perpendicular origem ângulo normal
 figura modo co-lineares xi varia são
 transformados curvas senoidais
 cos sen
 i
 i
 plano intersecionam conforme podemos observar
 figura capÍtulo demonstração principais elementos envolvidos na
 parametrização retas transformada hough espaço de
 coordenadas original espaço hough plano parametrizado estrutura conhecida arranjo
 acumulador trata-se matriz cujas linhas colunas parametrizadas em
 função plano original incrementados os
 elementos correspondentes curva senoidal dada retas os
 colineares imagem apresentam picos arranjo
 acumulador sendo caracterizados máximos locais figura apresenta
 imagem respectivo espaço hough detecção retas transformada hough imagem
 original arranjo acumulador espaço hough retas detectadas
 backmapping imagem corresponde curva senoidal espaço de
 hough parametrizada incrementa espaço acumulador permitindo técnica processado isoladamente modo transformada hough ser
 entendida série operações locais ocorre dependência de
 estudos algoritmos paralelos visÃo
 dados elementos imagem baseado nisso podemos paralelizar o
 algoritmo divisão imagem original ficando elemento de
 processamento responsável fragmento processamento o
 arranjo acumulador unidade processamento somado
 constituindo arranjo acumulador resultante transformada informações
 adicionais estratégias paralelismo transformada hough ser
 encontrados guil zapata figura exibe diagrama ilustra arquitetura quatro
 unidades processamento imagem dividida enviada cada
 processador fragmento imagem então processado gerando seu
 respectivo espaço hough parametrizado arranjo acumulador elementos arranjos acumulador correspondentes porção imagem
 pa somados gerando resultado i
 ii
 iii
 iv
 v
 vi
 estratégia paralelismo transformada hough as
 etapas iii representam respectivamente imagem original divisão imagem distribuição processamento fragmento da
 imagem arranjos acumulador resultante processamento cada
 fragmento somatório elementos arranjos acumulador arranjo
 acumulador resultante implementamos versões unidades de
 processamento diferentes figura mostra diagrama fluxo
 dados execução versão processadores nela um
 capÍtulo processo mestre escravos processo alojado uma
 unidade processamento distinta mestre responsável divisão da
 imagem principal distribuição máquinas escravas juntamente
 mestre irão processar fragmentos imagem término da
 execução arranjos acumuladores resultantes processamento enviados à
 máquina mestra realizará somatório elementos arranjo constituindo modo resultado adotamos arranjos acumuladores dimensões equivalentes às
 imagens maneira parametrizados possuir número
 elementos pixels imagem usualmente a
 transformada hough aplicada imagens binárias resultantes detecções
 bordas portanto empregamos imagens bit profundidade entrada
 diminuindo tráfego mensagens matrizes que
 armazenam arranjos acumulador adotamos tipo variável word que
 apresenta bytes armazenamento modo arranjo acumulador
 ocupa memória cerca tamanho imagens
 correspondentes versões diferentes quantidades elementos de
 processamento vamos apresentar desempenho diferentes modalidades de
 arquitetura obedecem mesma estratégia paralelização sistema
 distribuído rede ethernet mb/s distribuído rede fast
 ethernet modalidades sistemas implementadas utilizando
 processadores amd simulado diagrama ilustrando trocas mensagem balanceamento
 carga pa estudos algoritmos paralelos visÃo
 figura apresenta gráficos tempos execução dos
 sistemas função processadores gráficos é
 referente tamanho imagem utilizada experimento 250x250 modalidade distribuído mb/s invés diminuir aumenta medida
 acrescido unidades processamento observado
 gráficos referentes imagens situação ocorre imagens gargalo transferência dados conforme apresentado figura enquanto imagem dividida distribuída unidades processamento o
 mesmo ocorre arranjo acumulador máquinas processem
 fragmento imagem resultado obtido arranjo acumulador não
 fragmentado seja mesma dimensão versão seqüencial as
 mensagens serem retornadas máquina mestra aumentam
 proporcionalmente processadores escravos se
 fragmentam m
 o
 m
 p
 o
 po
 p
 m
 tem
 te
 pa processadores
 processadores
 processadores
 seqüencial
 distribuído rede mb/s distribuído rede memória compartilhada
 gráficos tempo execução função de
 processadores respectivas modalidades implementação cada
 gráfico definido mediante tamanho imagem ocorra situação semelhante modalidades essa
 situação observada nítida devido fato gargalo de
 transferência reduzido distribuído mb/s o
 mesmo fato ocorre processamento imagens pixels tempo processamento aumenta consideravelmente em
 capÍtulo tempo transferência fazendo gargalo diminua l
 ciona
 putacional
 putacional
 puta m
 pa recurso recurso co
 recurso %
 %
 %
 a
 b
 c
 a
 b
 c
 a
 b
 c
 putacional
 putaciona
 putaciona
 rso com
 rso com
 recurso recu recu %
 %
 %
 a
 b
 c
 pa a
 b
 c
 a
 b
 c
 l
 taciona
 putaciona
 pu
 putacional
 m
 rso com
 rso co
 recu recu
 recurso %
 %
 %
 a
 b
 c
 a
 b
 c
 a
 b
 c
 distribuído rede mb/s pa proc relacionado transf dados
 distribuído rede memória compartilhada
 processamento hough
 porcentagem utilização recursos computacionais o
 processamento técnica processos relacionados as
 transferências dados linhas horizontais contém gráficos
 relacionados tamanho imagem enquanto linhas verticais os
 números processadores figura apresenta porcentagem tempo gasto o
 processamento técnica procedimentos relacionados trocas de
 mensagens nela podemos observar situação descrita anteriormente fica
 nítida sistemas distribuídos porcentagem relativa tempo gasto troca mensagem torna a
 medida aumentam processadores podemos concluir essa
 arquitetura favorece utilização sistemas massivamente paralelos o
 aumento processadores resulta igualmente aumento volume
 mensagens atingir limite sistemas distribuídos estudos algoritmos paralelos visÃo
 semelhante sistemas mb/s determinado de
 processadores taxas desempenho speed-up sistemas mostradas nos
 gráficos figura deles determinadas performances cada
 modalidade frente versão seqüencial conforme podemos observar arquitetura
 apresentou desempenho diferentes quantidades unidades de
 processamento exceção sistemas distribuídos baseados redes de
 ethernet mb/s apresentaram performance pequena as
 imagens ee
 ee
 ee
 pa sp
 sp
 sp
 processadores
 processadores
 processadores
 distribuído rede mb/s distribuído rede memória compartilhada
 gráficos taxa desempenho speed função do
 processadores gráficos apresentam modalidades
 implementadas experimento gráfico correspondente tamanho
 imagem devido baixas performances obtidas sistemas distribuídos
 baseados ethernet decidimos explorar mecanismos possibilitassem
 diminuição carga mensagens consequentemente ampliação gargalo modo aumentar desempenho gargalo encontrado se
 encontra transferência arranjos acumuladores processos escravos resultantes processamento fragmento imagem processo
 mestre portanto solução estaria redução tamanho arranjos
 acumulador tentativa reduzir tamanho arranjos acumulador adotamos
 estratégias compactação lzw ii lista picos estratégia utilizamos algoritmo compactação dados
 diminuir volume dados arranjo transmitido o
 capÍtulo processo mestre modo seja acrescida carga computacional devido processamento algoritmo lzw nelson tempo execução seja tempo transferência arranjo sem
 pa compactação sabemos muitas informações contidas arranjo acumulador
 utilizadas maiorias aplicações detecção retas modo interesses concentrados picos caracterizam maiores conjuntos
 colineares seja retas imagem considerando abordagem elaboramos estratégia consiste criação lista vetor
 contendo coordenadas plano hough conteúdo células
 ultrapassam determinado valor limiar exploramos heurísticas para
 determinação limiar entanto definido décima parte
 elemento arranjo figura apresenta comparações estratégias frente à
 versão experimentada seção nela tempo execução versão de
 máquinas conectadas via ethernet podemos observar alternativas
 utilizamos redução gargalos resultado aumentando
 consideravelmente performance comprometida transformada hough
 distribuída rede ethernet mb/s m
 m
 
 o
 m
 o
 p
 p
 m
 m
 te
 te
 te
 pa a
 b
 c
 a
 b
 c
 a
 b
 c
 convencional
 compactação lzw
 lista picos
 gráficos apresentando tempo execução relacionados o
 tamanho imagem apresentando comparação diferentes
 versões implementação paralela sistemas distribuídos rede
 ethernet mb/s estudos algoritmos paralelos visÃo
 l
 l
 l
 tacion
 tacion
 tacion
 o
 o
 o
 pa ecurso ecurso ecurso a
 b
 c
 a
 b
 c
 a
 b
 c
 processamento hough
 proc relacionado transf dados
 porcentagem utilização recursos computacionais o
 processamento técnica processos relacionados as
 transferências dados afins compactação lista picos sistema
 distribuído mb/s distribuído compactação sistema
 distribuído lista picos aumento performance explicado redução volume dados
 serem transferidos mostra figura alternativas e
 ii reduzam volume arranjos acumulador taxa próxima
 aproximadamente computacionalmente custosa lista picos apresentou melhor
 desempenho distribuído figura apresenta taxas de
 desempenho speed-up comparando implementações paralelas lista picos tenha apresentado resultado melhor na
 eliminação gargalos consequentemente performance devido redução
 dados arranjo acumulador totalidade aplicações transformada podem
 envolver exploração dados presentes arranjo acumulador a
 compactação lzw entretanto altera conteúdo arranjo acumulador permitindo portanto utilização gama aplicações que
 apresenta resultado idêntico transformada hough apresentamos seção estratégias implementações a
 transformada hough paralela enfocando detecção retas entanto estas
 estendidas curvas parametrizadas espaço hough mediante adaptações pa capÍtulo p
 p
 u
 u
 eed up
 ee
 ee
 p
 p
 sp
 s
 s
 a
 b
 c
 a
 b
 c
 a
 b
 c
 convencional
 compactação lzw
 lista picos
 gráficos taxa desempenho speed gráfico é
 correspondente tamanho imagem rastreamento arranjo acumulador
 backmapping problema transformada hough encontra localização
 picos arranjo acumulador correspondem curvas as
 quais técnica espera detectar realmente dificuldade reside na
 pa característica pico sendo problema resolvido por
 completo ciência devido limitações processo localização picos
 locais resultado transformada apresentadas diversas falsas
 curvas provocadas interferência colineares diferentes curvas segmentos pixels mesmo ruído presente imagem avanço direção solução problema publicado gerig klein gerig klein transformada hough denominado backmapping rastreamento técnica de
 backmapping consiste criação arranjo acumulador a
 transformada novamente calculada imagem novo
 espaço contudo somente computadas células correspondem aos
 valores máximos senóides arranjo original modo essa
 abordagem corresponde reforço aplicado transformada hough na
 tentativa localizar picos locais reduzir picos causados pontos
 estudos algoritmos paralelos visÃo
 colineares curvas distintas ruídos interferência objetos segmentos com
 devido cálculo transformada aliado buscas contínuas de
 máximos curvas espaço hough correspondentes cada
 imagem técnica dispendiosa consumindo poder
 computacional motivando portanto paralelismo backmapping
 i
 ii
 iii
 iv
 estratégia paralelismo técnica rastreamento
 backmapping unidades processamento divisão da
 imagem distribuição fragmentos distribuição arranjo acumulador
 resultante transformada hough iii processamento backmapping a
 dados fragmentos imagem arranjo acumulador 
 transmissão arranjo acumulador gerado rastreamento o
 processo mestre elementos arranjo serão somados
 constituindo resultado técnica adaptações estratégia paralelismo apresentada na
 pa figura desenvolvemos estratégia paralelizar algoritmo de
 rastreamento backmapping podendo utilizada conjunto a
 versão paralela transformada hough descrita paralelismo da
 técnica rastreamento consiste basicamente distribuição arranjo
 acumulador obtido transformada hough processos envolvidos na
 computação fragmentação imagem original distribuição caso
 transformada hough paralela utilização fragmentos imagem
 original processada figura exibe diagrama contendo definições
 capÍtulo paralelização técnica elementos processamento pode
 expandida facilmente serem distribuídos fragmentos imagem distribuídos resultados transformada hough elementos de
 processamento então realizadas processamento rastreamento
 simultaneamente fragmentos imagem produzindo novo
 arranjo acumulador versão paralela transformada hough os
 arranjos transmitidos unidade mestre somatório deste
 constituíra resultado implementamos versão paralela técnica utilizando distribuído
 rede ethernet mb/s máquinas possuindo processadores
 semelhantes amd processamento versão seqüencial paralelas tamanhos de
 imagem diferentes 250x250 m
 po
 po
 tem
 pa processadores
 processadores
 gráficos tempo execução função de
 processadores figura gráficos porcentagem utilização recursos
 computacionais processamento referente técnica backmapping aos
 processos relacionados transferências dados possua fluxo
 dados transformada hough porcentagem recursos
 gastos transferência dados técnica backmapping é
 dispendiosa transformada hough conter os
 mesmos cálculos necessários transformada realizados operações para
 obtenção valor arranjo acumulador ponto
 analisado imagem devido computacional requerido pelos
 cálculos transferência dados torna gargalo crítico versões
 paralelas estudos algoritmos paralelos visÃo
 ciona ciona
 ta
 ta
 pu
 pu
 co
 co
 o
 rs
 rs
 recu recu %
 %
 processadores
 pa processadores
 proc técnica backmapping
 proc relacionado transf dados
 porcentagem utilização recursos computacionais o
 processamento técnica processos relacionados as
 transferências dados porcentagem recursos gastos transferência dados entretanto aumentando proporcionalmente processos
 processadores arranjos acumuladores fragmentados performance aumente acréscimo elementos de
 processamento aumenta gargalo modo razão entre
 processadores ganho performance diminua figura são
 apresentados gráficos taxa desempenho speed-up função do
 processadores d
 d
 ee
 ee
 sp
 sp
 processadores
 processadores
 taxa desempenho função processadores pa capÍtulo restauraÇÃo imagens baseado em
 campos randÔmicos markovianos
 aplicação comum processamento imagens a
 eliminação ruídos imagem diversos fatores tais interferência em
 sistemas aquisição imagem ruído sistemas comunicação sistemas de
 imagem satélite aquisição imagens médicas ultra-som etc ocasionar adição ruídos imagem poluí-la algoritmos
 restauração imagens técnicas permitem redução ruído em
 casos mesmo completa eliminação seção vamos apresentar paralelização algoritmo restauração
 imagens baseado campos aleatórios markov desenvolvido decorrer
 doutorado técnica bruno costa modificação campos aleatórios gibbs operando modo condicional
 iterativo icm chellappa jain abordagem técnica classifica campo aleatório markov
 caso específico teoria regularização poggio regularização problema posed compreendida termos da
 equação az=y solução procurada dado original operador linear solução consiste achar minimiza equação
 estabilizador funcional enquanto termo equação expressa discrepância entre
 dados originais solução termo indica sucesso solução no
 critério regularização expresso operador variações no
 parâmetro controlar grau similaridade dado original do
 resultado processo regularização técnica restauração imagem
 considerado linear aplicando conceito termos práticos equação ilustra situação respeito termos funcionais imagem
 original solução procurada termo força similaridade entre
 imagem original imagem modificada termo conhecido como
 impõe certo grau controlado parâmetro estudos algoritmos paralelos visÃo
 solução esperada dxdy image
 conceito campos aleatórios markov mrf seja aplicação processamento imagem visão computacional apenas
 recentemente explorada bruno costa markov extensões dimensões clássica abordagem cadeia
 markov modo assume valor dado imagem é
 influenciado somente vizinho imediato estabelecimento uma
 conexão campos aleatórios markov locais distribuição gibbs
 global dada mecânica estatística teorema hammersley-clifford permitiu
 significado essencial cálculo probabilidades possíveis
 configurações mrf li pa conjunto finito valores quantificados freqüentemente parametrizados pelo
 decréscimo temperatura fornecida probabilidade densidade massa
 distribuição gibbs geman geman temperatura energia definida potenciais cliques grandes
 vizinhanças sejam possíveis aplicações análise processamento imagem tipicamente consideram cliques conexões vizinhos torno pixel abordagem mrf permite muitas possibilidades incorporação contextos ao
 processamento imagens provavelmente típicas seja na
 restauração imagens considerando unir distribuições mrf tarefa
 particularmente complicada abordagem alternativa denominada modo
 condicional iterativo icm proposta besag besag assumidas icm observações independentes observação
 possui mesma densidade condicional conhecida depende somente de
 rótulo depende somente rótulo vizinho equação apresenta critério simplificado classificação consiste maximização da
 probabilidade conjunto sítios vizinhanças sítio li capÍtulo f
 f
 i
 }
 i
 técnica assume imagens binárias corrompidas ruído
 gaussiano parâmetro conhecido somente valores cliques são
 considerados pesos iguais favorecer uniformidade a
 equação produz seguinte critério classificação f
 f
 i
 i
 i
 i
 i
 ni
 verificado termos condição refletem modelo imagem modelo ruído termo expressa a
 pa influência contextual vizinho adjacência imediata similares ao
 termos equação versão flexível critério descrito anteriormente obtida por
 pesos adicionais parâmetros conforme podemos observar seguir f
 f
 f
 f
 f
 i
 i
 
 i
 i
 i
 i
 <
 i
 ni
 influências relativas modelo imagem/ruído coação
 contextual continuamente variadas termos parâmetro tabela
 ilustra critérios obtidos função diferentes valores enquanto para
 condição exclusivamente governada modelo
 imagem/ruído somente coação contextual refletida condição
 original dada obtida diferentes influências obtidas para
 valores resultados experimentais apresentados figura
 claramente apresentam flexibilidade permitida técnica estudos algoritmos paralelos visÃo
 critério
 f
 i
 i
 
 i
 i
 pa f
 f
 f
 f
 f
 i
 i
 
 i
 i
 i
 i
 <
 i
 ni
 f
 f
 i
 i
 i
 i
 i
 ni
 f
 f
 i
 i
 
 i
 pa i
 i
 ni
 f
 i
 i
 i
 ni
 tabela exemplos critérios obtidos termos resultados técnica restauração imagem original
 respectivos estratÉgia paralelismo
 diferente técnicas apresentadas anteriormente capítulo o
 algoritmo restauração imagens baseado campos aleatórios markov é
 método iterativo repete continuamente ocorra convergência
 numérica vista paralelismo fato acrescenta uma
 complexidade estratégia troca mensagens processos
 ocorre diversas atualizar dados iteração torna o
 capÍtulo problema interessante figura apresenta bases estratégia paralelização quatro
 elementos processamento imagem dividida processo mestre que
 distribui processos escravos ficando fragmento distribuição processo executa algoritmo mrf consiste uma
 série iterações envolvendo troca mensagens atualização dados que
 serão discutidos adiante tendo convergido técnica resultados são
 enviados mestre une fragmentos formando resultado a
 imagem original imagem aquisição
 divisão distribuição
 mrf algoritmo
 recebe une o
 resultado
 escravo mrf
 pa mestre
 escravo mrf
 mestre
 imagem
 resultado
 escravo mrf
 mestre mrf
 estratégia básica paralelismo técnica mrf técnica mrf elemento calculado considerando cliques
 envolvendo vizinhança torno pixel distâncias
 maiores sejam verificadas situação ocorre longo tempo
 iterações propagação elementos vizinhos modo para
 iteração ocorre dependência dados limites divisão da
 imagem solucionar dependência dados atualizar porções de
 imagem elemento processamento permitindo propagação de
 informações longo imagem implementadas estruturas de
 atualização dados vetores última sendo único a
 figura apresenta configuração estruturas atualização imagem podemos observar vetor vertical composto pixels da
 borda ocorrendo mesmo vetor horizontal associado à
 pequena estrutura atualização caracterizada é
 estudos algoritmos paralelos visÃo
 composta pixel canto superior esquerdo da
 da
 imagem
 imagem
 da
 da
 imagem
 imagem
 estratégia básica paralelismo técnica mrf incorporação estruturas atualização permite iterações
 pa sejam calculadas concorrência resolvendo dependência dados
 permitindo convergência técnica propagação dados das
 vizinhanças módulos paralelos devem trocar informações
 contidas estruturas atualização iteração algoritmo mrf a
 figura ilustra troca informações estruturas atualização nela apresentados módulos representados caixas numeradas respectivas estruturas atualização representadas caixas
 preenchidas diferente figura distinção processos
 mestre escravo diagrama transferência estruturas atualização arquitetura balanceamento carga definido quantidade de
 serem processados caso sistemas heterogêneos seja capÍtulo unidades processamento possuem diferentes poderes
 computacionais devem atribuídas porções imagem proporcionais à
 performance unidades processamento a
 figura apresente diagrama limitado unidades de
 processamento preocupação balanceamento carga arquitetura
 permite conjunto virtualmente infinito configurações figura apresenta possibilidades configurações da
 arquitetura unidades processamento demonstram a
 arquitetura estendida facilmente qualquer elementos de
 processamento balanceamento carga realizado alojando
 módulo imagem única unidade processamento essa
 abordagem mostrada figura apresentados exemplos
 envolvendo balanceamento carga sistemas heterogêneos módulos
 agrupados caixas alojados único elemento processamento permitindo modo distribuição irregular carga computacional longo
 diagrama transferência estruturas atualização elementos processamento estudos algoritmos paralelos visÃo
 exemplos balanceamento carga elementos de
 processamento heterogêneos técnica iterações depende ruído da
 estrutura imagem casos convergência garantida o
 processamento finalizado eventos seguintes ocorrendo
 modificação nenhum módulos convergência iterações
 ultrapassa limiar pré-estabelecido devemos observar cada
 módulo envia estruturas atualização módulos essas
 estruturas necessárias iteração módulo é
 finalizado fica inativo iteração algum dado alterado
 estruturas atualização então módulo inicia iteração pa contrário envia estrutura aguarda dados capÍtulo mrf
 mrf
 mrf
 classificação bayeseana
 mestre
 mrf
 recebe estruturas
 escravo envia estrutura continua
 envia estrutura para
 escravo confere estruturas
 envia resultados
 escravo agrupa resultados
 diagrama execução algoritmo mrf paralelo quatro
 elementos processamento figura apresenta diagrama representa arquitetura em
 execução elementos processamento passo técnica é
 classificação bayeseana realizada mestre então distribuída partir
 dados iniciadas iterações mrf iterações do
 algoritmo mrf variável devido natureza estocástica existe uma
 maneira prever precisão será executado módulo parar
 tempos diferentes observado módulos escravos terminam iteração módulo termina iteração no
 entanto qualquer iteração módulo parado voltar ativa mediante
 alterações estrutura atualização observado módulo escravo
 recebe dado diferenciado iteração sendo forçado processar mais
 iteração tarefa verificar algoritmo fica cargo mestre ao
 iteração recebe mensagem estado módulo finalizando processamento módulos tiverem convergido a
 finalização algoritmo resultados enviados mestre os
 combina formando resultado implementaÇÃo resultados
 estratégia paralelismo algoritmo restauração imagens
 baseado campos randômicos markovianos desenvolvida durante este
 doutorado implementada sistemas distribuídos cvmp nesta
 estudos algoritmos paralelos visÃo
 seção vamos apresentar resultados experimentais implementação paralela da
 técnica máquinas conectadas rede ethernet mb/s primeiro
 experimento utilizamos máquinas diferentes performances resultam em
 balanceado modo máquinas velozes precisam
 esperar lentas continuar processamento essa
 pa abordagem leve performance baixa interessante ilustrar
 características utilizamos experimento uma
 imagem binária figura apresenta diagrama caracterizando execução do
 enquanto figura mostra diagrama correspondente à
 transferência dados máquinas utilizadas experimento uma
 pentium pentium bolhas encontrado diagrama figura devido
 especialmente máquinas velozes esperar vagarosa
 máquina mhz diagrama execução algoritmo mrf paralelo sistema
 heterogêneo capÍtulo diagrama troca mensagens observando diagramas figuras podemos verificar
 dificuldade estabelecer performance real sistema
 previsível iterações experimento apresentado o
 mestre escravo iterações enquanto escravos apenas
 extrairmos medidas desempenho consistentes escolhemos
 situações versão seqüencial paralela quatro
 iterações realizamos experimento distribuído homogêneo com
 máquinas pentium mb/s figura apresenta gráfico tempo execução versões
 seqüencial paralela máquinas conforme observado a
 performance paralelo aumenta medida aumenta tamanho da
 imagem tornando-se rápido versão seqüencial imagens
 estudos algoritmos paralelos visÃo
 p
 sp
 tamanho imagem pixels comparações performance versão paralela e
 seqüencial gráfico tempo execução função tamanho de
 imagem gráfico taxa desempenho função tamanho de
 imagem dimensÃo fractal
 muitas formas natureza complexas irregulares difíceis
 mesmo impossíveis serem expressas analisadas geometria
 euclideana estudos auto-similaridade irregularidade pa mandelbrot mandelbrot maneira considerar tais formas geometria fractal grande
 objetos naturais neurônios nuvens modelado e
 melhor compreendido figura apresenta exemplos fractais o
 triângulo sierpinski stanley mandrelbrot mandelbrot idéia dimensão fractal surgiu tentativa determinar medida
 complexidade formas figura inicialmente
 dedicado geometria fractal conceito dimensão fractal rapidamente se
 espalhou permitindo aplicações diversas áreas tais ciência dos
 materiais geologia visão computacional biswas costa diversas técnicas estimar dimensão fractal descritas na
 literatura caserta capÍtulo simples contagem caixas peitgen saupe falconer exemplos fractais triângulo sierpinski mandelbrot
 vamos limitar método salsichas minkowski tricot método cálculo dimensão fractal conhecido salsichas de
 minkowski produz estimativa dimensão bouligand-minkowski coelho diferentes raios imagem resultado convolução círculo calcula-se ocupada pixels significantes nulos projetam-se
 então obtidos pares gráfico log log usualmente irão caracterizar reta determinada
 regressão linear dimensão fractal obtida inclinação reta paralelização técnica simples ocorre a
 dependência dados durante concorrência implementado
 diretamente componente processor farm cvmp simplificando a
 implementação modo cvmp define-se uma
 arquitetura processor farm processo mestre distribui cópia imagem para
 escravos seguir distribui processo escravo tarefa enviando determinado valor raio tarefa constitui convolução um
 círculo raio determinado mestre determinação resultado
 enviada mestre calculada mestre supervisiona o
 conjunto escravos medida tarefas sendo executadas são
 estudos algoritmos paralelos visÃo
 atribuídas escravos desocupados sejam calculados definidos raios determinados mestre os
 resultados obtidos mestre realiza regressão linear em
 log log inclinação reta obtida finalmente determina dimensão fractal
 imagem vantagens utilização abordagem balanceamento de
 pa carga automático possibilitando utilização conjunto heterogêneo de
 elementos processamento necessidade realizar qualquer alteração na
 implementação explorar versatilidade implementamos técnica um
 distribuído rede padrão ethernet mb/s máquinas
 baseadas processador amd freqüências distintas mhz máquina veloz escravo utilizamos método convolução multiplicação disco a
 imagem domínio freqüência fourier brigham processo convolução caracteriza basicamente fft imagem do
 disco produto complexo domínios complexos fft inversa constituindo resultado operação convolução realizamos experimento imagem binária discos utilizados raios variando figura apresenta diagrama execução obtido ferramentas estatística
 cvmp devido pequeno fluxo dados trocas mensagens rede o
 possui ótima performance observe pequena quantidade bolhas prova excelente performance fato paralelo com
 máquinas heterogêneas 200 mhz aproximadamente rápido versão seqüencial executada na
 máquina veloz 375mhz capÍtulo diagrama execução máquinas cvmp processor farm utilizado muitas aplicações de
 processamento imagens visão computacional problemas multi-escala
 cesar implementação idêntica dimensão fractal minkowski descrita seção bastando substituir processo convolução discos raio variado
 gaussianas diferentes desvios padrão capÍtulo
 aplicaÇÕes paralelas
 visÃo
 trust computer you can throw out window steve wozniak
 capÍtulo aplicaÇÕes paralelas visÃo
 capÍtulo aplicaÇÕes paralelas
 visÃo
 introduÇÃo
 capítulo anterior vimos estratégias paralelismo e
 implementações métodos visão computacional processamento de
 imagens capítulo iremos apresentar aplicações inéditas desenvolvidas no
 cvrg discutida protótipo paralelismo ferramenta integração informações caso atributos
 visuais cor estéreo aplicação experimento projeto
 pa ynergos psicofísica desenvolvido modelo matemático
 complexidade imagens baseado padrão percepção humana finalizamos capítulo apresentando projeto treevis paralelo de
 reconhecimento plantas arbóreas integraÇÃo cor estÉreo projeto
 podemos caracterizar computação paralela ciência cujo
 objetivo fundamental senão único performance modo emprego
 temática visão artificial desenvolvimento estratégias e
 arquiteturas reduzir tempo execução algoritmos métodos
 envolvidos atividade natureza entretanto adota paralelismo modo
 versátil conforme discutimos capítulo fundamental o
 desempenho processamento informações sistemas biológicos realizado
 conjunto estratégias paralelização massa multinível a
 natureza encontrou paralelismo chave vital mecanismos de
 integração informações desenvolve papel fundamental na
 integração atributos visuais modularizados córtex visual zeki bases visão artificial capÍtulo capítulo modelo especialização funcional córtex visual primatas proposto zeki ship zeki shipp visual organizado módulos independentes módulo responsável
 processamento especializado atributo visual durante processamento
 informações módulo permutar informações módulos ocorrendo colaboração diferentes atributos visuais abordagem
 caracteriza integração múltiplos estágios seção conta como
 princípio básico integração atributos visuais diferentemente abordagens paralelismo apresentadas nesta
 tese tradicional paralelismo atuou ferramenta de
 performance iremos apresentar seção proposta integração entre
 atributos visuais cvmp utilizado exercer integração da
 troca informações atributos visuais distintos cooperar
 atingir determinado objetivo seja lacuna da
 visão artificial constitui colunas fundamentais projeto modo estaremos apresentando passo projeto um
 visão artificial baseado integração informações provenientes de
 atributos visuais distintos caso cor estéreo atributos especificados módulos subsistemas possuindo meta resultados módulo cor responsável
 segmentação imagens adquiridas fornecendo informações
 referentes regiões bordas enquanto módulo estéreo utiliza as
 informações providas atributo cor determinar representação mais
 abstrata cena representa objetos das
 informações regiões bordas 2d informação de
 profundidade caracterizando reprodução estrutura objetos forma
 tridimensional proposto desenvolvido intuito realizar o
 reconhecimento objetos poliédricos módulos responsável
 identificação objetos cubos pirâmides pa conforme comentamos características projeto cooperativo diversos pesquisadores prover paralelismo de
 simples eliminando restrição somente especialistas em
 computação paralela sejam capazes desenvolver aplicações paralelas permite
 pesquisadores possam implementar sistemas paralelos aplicaÇÕes paralelas visÃo
 mesmo sejam complexos cvmp atua ferramenta de
 integração pesquisadores desenvolver módulos máquinas
 individuais conectam integram formando podendo definido protótipo integração cor estéreo apresentado capítulo desenvolvido pelo
 cooperativo doutorandos visão cibernética alan
 salvany felinto moreira módulo estéreo jander moreira moreira participação autor cvmp base desenvolvimento paralelo do
 envolveu colaboração planejamento estruturação estruturaÇÃo sistema
 projeto série sofisticados recursos visão conforme discutido capítulo seu
 protótipo limitado baseando-se essencialmente integração
 atributos cor estéreo integração atributos conforme
 idealizada processamento permitir processamento percorra caminho
 execução ambos sentidos top-down botton-up permitir a
 utilização informações alto integração atributos tarefa
 difícil explorada modo protótipo apresente a
 execução único sentido botton-up limitado mecanismo de
 integração ocorre etapa hierárquica constitui importante
 passo estudos mecanismos integração atributos consequentemente projeto cor/estéreo cuja estrutura básica mostrada diagrama de
 blocos figura composto módulos subsistemas aquisição de
 imagens segmentação cor análise formas reconhecimento objetos e
 controle implementado padrões distribuídos utilizado de
 módulos alojado máquina distinta o
 cvmp responsável conexão troca mensagens módulos capÍtulo cor
 estéreo
 aquisição
 controle geral
 base dados
 modelos
 análise de
 reconhecimento
 formas
 objetos
 integração cor estéreo estrutura
 pa modular moreira mÓdulo aquisiÇÃo
 aquisição imagens realizada câmeras digitais ccd imagens adquiridas pares câmeras posicionadas uma
 distância conhecida convergência seja eixos captura paralelos módulo aquisição independente autônomo alojado máquina que
 possui dispositivo aquisição imagens funcionamento módulo fica aguardando mensagens de
 módulos solicitando serviços módulo recebe uma
 solicitação realizada aquisição imagens transmitidas módulo
 solicitante mapas bits processo módulo envia uma
 mensagem indicando módulo solicitante serviço efetuado êxito e
 volta estado espera mÓdulo cor
 módulo cor responsável segmentação imagens do
 par estéreo técnica utilizada conhecida mapa auto-organizável trata-se
 técnica baseada redes neurais consistindo segmentação das
 imagens regiões formadas agrupamentos pixels técnica é
 descrita detalhes moreira tese doutorado moreira imagens esquerda direita par estéreo utilizadas o
 treinamento mapa auto-organizável convergência técnica são
 aplicaÇÕes paralelas visÃo
 obtidas classes identificadas segmentam imagem regiões base
 regiões determinadas fronteiras gerando mapa bordas a
 segmentação ocorre imagens informações
 detectáveis irrelevantes módulo estéreo anÁlise formas
 análise formas baseada detecção retas mapa bordas objetos poliédricos modelados retas que
 constituem arestas detecção retas feita transformada de
 hough discutida seção dela encontradas retas passam
 colineares imagem conforme vimos seções na
 transformada hough retas detectadas representadas picos no
 espaço hough entanto colineares ruídos imagem geram um
 picos tornando praticamente impossível obtenção somente das
 retas interesse solucionar problema introduzido backmapping ou
 rastreamento técnica complementar solucionar problema combinação transformada hough backmapping módulo análise obtém retas imagem tentativa localizar arestas
 objetos entretanto módulo análise formas necessita apenas
 conhecer equação retas imagem determinar seus
 segmentos seja retas começam terminam para
 determinar segmentos retas utilizada técnica proposta costa &
 sandler costa sandler mediante resultado backmapping eliminar retas consecutivas e
 coincidentes realizada análise formas consiste determinação
 segmentos retas contidos mapa bordas estÉreo
 módulo estéreo efetua cálculo profundidade das
 pa extremidades segmentos retas determinados módulo análise de
 formas cálculo profundidade realizado disparidades localizadas
 pares imagem adquiridos disparidade é
 determinada conjugados correspondência pontos
 capÍtulo conjugados pares coordenadas coordenada imagem par
 estéreo relacionadas mesmo físico cena realizada a
 aquisição par câmeras shirai dentre diversos métodos determinar conjugados
 correlação diferenças quadráticas mínimas transformadas gabor outros
 theimer mallot implementação módulo estéreo método janelas quadradas nessa
 abordagem dado imagem centrada janela quadrada com
 tamanho determinado busca conjugado consiste localização da
 janela correspondente imagem par estéreo similaridade é
 determinada conteúdo janelas solucionar ambigüidades é
 realizada mudança sistemática tamanho janelas conforme indicado por
 shirai shirai determinadas linha epipolar calculada geometria câmeras determina região provável conjugado calibração câmeras do
 realizada mediante procedimentos propostos tsai tsai reconhecimento objetos
 universo objetos proposto constituído entidades cubo tetraedro prisma figura objetos é
 construído alumínio apresentando dimensões conhecidas face
 possui cor uniforme distinta permite segmentação região cromática idealizado identificar objetos tridimensionais qualquer
 cena sendo tolerante rotação translação objetos espaço modelo arestas objetos constituem universo de
 reconhecimento cubo tetraedro prisma módulo reconhecimento uso base dados contendo os
 modelos objetos correspondem conjunto segmentos retas
 aplicaÇÕes paralelas visÃo
 contendo extremidades especificadas coordenadas tridimensionais sistema
 busca reconhecimento realizado mediante comparação modelos da
 base dados frente informações extraídas cena identificação objeto
 verificação exaustiva visa emparelhar modelo cena
 base dados escalas descrições objetos são
 consideradas ocorre normalização segmentos início
 comparação emparelhamento realizado mediante rotações translações do
 modelo base possibilitar identificação objetos tridimensionais
 qualquer posicionamento espacial emparelhamento erro geral
 calculado será descrito seção base cálculo é
 realizado reconhecimento objeto exemplos cenas reais quais realizou a
 identificação objetos moreira cena objetos posicionados real contendo muitas
 situações segmentos retas detectáveis não
 pa pertencem objetos fundo cena pertencentes objetos
 posicionados cena universo reconhecimento podem
 ocorrer situações surgem segmentos retas pertencentes
 objetos reconhecimento satisfazem modelo reconhecimento
 poliédrico comparações modelo limites erro sistema
 elimina informações indesejáveis desconsiderando-as permitindo a
 criação modelo poliédrico reconhecimento objetos cenas reais e
 complexas figura apresenta imagens adquiridas na
 capÍtulo podemos observar complexidade cena controle geral
 módulo controle responsável supervisão demais
 módulos controle fluxo informações comunicação
 módulos realizada controle central conforme podemos observar na
 figura existe conexão módulos passem controle
 central decisões seqüências operações ciclo execução controle
 dependência dados realizados determinação de
 modo módulos considerados escravos seu
 comando modo controle central promove hierarquia integração dos
 módulos compõem critÉrio avaliaÇÃo
 seção vamos descrever critério avaliação utilizado a
 realização reconhecimento objetos implementado módulo de
 reconhecimento critério avaliação realiza comparação modelo do
 objeto seja modelo retirado imagens adquiridas sistemas o
 modelo base dados reconhecimento ocorre discrepância entre
 modelos determinada cálculo erro dentre comparações
 modelos base erro determinado limite
 pré-estipulado cálculo erro estabelecido erro médio quadrático as
 distâncias extremidades correspondentes segmentos
 emparelhados modelo objeto imagem base dados equação apresenta cálculo erro indica extremidades de
 segmentos moi mbi representam conjugados espaço modelo
 objeto imagem modelo base respectivamente função de
 distância euclidiana n
 
 q
 
 i
 cálculo erro estabeleça metodologia objetiva de
 comparação modelos existem situações cálculo erro
 pa aplicaÇÕes paralelas visÃo
 capaz reconhecer objetos precisão sendo necessário adicionar
 considerações critério avaliação situações ocorre devido
 similaridade objetos universo classificação podemos
 observar figura tetraedro prisma consideradas
 objetos poliédricos formados cortes planares cubos se
 tomarmos cubo fizermos corte plano passa arestas
 opostas teremos resultado prisma plano passar por
 vértices compartilhados mesma face contenha uma
 diagonal teremos tetraedro modo analisador formas detectar somente segmentos de
 reta conforme apresentado figura utilizarmos modelo
 diretamente emparelhamento testarmos seguir critério avaliação através
 cálculo erro ocorrer falsos reconhecimentos devido similaridade
 vértices situação erro médio quadrático praticamente idêntico impossibilitando reconhecimento eficaz modelo arestas objetos constituem universo de
 reconhecimento cubo tetraedro prisma solucionar problema introduzida semântica é
 ponderado segmentos detectados peso adicional critério de
 avaliação modo considerado total arestas visíveis invés
 total arestas total arestas visíveis poliedros que
 constituem universo reconhecimento respectivamente o
 cubo tetraedro prisma n
 n
 v
 o
 k
 e
 nv
 base contexto introduzido erro relativo ao
 capÍtulo emparelhamento bordas conforme indicado equação no
 indicam respectivamente arestas visíveis modelo de
 arestas segmentos imagem emparelhados fator fator de
 correção magnitude erro tenha mesma variação máxima o
 erro quadrático médio erro estabelece razão falha no
 emparelhamento esperado arestas visíveis relacionadas arestas
 imagem expectativa inicial arestas visíveis 
 q
 e
 erro total definido equação consiste ponderação os
 erros parâmetro erro permite distinção modelos
 pa objetos base dados modelo objeto imagens reconhecido caracterizando modo critério avaliação módulo reconhecimento
 objetos funcionamento resultados
 constituído módulos autônomos independentes distribuídos máquinas compõe rede usualmente máquina aloja
 módulo experimentos realizados laboratório utilizou-se
 geralmente máquinas compor configuração das
 máquinas aloja somente módulo aquisição necessita hardware
 especial aquisição imagens enquanto módulos cor controle
 partilham máquina módulos seja estéreo e
 reconhecimento utilizam máquina restante apresente arquitetura estrutura paralela havendo
 autonomia independência módulos compõe paralelismo foi
 utilizado integração tendo sido especificamente exploradas as
 possibilidades aumento performance modo apresenta uma
 cadeia execução seqüencial supervisionados controle módulos
 sendo executados seguindo determinado fluxo de
 aplicaÇÕes paralelas visÃo
 execução ciclo inicia-se aquisição pares imagem o
 módulo controle solicita módulo aquisição cumpra tarefa
 preestabelecida seja efetuar aquisição par imagens duas
 câmeras realizada aquisição imagens controle central solicita ao
 módulo cor realize segmentação imagens par estéreo como
 resultado segmentação cor produzido mapa bordas imagem classificação imagem método mapas auto-organizáveis
 moreira mapas dimensões equivalente taxas decaimento aprendizado raio vizinhança foi
 adotado erro comparação clássico método gradiente sobel sobel imagens par estéreo adquirido esquerda o
 respectivo resultado segmentação método mapas auto-organizáveis
 centro sobel direita exemplos segmentação módulo cor imagem direita do
 par estéreo adquirida módulo aquisição resultado da
 segmentação módulo cor mapas auto-organizáveis segmentação por
 sobel finalidade comparativa gerado mapa bordas segmentação módulo cor o
 capÍtulo módulo controle envia mensagem módulo análise formas processe baseado transformada hough backmapping o
 pa módulo análise formas função extrair segmentos retas da
 imagem figura contém segmentos detectados mesma cena diferentes vista segmentos retas detectados diferentes vistas de
 mesma cena figura esquerda etapa ciclo execução tarefa módulo
 estéreo finalizada análise formas módulo controle solicita o
 módulo estéreo inicie processamento consiste basicamente determinação
 profundidade extremidades segmentos reta detectados das
 coordenadas extremidades segmentos retas módulo estéreo localiza
 conjugado cálculo disparidade determinada profundidade a
 determinação profundidade entretanto devido fatores
 diferenças perspectiva causam oclusões parciais introduzem
 reflexos diferenciados imprecisão segmentos reflexos cores e
 determinadas sombras acarretam imprecisões mapa bordas situações bordas segmentos detectados não
 fiquem precisamente localizados posições reais objetos modo as
 coordenadas extremidades segmentos coincidir base ou
 fundo cena modo valor profundidade calculado torna
 relativo fundo cena base deturpando dimensões posições dos
 objetos interesse evitar modelos incorretos conjugados de
 extremidades segmento reta determinado modo
 adequado segmento excluído modelo objeto exclusão determinação correta conjugado ocorrem
 situações segmentos emparelhados modelo base sendo casos eliminados segmentos desconsiderados dessa
 aplicaÇÕes paralelas visÃo
 pertenciam fundo imagem reflexos sombras objetos da
 imagem exemplos reconhecimento objetos coluna esquerda é
 apresentada imagem direita par estéreo coluna direita modelo
 obtido objeto sobreposto modelo reconhecido banco dados finalizado processamento módulo estéreo controle central determina
 execução última etapa processamento tarefa realizada módulo de
 reconhecimento compara modelo objeto imagem modelos
 base dados identificando comparação apresente erro
 definido equação figura apresenta resultados processo de
 reconhecimento ilustrando objetos universo reconhecimento coluna esquerda imagens adquiridas câmera direita coluna
 direita respectivos modelos sobreposição objeto banco dados experimento figura objeto utilizado cubo reconhecido identificação arestas erro no
 experimento figura prisma reconhecido erro 
 finalmente tetraedro figura identificado erro 
 capÍtulo pa experimentos similares realizados cerca cenas com
 diversas condições iluminação fundo quantidade objetos diferentes que
 diagnosticando possui índice considerável de
 reconhecimentos incorretos casos reconheceu objetos
 corretamente erros apresentados oscilaram valores figura
 maiores detalhes funcionamento técnicas utilizadas e
 resultados obtidos tese doutorado moreira moreira distribuÍdo paralelismo
 implementado arquitetura distribuída plataforma
 windows/delphi ferramenta paralelismo cvmp graças sua
 arquitetura distribuída módulos compõe são
 independentes podendo dispostos máquinas diferentes conectadas por
 redes mesma máquina multitarefa conforme comentamos
 anteriormente possua requintes arquitetura paralela qual
 módulos autônomos separados independentes fluxo de
 execução ocorre seqüencial objetivo prima a
 integração controle módulos divididos dois
 grupos supervisor escravos escravos composto os
 módulos exceção módulo controle central basicamente módulos
 escravos considerados sistemas independentes ficam
 aguardando recebimento ordens troca mensagens cvmp recebida tarefa módulo executa autônoma e
 independente retornando resultado processamento voltando estado de
 vigília permanece seja requisitada tarefa módulo supervisor módulo controle finalidade é
 supervisionar controlar módulos atribuindo tarefas escravos trocas mensagens recebendo respostas coordenando ciclo de
 execução estrutura paralela permita execução
 simultânea módulos concorrência ocorre parcialmente devido à
 dependência dados módulos esforço generalizado do
 projeto integração mesmo tendo forte dependência dados módulos que
 aplicaÇÕes paralelas visÃo
 impossibilita execução simultânea devido arquitetura paralela distribuída facilmente incorporado diversos aspectos paralelismo que
 proporcionam concorrência consequentemente melhoram performance essas
 estratégias paralelismo implicam modificações divididas abordagens paralelizar processamento interno
 módulo ii adaptar processamento intermitente e
 adicionar mecanismos paralelismo temporal módulos situação módulos responsáveis por
 processamento cor estéreo análise formas substituídos por
 versão paralela modo visto independência módulos sua
 autonomia módulos processamento poderiam paralelos possuindo dessa
 sub-módulos seriam alojados diferentes máquinas caso do
 modelo distribuído diferentes processadores caso máquinas
 multiprocessadas caso específico módulo análise formas a
 paralelização processamentos referentes transformada hough e
 pa backmapping implementados via cvmp encontram-se
 exemplificados seções reconhecimento
 reconhecimento
 estéreo
 estéreo
 estéreo
 forma
 forma
 forma
 forma
 cor
 cor
 cor
 cor
 cor
 aquisição
 aquisição
 aquisição
 aquisição
 aquisição
 tempo
 pipeline estágios módulos sistema
 aquisição cor estéreo reconhecimento abordagem ii proposta adição paralelismo temporal ao
 pipeline módulos abordagem sistema
 deveria funcionar intermitência seja adquirindo processando
 analisando imagens provenientes câmeras caso conforme mostra
 figura baseado estrutura pipeline estágios e
 enquanto seqüência execução cena aquisição par imagens processamento cor processamento formas processamento estéreo e
 reconhecimento padrões estivesse sendo realizada seqüências já
 capÍtulo iniciariam processamento simultaneamente integraÇÃo pesquisadores
 protótipo amigável versátil pesquisadores pesquisa visão
 cibernética tornar paralelas aplicações promovendo maior
 performance possibilidade visão tempo real permitir adição ao
 contexto visão artificial filosofia integração modularidade e
 independência exigida modelos complexos córtex especial a
 especialização funcional proposta zeki ship zeki shipp possibilitando estudos científicos protótipo oportunidade satisfação trabalhar
 juntamente pesquisadores especialistas visão e
 processamento imagens jander moreira época projeto doutorando
 especialista cor alan salvany felinto doutorando especialista estéreo desenvolvimento protótipo colegas fundamental estudos cvmp tais simplicidade de
 pa utilização validação características herança oop ferramenta validadas desenvolvimento objeto herdado tcvmp utilização específica protótipo seção especial ilustrou integração os
 pesquisadores desenvolvimento sistemas visão ferramenta
 cvmp integração propiciada devido independência autonomia os
 diferentes módulos presentes sistemas distribuídos paralelos graças características módulo comporta caixa preta seguindo mesma filosofia conceito programação orientada objetos cox técnica implementação módulos basta enviar mensagem
 aguardar resposta processamento módulo abordagem facilita cooperativo que
 concentra esforços indivíduo desenvolvimento parte
 específica independência autonomia modular aliadas ao
 alojamento distribuído módulo propiciou ambiente desenvolvimento
 interessante laboratório pesquisador ficou
 aplicaÇÕes paralelas visÃo
 responsável máquina alojado módulo específico do
 colaboradores projeto trabalhar
 simultaneamente máquinas distintas qualquer testar integração
 enquanto trabalhavam no
 desenvolvimento pesquisadores disponibilizaram versão módulo sendo
 executado multitarefa máquinas módulo a
 máquina poderiam utilizados testes módulos mesmo
 tempo máquina sendo utilizada desenvolvimento novas
 versões respectivo módulo graças ambiente desenvolvimento teste distribuído o
 cooperativo simultâneo implementação protótipo do
 projeto integração atributos visuais sistemas visão artificial a
 integração harmonização pesquisa pesquisadores de
 pesquisa visão cibernética ynergos investigaÇÃo percepÇÃo
 humana complexidade formas
 capítulo discutimos projeto ynergos baseado na
 sinergia conceito associação simultânea diversos fatores
 contribuem ação coordenada cujo objetivo fundamental a
 implementação poderoso versátil laboratório visão computacional para
 auxiliar desenvolvimento validação técnicas sistemas experimentos em
 visão seção vamos apresentar experimento psicofísico realizado através
 projeto ynergos diversos paradigmas especial internet sistemas
 distribuídos computação paralela inteligência artificial visão biológica são
 utilizados integrada investigar percepção humana complexidade
 formas base investigação desenvolver modelo
 matemático/computacional sensação humana bruno experimento psicofÍsico
 percepção visual humana envolve processos altamente complexos não
 pa capÍtulo lineares organizados estrutura hierárquica marr inicia conversão sinal físico luz estímulo nervoso termina sua
 completa caracterização descrição sensação estímulo modo para
 estímulo físico dada modalidade sensitiva será criada uma
 percepção correspondente obedece uma
 dependência linear psicofísica tipo correspondência ser
 caracterizado modelado termos lei fechner dada equação constante proporcional intensidade estímulo físico a
 magnitude subjetiva barlow mol log p
 investigar parâmetros lei fechner relacionar
 percepção humana complexidade formas planejamos um
 experimento consiste apresentar série imagens indivíduo avaliará imagem atribuindo-lhe nota experimento
 torne estatisticamente representativo imagens ser
 considerado natureza divergente ex fotografia um
 escritório fotografia elefante etc fonte imagens vasta variada internet através
 módulo internet webworm será discutido adiante ynergos
 capaz montar base dados imagens variadas organizadas
 apresentadas espectador realização experimento resultados
 obtidos então comparados funções definidas valores medidos optou-se funções combinações lineares das
 características dada equação combinações lineares logaritmo das
 características devido lei fechner expressa equação fator de
 influência determinado parâmetro bias necessário possibilitar eventuais
 deslocamentos hiperplano definido função coordenadas origem caso seja preciso f
 s
 
 bias
 i
 f
 s
 
 log
 i
 bias
 pa aplicaÇÕes paralelas visÃo
 resultados obtidos análise humana então relacionados os
 resultados obtidos análise complexidade métodos
 computacionais quais serão discutidos seguir determinada a
 combinação linear ditará modelo computacional do
 comportamento humano termos computacionais aproximações combinações
 lineares apresentem fatores uma
 aplicação direta consideração possibilidade utilização dos
 modelos tempo real fatores considerados menores serão recursos computacionais requeridos consequentemente mais
 rápido será webworm
 construção banco imagens realizada coleta de
 imagens variados assuntos extraídas internet modo coletando
 imagens acaso internet estaremos garantindo imagens
 apresentadas experimento psicofísico possuirão natureza amplamente variada apresentando características comum poderiam ocorrer caso as
 imagens fossem recolhidas algum banco dados específico obtidas por
 alguma pessoa pessoas permitir aquisição imagens foi
 desenvolvido aplicativo incorporado módulo internet ynergos qual
 denominamos webworm cujo funcionamento básico consiste acessar
 páginas html trazer imagens webworm aplicação desenvolvida delphi de
 sockets winsock dumas máquinas internet estabelecendo comunicação servidores
 www webworm opera navegador netscape mecanismo
 sendkey windows fazendo netscape abra páginas html
 requisitadas capÍtulo internet
 netscape
 web worm
 ynergos
 netscape
 cache
 diagrama apresentado interações webworm figura apresenta diagrama esquemático contendo estrutura de
 funcionamento carregar página html webworm analisa código e
 monta listas denominada lista espera contendo os
 ponteiros páginas html imagens documento
 html feito aplicativo apaga arquivos diretório cache do
 netscape solicita página seja carregada a
 página imagens arquivos gif jpeg bmp etc carregadas webworm transfere imagens diretório cache netscape um
 diretório entrada imagens ynergos processo repetido páginas lista espera modo
 webworm capaz percorrer automaticamente páginas
 apontadas determinado sítio site podendo modo percorrer milhares
 pa páginas processo encerrado determinado de
 profundidade acesso alcançado figura ilustra do
 processo navegação caso página inicial apresenta ponteiros
 hyperlinks páginas conectadas páginas respectivamente webworm instruído percorrer
 profundidade serão carregadas imagens página
 inicial sucessivamente abordagem assumimos webworm realiza busca cega
 internet iniciada determinada página torne
 interessante iniciamos busca página resultante determinada
 aplicaÇÕes paralelas visÃo
 pesquisa mecanismo busca altavista yahoo chaves
 photo pictures página
 nível
 inicial
 nível
 nível
 navegação webworm vasta imagens utilizadas internet utiliza formatos de
 imagens jpeg gif imagens gif apresentam canais de
 cores reais rgb devido mecanismo paleta cores indexadas incorporado
 formato consideramos imagens jpeg apresentam
 canais cores reais 24bits rgb transferindo somente imagens a
 terminação jpg diretório entrada ynergos sendo imagens
 páginas formato jpeg consideradas variedade de
 figuras utilizadas internet tais botões banners texto formato gráfico propaganda tarefa separar imagens específicas realizada pelo
 ynergos analisa imagens diretório entrada considerando
 dimensão complexidade estrutura histograma imagens sintéticas são
 caracterizadas apresentar histogramas definidos filtrar as
 imagens desejadas caso experimento imagens fotográficas mÉtodos considerados
 conforme mencionamos dados extraídos experimento psicofísico
 deverão correlacionados modelos matemáticos analisar medir a
 complexidade imagens escolhemos métodos obtenção
 medidas complexidade entropia níveis cinza gonzalez woods cinza imagem variância histograma bruno capÍtulo bruno iv dimensão fractal salsicha minkowski tricot estudo métodos medidas complexidade realizado de
 diversos experimentos conduzidos pesquisa visão cibernética voltados particularmente análise morfológica neurônios a
 complexidade sido considerada neurocientistas importante
 característica classificar neurônios cesar costa pa conceito entropia usualmente empregado processamento imagens
 gonzalez woods cinza imagem histograma contexto entropia medida
 desorganização incerteza distribuição podendo empregada como
 caracterização complexidade imagem natureza método entretanto enfoca complexidade vista variação brilho na
 imagem analisada freqüência cinza a
 distribuição espacial longo imagem influencia cálculo da
 entropia tempo decaimento variância multi-escala distribuição níveis
 cinza escolhido devido potencial refletir estrutura espacial da
 imagem medida entropia variância seja
 determinada distribuição freqüência níveis cinza imagem a
 condição multi-escala engajada tempo decaimento seja
 incorporada natureza estrutura complexidade espacial medida medida importante tentativa quantificar complexidade de
 imagens circularidade determinada razão quadrado perímetro da
 modo estima-se circunferência mais
 simples complexas formas apresentam irregularidade especialmente
 concavidade finalmente dimensão fractal calculada experimento pelo
 método salsichas minkowski seção caracteriza como
 clássica quantificação complexidade experimento via web
 experimento disponibilizado internet modo qualquer pessoa
 planeta possa realizá-lo página experimento ynergos contém
 instruções básicas operação formulário solicitando dados do
 aplicaÇÕes paralelas visÃo
 usuário e-mail profissão grau instrução botão
 prosseguir usuário pressiona botão experimento inicializado conforme vamos narrar imagem experimento apresentada porção
 central janela período fixo tempo desaparecimento é
 exibida janela solicitando usuário nota uma
 interface box indicar grau complexidade nenhuma
 informação conceito complexidade dada as
 imagens tenham sido apresentadas avaliadas indivíduo página do
 experimento implementada html javascript envia resultado para
 cgi-bin commom gateway interface especial armazenado servidor
 experimento disponibiliza dados experimento ynergos no
 mesmo instante dados indivíduo avaliação média avaliação
 experimentos apresentada algoritmo genÉtico paralelo anÁlise e
 modelagem dados experimentais
 dados coletados experimentos psicofísicos processados
 qualquer ynergos obter modelo matemático-
 computacional percepção humana complexidade imagens resultados
 apresentados seguir obtidos experimento psicofísico realizado
 pessoas internet obter coeficientes combinação
 linear logarítmica características complexidade extraídas imagens
 subseção correlacionadas percepção humana utilizada versão
 pa distribuída algoritmo genético goldberg comentaremos seguir computação evolucionária destaca algoritmo genético tem
 tornado interessante alternativa otimização problemas
 combinatórios complexos algoritmos genéticos codificam soluções
 potenciais problema específico estrutura dados inspirada em
 cromossomos regras evolução genética inspiradas natureza tais
 reprodução mutação crossover adaptação definido melhor
 conjunto parâmetros indivíduos adaptam otimizados um
 determinado problema vista computacional algoritmo genético é
 técnica custosa entretanto apresenta potencial de
 capÍtulo implementação paralela inspiração encontra natureza onde
 indivíduos coexistirem paralelo ocorre mesmo diversos
 ambientes nichos versão paralela algoritmo genético implementada cvmp
 plataforma distribuída devido natureza problema adotada a
 estratégia paralelismo processor farm conforme vimos capítulo a
 estratégia processor farm amplamente utilizada diversas situações cvmp
 possui conjunto ferramentas específicas arquitetura provendo sua
 programação visual simplificando implementação concepção constituído conjuntos processos mestre escravo processo mestre responsável coletar redistribuir as
 populações durante execução gerar populações iniciais e
 supervisionar processos escravos processos escravos responsáveis
 processamento evolução populações abordagem adotada o
 mestre gera população parâmetros aleatórios distribui os
 processos escravos determinado pré-fixado gerações
 especificados parâmetro controle selecionados indivíduos mais
 adaptados resultantes processamento evolutivo escravo enviados
 mestre promove população baseada indivíduos e
 redistribui escravos ciclo mantém convergência pré-
 estipulada seja atingida figura apresenta diagrama ilustrativo a
 estratégia básica funcionamento algoritmo genético paralelo utilizado nela
 processo mestre conjunto processos escravos tarefas o
 mestre atribui escravos disponíveis populações serem evoluídas um
 determinado gerações escravo retorna mestre determinado
 indivíduos melhor adaptados aplicaÇÕes paralelas visÃo
 indivíduos
 melhor adaptados
 gerações
 escravo n
 mestre
 escravo população total a
 evoluída
 diagrama ilustrativo estratégia paralelismo algoritmo
 pa genético distribuído arquitetura cvmp processor farm implementação algoritmo genético gerada população inicial
 mediante adaptação fitness dada distância euclidiana os
 parâmetros complexidade definida métodos matemáticos valor da
 função determinada análise humana geração melhores taxas adaptação submetidos cross-over mutação fim
 produzir adaptação mantidos garantir diversidade maiores
 detalhes algoritmo utilizado experimento obtidas bruno
 resultados correlação algoritmo genético modelos
 complexidade utilizados referente combinação linear logarítmica
 capÍtulo figura apresenta resultados algoritmo genético mostrando o
 melhor ajuste características modelos matemáticos utilizados função da
 análise humana figura corresponde ajuste modelo de
 combinação linear equação figura modelo logaritmo equação
 taxa adaptação normalizada intervalo -1;1 somente os
 coeficientes maiores considerados algoritmo genético modo
 reduzir características modelo bruno definido coeficientes válidos maiores menores 
 podemos analisar otimização realizada algoritmo genético chegar ao
 modelo características figura coeficientes extraídos
 originalmente 18 entropia tempo decaimento circularidade minkowski modelos finais reduziram figura figura respectivamente combinação linear logarítmica que
 indica modelo logarítmico demonstrou efetivo características
 resultantes modelo entropia positivas negativa de
 tempo decaimento variância positiva negativa minkowski
 positiva negativa curiosamente nenhum coeficiente circularidade
 definido modelo logarítmico indicar predominância de
 textura percepção complexidade humana modelo
 obtido utilizado análises imagens aplicações visão
 computacional necessários obter medidas complexidade aproximadas
 percepção humana eficiÊncia implementaÇÃo paralela
 vista paralelismo cvmp implementação paralela do
 algoritmo genético possibilitou comprovação eficácia benefícios da
 utilização cvmp processor farm basicamente encontramos que
 consolidaram utilização cvmp processor farm demonstrados da
 implementação algoritmo genético paralelo simplicidade utilização ii estratégias paralelismo prontas uso utilização genérica iv balanceamento carga automático alta performance figura apresenta gráficos contendo tempo execução do
 algoritmo genético paralelo gráficos blocos representam as
 tarefas realizadas processos escravos consistem executar um
 pa aplicaÇÕes paralelas visÃo
 determinado gerações gerações gerações exemplos distribuído constituído máquinas
 heterogêneas diferentes performances coloca prova seu
 balanceamento carga gráficos utilizadas máquinas
 conectadas rede ethernet mb/s máquinas executado
 processo escravo máquina veloz incorporado processo
 mestre executado concorrência multitarefa gráfico foram
 utilizadas máquinas conectadas fast ethernet despendido troca mensagens processos pequeno comparado tempo processamento tarefas modo
 diferença velocidade sistemas rede praticamente
 desconsiderada gráficos apresentando tempo execução implementação
 paralela algoritmo genético capÍtulo eficiência balanceamento cargas observada
 ausência bolhas demonstrando ótima utilização hardware
 eficiência acarretando diretamente performance determinação
 precisa performance seja dificultada devido natureza aleatória configuração inicial execução algoritmo genético pode
 estipulada aproximada qualidade balanceamento cargas e
 baixa demanda computacional requerida trocas mensagens deste
 modo máquinas utilizadas forem homogêneas taxa de
 desempenho máquinas utilizadas geraÇÃo automÁtica relatÓrios na
 web
 usualmente experimentos conduzidos ynergos produzem grande
 conjunto gráficos dados numéricos texto bruno automáticos resultados obtidos experimentos modo auxiliar a
 organização apresentação visualização dados resultados gerados
 html possibilitando utilização aplicativos assim
 publicação direta internet treevis paralelo visÃo
 anÁlise reconhecimento arbÓreo
 levantamento espécies arbóreas florestas dos
 alicerces estudo pesquisa científica diversas áreas ciência
 associadas botânica apresenta importância vital manutenção e
 preservação ecológica economia florestal cultivo explorativismo matéria prima remédios etc importância acentua nas
 florestas tropicais equatoriais caracterizam divergência de
 famílias espécies árvores muitas quais exploradas se
 mantém objetos pesquisa científica seção será introduzida proposta treevis proposto
 pa reconhecimento automático espécies arbóreas baseado na
 aplicaÇÕes paralelas visÃo
 análise sistemática folhas prover reconhecimento automático o
 treevis conta banco dados armazena modelo matemático do
 espécime descrição fotográfica oferecendo alternativa aos
 herbários tradicionais será descrito protótipo sistema
 treevis implementado conta arquitetura paralela
 melhorar performance reconhecimento automático seção será
 finalizada dados experimentais reconhecimento arbóreo algumas
 espécies vegetais brasileiras mata atlântica cerrado realizadas do
 protótipo treevis levantamento arbÓreo herbÁreos
 exploração desenfreada recursos naturais destruição habitats e
 extinção inúmeras espécies animais vegetais acontecendo últimos
 séculos preocupação real humanidade século entretanto estamos crítico temas atraindo a
 atenção diversos segmentos sociedade sendo mero
 debate científico respeito futuro distante atenção desgaste
 incontrolável biosfera perda recursos genéticos nela presente nos
 mostra desafios tempo converge estudo a
 compreensão biodiversidade conhecermos possamos ainda
 resgatar preservar manejar recursos garantindo continuidade
 deleite gerações futuras florestas tropicais equatoriais regiões apresentam e
 exuberante diversidade biológica planeta coincidentemente estão
 presentes países emergentes planos consistentes preservação
 ecológica levantamento sistemático vegetação distribuídos américa
 latina África sudeste asiático dentre países podemos destacar brasil possui flora arbórea diversificada mundo cuja de
 direcionamento técnico conscientização ecológica exploração recursos
 florestais acarretando danos irreparáveis muitas espécies ainda
 desconhecidas estudadas correm sério risco desaparecer bases estudo biodiversidade sobretudo reino vegetal consistem taxonomia inventário taxonomia vegetal ciência que
 encontra fundamental botânica sendo responsável síntese capÍtulo organização classificação identificação nomenclatura plantas baseada
 fundamentalmente morfologia anatomia recebe informações adicionais enriquecendo processos classificação obtidas desenvolvimento
 pesquisas áreas podemos destacar citologia fisiologia ecologia fitogeografia paleobotânica fitoquímica genética joly stace simultaneamente classificação surge necessidade realizar o
 inventário espécies efetuar reconhecimento de
 espécies catalogadas inventário botânico realizado essencialmente através
 herbários herbários caracterizam coleção científica de
 exemplares ramos férteis galhos folhas podendo possuir flores frutos
 característicos coletados natureza prensados dessecados montados sobre
 pa papel cartão associados exemplar existe ficha padronizada contendo
 informações espécime rigor taxonomia herbários
 armazenados quantidade espécimes deverão ser
 alojadas locais adequados preservação permitindo conservação por
 longo período tempo ordem séculos exemplares devem ser
 arranjados critério botânico auxiliar localização estudos
 peixoto barbosa modo herbários constituem importante ferramenta de
 botânico quais examinados estudados espécimes procedentes diferentes locais ecossistemas auxílio botânico comparar exemplar natureza centenas espécimes
 classificadas especialistas modo realizar identificação da
 pesquisa campo utilização ferramentas herbário realizado o
 levantamento arbóreo região consiste especificação na
 identificação espécimes árvores encontradas levantamento arbóreo é
 importância vital estudo habitats ecossistemas a
 eventual descoberta espécimes auxiliando desenvolvimento da
 pesquisa científica coleta tratamento amostras
 levantamento arbóreo árdua tarefa fases devem
 realizadas manual etapa processo consiste
 pesquisa campo fase realizada coleta exemplares serão
 aplicaÇÕes paralelas visÃo
 identificados exemplares coletados ramos férteis seja galhos com
 folhas caso estejam presentes flores frutos coletado material ser
 preparado conserve etapa pesquisa consiste na
 comparação identificação espécimes material herbário vez
 etapas separadas dias mesmo meses
 fernandes material coletado recebe tratamento similar executado a
 formação herbário seja ramos prensados dessecados da
 conservação tratamento auxiliar identificação material uma
 terá aspecto semelhante espécimes herbário peixoto &
 barbosa classificaÇÃo atravÉs herbÁrios
 posse material coletado campo realizada identificação através
 herbário fase exercido manual caso o
 botânico tenha alguma pista respeito família espécie exemplar a
 pesquisa direcionada comparação realizada pranchas previamente
 escolhidas entanto muitas situações especialmente o
 botânico profundo conhecedor determinada espécie região a
 busca realizada comparações universo maior
 pranchas comparação consiste colocar material coletado prancha
 herbário realizar identificação visual semelhanças diferenças entre
 ambas localizada prancha apresenta semelhança o
 espécime coletado realizada identificação processo trabalhoso
 demorado requer vasto treinamento botânico minimizar os
 erros decorrentes falsas identificações pa herbÁrios brasileiros
 herbários repositórios material científico contendo a
 documentação florística país informações constituem fonte primária
 botânica quais realizados trabalhos taxônomicos evolutivos ecológicos biogeográficos etnobotânicos estudos biodiversidade sendo importante ferramenta fonte dados planejamento do
 capÍtulo desenvolvimento sustentável peixoto barbosa países desenvolvidos possuem herbários praticamente completos quais preparadas listas espécies ameaçadas extinção de
 valor medicinal ornamental produtoras frutos comestíveis muitas entretanto contam rica flora tropical exuberante
 biodiversidade situação países desenvolvimento em
 especial brasil feito mesmo devido recursos informações complexidade tarefa inúmeros estudos realizados espécies brasileiras promissoras
 certificam valor flora nativa diferentes aspectos trazem tona o
 desconhecimento conjunto espécies sociedade
 moderna informações espécies nativas predominantemente diversidade riqueza flora pequeno de
 botânicos especializados possam estudá-las longo trabalhoso processo
 levantamento florístico situação torna-se crítica rapidez com
 desaparecendo vegetação natural longo período treinamento
 exigido formar especialista taxonomia estado
 nº herbários exemplares
 rj
 sp
 rs
 pr
 pa
 df
 mg
 ba
 pa am
 pe
 sc
 pb
 ce
 go
 es
 ms
 al
 mt
 pi
 ap
 ac
 se
 rn
 ma
 tabela herbários brasileiros números exemplares peixoto &
 pa barbosa aplicaÇÕes paralelas visÃo
 brasil conta espécimes vegetais sociedade brasileira botânica sbb 1997 peixoto barbosa possa parecer significativo reflete pequena fração biodiversividade
 florística brasileira considerar muitas espécies repetem diferentes
 herbários tabela apresenta listagem contendo herbários e
 espécies catalogadas estado brasileiro tabela apresenta lista
 herbários detêm informações estado
 sigla
 instituição
 exemplares
 rj
 r
 museu nacional rio janeiro
 rj
 rb
 jardim botânico rio janeiro
 sp
 sp
 instituto botânica paulo
 pr
 mbm
 museu botânico municipal curitiba
 df
 ub
 universidade brasília
 am
 inpa
 instituto pesquisas amazônia
 pa
 ian
 embrapa amazônia oriental
 pa
 mg
 museu paraense emílio goeldi
 sp
 spf
 universidade paulo
 pa rs
 rs
 instituto anchietano pesquisas
 rs
 icn
 universidade federal rio sul
 rs
 has
 fundação zoobotânica rio sul
 tabela herbários brasileiros detêm informações
 peixoto barbosa proposta treevis
 levando conta importância levantamento arbóreo suas
 dificuldades motivados idealizar cujo intuito propiciar ao
 botânico taxonomista recurso auxiliar identificação
 espécimes busca herbários tradicionais tarefa bastante
 exaustiva podemos citar fatores restringem utilização tais pequeno herbários localizados locais distantes
 pesquisador ii dificuldade replicação base científica modo a
 democratizar acesso herbários constituídos de
 exemplares retirados natureza iii perda informações essenciais durante o
 tratamento exemplares cor detalhes textura iv longo treinamento na
 formação especialistas realmente capazes realizar identificação proposta visa substituição herbários tradicionais sim
 capÍtulo adicionar complemento conjunto metodologias identificação
 vegetal permitindo acelerar reconhecimento reconhecimento
 automático facilitar acesso informações sistemas digitais
 facilmente replicáveis podendo distribuídos diversas universidades laboratórios institutos pesquisa motivação surgiu proposta treevis cujo é
 derivado inglês vision system trata-se capaz de
 armazenar classificar organizar dados científicos realizar identificação
 automática espécies funcionando herbário digital diferente dos
 herbários tradicionais colecionados ramos férteis treevis concentra
 folhas informações identificação exemplares processo reconhecimento folhas tarefa complicada
 audaciosa concretizando verdadeiro desafio de
 reconhecimento acontece devido natureza vegetais conservem
 características fundamentais folhas apresentam variação variações ocorrem único indivíduo maturidade ou
 mesmo formação folhas tenham variações
 tamanho coloração textura formato etc indivíduos
 diferentes mesma espécie indivíduos diferentes mesma espécie
 localizados mesmas regiões apresentar diferenças folhas
 pa influência solo dificultar processo indivíduos de
 mesma espécie localizados diferentes regiões ecossistemas podem
 conter folhas diferentes refletindo resultado refinamento genético até
 mesmo mutações vencer desafios impostos complexa tarefa reconhecimento
 folhas proposta treevis baseada fundamentos apresentam
 potencial solução problema exploração sistemática das
 características folhas vasto atributos visuais sinergismo iii análise estatística iv metodologia utilização exploração informações características fornece contexto identificação devido universo de
 espécies variações mesma classe surge a
 necessidade extrair quantidades informações conseguir
 dados suficientes realizar classificação estatística abordagem além
 possuir motivação biológica abordada diversos sistemas
 aplicaÇÕes paralelas visÃo
 artificiais visão primatas associa diversos atributos combinação extrai incrível quantidade características para
 realizar reconhecimento encontramos sistemas visão artificial
 amplas bases conhecimento adotam estratégia efetivar o
 reconhecimento objetos podemos citar proposta discutida tese seemore mel objetos bidimensionais tridimensionais flexíveis cabo de
 telefone tecido etc fundamentalmente baseado extração e
 variado características diferentes atributos cor textura complexidade etc estreitamente ligado estratégia encontramos item podemos considerar combinação características resulta um
 sinergismo atributos associação rica soma
 individual análise estatística iii fundamentais proposta em
 dela realizada classificação consequentemente o
 reconhecimento abordagem estatística ditará a
 metodologia comparação identificação senso
 estatístico processa reconhecimento baseado única folha
 aprendizado busca contrário disso processadas
 diversas folhas cerca mesmo espécime compensar suas
 variações convergindo média finalmente metodologia utilização iv seja procedimentos
 técnicos realizados botânico encontra fundamental do
 competirá normalização coleta folhas seja folhas
 deverão pertencer média podendo coletados exemplares que
 contradigam média vegetal tamanho coloração botânico
 levar conta questões doenças aspectos que
 possam alterar características folhas vegetal preocupar
 maturidade colhendo folhas maturidade média protÓtipo treevis
 implementamos protótipo treevis no
 métodos técnicas utilizadas extração características das
 amostras ajustados configurados especificamente caracterização de
 pa capÍtulo plantas arbóreas implementado delphi plataforma
 windows devido quantidade características extraídas imagens resolução imagens consome considerável recurso
 computacional modo implementado recursos paralelismo utilização cvmp adotada arquitetura computação
 distribuída avaliar realizados experimentos espécies reais das
 quais constituída espécies plantas arbóreas nativas mata
 atlântica reconhecida floresta ameaçada planeta o
 resultado obtido tenha sido satisfatório feito obter uma
 versão operacional seja permita utilização treevis uma
 ferramenta botânicos subseções iremos descrever protótipo abordar sua
 implementação paralela apresentar resultados obtidos descriÇÃo treevis
 treevis conforme apresentado diagrama blocos figura
 composto módulos extração características controle central treinamento identificação análise estatística base dados estrutura de
 amostragem informações adquiridas dispositivo de
 digitalização imagens adotado mesa comercial permite digitalizar imagens dot per inch folhas possuem diferentes informações cada
 lados necessita sejam adquiridas imagens referentes aos
 lados folha grosso modo definidos sol
 exposto luz solar direta sombra oposto modo cada
 amostra representada par imagens informações utiliza imagem adquirida ampliação uma
 determinada região folha análise textura organização celular discutiremos subseção imagens lados folha imagem análise textura constituem dados entrada do
 denominados amostras denominada estrutura amostragem a
 amostra conjunto amostras analisado aplicaÇÕes paralelas visÃo
 níveis de
 cinza
 cor
 imagens
 treinamento
 forma
 controle
 e
 descrições
 central
 identificação
 listas de
 textura e
 pa características
 complexidade
 histograma
 base dados
 análise
 extração características
 estatística
 scanner
 estrutura de
 amostragem
 diagrama blocos apresentando módulos compõe o
 treevis respectivas conexões descrição abordaremos implementação paralela a
 será discutida subseção limitaremos enquanto sua
 seqüencial estrutura amostras solicitada uma
 análise modo inicia execução módulo controle central
 envia imagens constituem amostras estrutura de
 amostragem módulo extração características módulo dividido em
 submódulos contendo família métodos técnicas visão
 processamento imagens responsáveis extração conjunto de
 características imagem vetor características possibilita modalidades identificação estática e
 dinâmica identificação estática módulo controle central aguarda que
 características sejam extraídas então envia módulo
 treinamento identificação busca comparação base de
 dados realiza identificação amostra identificação dinâmica possibilita reconhecimento amostra um
 tempo aumentando performance modalidade o
 tenta reconhecimento amostra medida realizado o
 processamento extração características métodos as
 capÍtulo técnicas processamento imagens extração características possuem
 tempo processamento diferentes medida velozes ex histograma etc extraem características imagem enviadas o
 módulo controle módulo controle envia característica
 parciais módulo treinamento identificação realiza busca sistema
 base dados obtendo lista prováveis espécies contendo classe da
 espécie provável correspondente vetor características lista é
 enviada módulo análise estatística baseado cálculo matriz de
 covariância permite determinar quais características apresentam melhores
 discriminações espécies lista podendo consequentemente classificá-las
 enquanto módulo extração características executa processamento termina execução finaliza análise processamento de
 amostras estrutura amostragem conforme comentamos
 anteriormente estrutura amostragem conter amostras de
 mesma planta arbórea utilização amostras com
 possa munir recursos adicionais processo classificação permitindo identificação acurada resultado identificação apresentada usuário lista com
 pa cerca elementos ordenada espécies prováveis selecionando o
 item lista mostradas informações referentes espécie contendo as
 imagens amostra lados folha ampliação análise de
 textura respectivos nomes popular científico família processo treinamento consiste basicamente inserção de
 espécimes base dados sendo similar processo de
 identificação estática armazenado amostras referente à
 espécie inserida amostras chance se
 obter treinamento então solicitado inserção espécie o
 usuário preencher ficha identificação contendo científico a
 família planta arbórea escolher amostra caracterizá-la no
 processo identificação exibir usuário resultado modo no
 processo identificação módulo controle central envia imagens primeiro
 elemento estrutura amostragem módulo extração de
 características realiza processamento extração características resultando vetor vetor características então enviado módulo
 treinamento identificação aguarda mensagem módulo controle
 aplicaÇÕes paralelas visÃo
 central indicando amostras estrutura amostragem foram
 processadas módulo treinamento identificação realiza o
 cálculo média vetores armazena-o módulo base dados juntamente
 informações espécime fornecidas usuário treinamento identificação perícia técnica usuário é
 fundamental sendo responsável determinação folhas serem
 amostradas lembrando material coletado amostragem
 refletir característica média folhas planta arbórea especialmente no
 refere cor maturidade dimensão qualidade exemplar
 fator importante folhas pragas danificadas
 insetos descaraterizar modelo obtido treevis subseções vamos descrever maiores detalhes um
 módulos compõe treevis estrutura amostragem
 módulo estrutura amostragem responsável armazenamento das
 amostras serem processadas amostras devem pertencer mesma
 planta arbórea provenientes diferentes indivíduos mesma espécie o
 módulo funciona estrutura dados fila fifo first first
 out disponibilizando amostras módulo controle central de
 amostras necessárias funcionamento treevis variável podendo única amostra virtualmente quantas usuário desejar
 utilizar diferentes amostras determinam média modelo amostras modo amostras estimativa o
 modelo resultante modelo representativo média
 folhas espécie utilização amostras é
 fundamental treinamento espécie amostras
 amostras formadas imagens principais imagem
 adicional utilizada folhas
 apresentam lados diferentes naturezas fica óbvio o
 explorar característica portanto imagens principais das
 pa amostras constituídas aquisição lados folha
 sol sombra sol discriminado sombra
 capÍtulo imagens utilizadas quadradas potência 29 rápida fourier fft dimensão escolhida fornecer boa
 resolução experimentos realizados resoluções menores 128x128 apresentaram resultados satisfatórios tenhamos realizado testes
 detalhados acreditamos imagens maiores ex poderão apresentar melhores resultados ficando sugestão para
 experimentos futuras versões treevis imagem deve
 conter folha orientada vertical extremidade folha localizada superior imagem a
 orientação realizada nervura principal folha conforme mostra a
 figura extremidade
 folha
 nervura principal
 extremidade cortada
 caule
 alinhamento imagem nervura principal
 folha orientada vertical aquisição imagens ambos lados folha realizada cerca
 casos imagem reduzida folha caiba imagem ver
 figura fator redução dado porcentagem tamanho original da
 imagem adicionado amostra possa
 realizar cálculos compensar redução imagens principais lados folha realizada a
 digitalização imagem denominamos imagem ampliada de
 textura realizada análise organização textura celular a
 figura mostra procedimento digitalização imagem de
 sol folha orientado scanner selecionada pequena janela quadrada de
 aplicaÇÕes paralelas visÃo
 polegadas adquirida resolução dpi resultando imagem posicionada porção direita folha nervuras procedimento aquisição imagem ampliada textura utilizada folha hymenea courbaril jatobá figura mostra imagens compõe amostra completa da
 ormosia arborea olho cabra apresentadas ambiente gráfico sistema
 treevis amostra completa ormosia arborea olho cabra no
 ambiente gráfico treevis esquerda direita sol sombra imagem ampliada textura capÍtulo pa amostras devem passar processo digitalização breve
 coleta perderem propriedades vitais cor e
 textura folhas devem lavadas mantidas água manterem
 conservadas recomendado processo de
 digitalização folhas sejam ligeiramente prensadas evitar surjam
 dobras colocadas scanner amostras limitadas folhas simples tratando plantas folhas
 compostas palmadas mesma seja considerado de
 elementos constituição amostra plantas folhas compostas
 caso pau-brasil palmadas paineira perdem importantes
 informações respeito composição considera
 componentes despreza estrutura sugestão para
 considerar estruturas futuras versões incorporar essas
 informações integrante amostras caso usuário entraria com
 informações adicionais respeito espécime indicando folha simples composta palmada caso palmadas poderia incorporado
 característica classificação médio elementos as
 compõem base informações poderia eliminar parte
 base dados processo identificação direcionado pesquisa as
 espécies pertencentes grupos base dados
 módulo base dados armazenadas informações referentes às
 amostras treinadas treevis amostra armazenados dados de
 identificação espécie fornecidos usuário contendo científico e
 vulgar família amostra ampliação textura é
 armazenada auxiliar usuário confirmação visual do
 veredicto providenciado informações fornecidas pelo
 usuário armazenado vetor características extraídas treevis espécie modelada controle central
 módulo controle central reside coração nele é
 implementada interface gráfica usuário gui permitindo usuário
 aplicaÇÕes paralelas visÃo
 opere efetue identificação treinamento amostras a
 descrição espécies treinamento compare resultado visualmente também
 realize visualização técnicas métodos processamento de
 imagens visão utilizadas treevis figura exibe ambiente gráfico com
 usuário treevis exemplificando recursos visualização
 técnicas métodos treevis prover interface gráfica usuário visualização científica e
 operação módulo controle central controla gerência e
 supervisiona módulos ambiente gráfico usuário treevis de
 visualização técnicas métodos processamento imagens visão extraÇÃo caracterÍsticas
 módulo extração características treevis extrai modelo de
 representação amostra vetor contento características determinadas módulo é
 pa capÍtulo dividido submódulos níveis cinza cor textura/complexidade e
 histograma submódulos agrupam técnicas métodos utilizados a
 extração características função natureza módulo extração de
 características envia tempo execução elemento modelo de
 representação controle central possibilitando operação do
 caráter classificação dinâmica níveis cinza
 módulo somente processado amostra o
 processamento realizado leva somente conta formato folha de
 binarização mesmo ambos lados imagem extraídas
 características folha perímetro circularidade razão o
 perímetro quadrado cor
 módulo cor composto conjuntos características cromaticidade cromaticidade multiescala caso realizado cálculo
 cromaticidade componente cromático moreira procedimento realizado ambos lados folha que
 possui natureza cromática equações expressam cálculo cromaticidade componentes cromáticos
 imagem valor componente cromático pixel o
 pertencentes folha devemos lembrar somente são
 computados cálculos pixels pertencentes folha n
 ri
 i=
 r
 g
 b
 r
 i
 i
 i
 n
 n
 gi
 i=
 r
 g
 b
 g
 i
 i
 pa i
 n
 aplicaÇÕes paralelas visÃo
 n
 bi
 i=
 r
 g
 b
 b
 i
 i
 i
 n
 cálculos cromaticidade multiescala realizados mesma
 maneira sendo considerados lados imagem entanto sofrem
 convoluções gaussianas diferentes desvios padrão desvios-padrão ao
 forma
 módulo analisa contorno folha imagem binarizada também
 interior nervuras caso utiliza algoritmo de
 extração contorno cesar contorno calculadas características quais consistem energia de
 dobramento bending energy multi-escala cesar descritores fourier contorno castleman considerado visualização cálculo curvatura contorno folha da
 cariniana estrellensis jequitibá obtida detecção bordas da
 imagem binarizada janela controle apresentando projeção do
 contorno eixo gráfico curvatura projeção gráfico de
 curvatura contorno 3d figura ilustra visualização cálculo curvatura figura capÍtulo apresenta contorno folha obtido detecção borda sobel da
 imagem binarizada figura apresenta projeções contorno eixo e
 gráfico curvatura figura exibe projeção gráfico curvatura de
 pa perpendicular contorno visualização análise nervuras utilizada transformada hough com
 backmapping ambos lados folha em
 determinadas espécies surgir diferenças estruturas a
 nervura principal desconsiderada cálculo utiliza demais
 nervuras figura delas obtidas características sendo que
 referente ângulo orientação nervuras restantes referentes
 retas obtidas dimensões pré-especificadas definidas
 figura ilustra imagem folha segmentada exibindo seu
 contorno nervuras nervuras consideradas análise exemplo
 mostrando ângulo avaliado nervuras folha consideradas transformada hough imagem segmentada nervuras consideradas transformada e
 referência ângulo determinado análise textura complexidade
 módulo textura complexidade agrupados métodos para
 medir complexidade textura folha extraindo modo características medidas complexidade textura módulo utiliza dimensão fractal
 box counting efetuada lados folha totalizando suas
 aplicaÇÕes paralelas visÃo
 características contagem cruzamento transformada de
 marr-hildreth diferentes desvios-padrão multi-escala gonzalez woods seja denominado textura complexidade único módulo tratar deste
 atributo módulo histograma apresenta medidas relativas
 devido natureza métodos agrupadas nele visualização domínio freqüência real imagem de
 ampliação textura espécies diferentes apresentando diferenças
 caracterizam descritores dentre submódulos extração características textura e
 complexidade único utilizar imagem ampliada textura analisar e
 extrair características imagem ampliada textura utilizado descritores
 transformada fourier imagem gonzalez woods descritores utilizados radiais totalizam características figura apresenta visualização domínio real freqüência espécies distintas de
 plantas arbóreas delas podemos observar variação dos
 gráficos descriminada descritores caracterizando modelo de
 classificação textura capÍtulo histograma
 módulo extraia características relacionadas a
 complexidade textura folhas recebe denominação histograma devido
 técnicas utilizadas serem baseadas histograma imagem nele
 basicamente realizadas tipos medidas cálculo desvio-padrão da
 distribuição histograma cálculo entropia histograma gonzalez woods pertencentes folha elaboração histograma ambos os
 pa lados folha possuem diferentes textura considerados módulo histogramas folhas diferentes espécies ilustrando a
 variação presente distribuição histogramas cálculos realizados níveis cinza dos
 componentes cromáticos caso imagem cromática da
 folha convertida níveis cinza média componentes
 cromáticos níveis cinza computados características o
 desvio-padrão quais realizada imagem padrão três
 imagem sofrer convolução gaussianas diferentes desvios-
 padrão multi-escala mesma estratégia realizada cálculo entropia extraídas características aplicaÇÕes paralelas visÃo
 componentes cromáticos considerado canal ou
 plano imagem sendo computados deles mesmas
 características obtidas imagem níveis cinza modo total
 características extraídas módulo folha totalizando figura ilustra variação histograma ocorrida diferentes
 espécies folhas histograma obtido imagem níveis cinza treinamento identificaÇÃo
 treinamento reconhecimento processos centrados no
 módulo treinamento identificação base vetor características vimos calculado módulo extração características módulo treinamento identificação processo treinamento
 consiste calcular vetor médio vetor características cada
 amostra processada módulo recebe vetor características do
 controle central amostra processada módulo extração de
 características processamento amostras módulo realiza
 média vetores obtendo vetor característica responsável modelo da
 espécie vetor armazenado juntamente informações identificação da
 espécie adicionada base dados reconhecimento efetuado modos dinâmico estático a
 identificação estática realizada serem extraídas características das
 amostras compete módulo treinamento identificação realizar a
 comparação modelo amostra classificada modelos
 armazenados base dados comparação realizada etapas a
 seleciona lista prováveis espécies etapa lista é
 refinada etapa modelo etapa classificação definido espaço
 dimensões lista prováveis espécies obtida distância
 euclidiana modelos sendo consideradas espécies que
 apresentaram distância modelo analisado inseridas lista as
 espécies possuem distância limiar estipulado o
 refinamento lista realizado utilizando distância euclidiana 102 dimensões modelos lista etapa efetuando refinamento obtendo modo lista identificação pode
 capÍtulo possuir elementos ordenados probabilidade identificar o
 pa modelo analisado processo identificação dinâmica tentativa aumentar a
 performance reconhecimento diferentemente processo reconhecimento
 estático aguarda características sejam extraídas iniciar a
 comparação identificação dinâmica processo simultâneo extração de
 características permitido devido comunicação módulos extração
 características controle central treinamento identificação permitem característica extraída seja enviada módulo identificação com
 base nelas módulo realiza busca banco dados monta lista com
 enquadram perfil modelo incompleto lista enviada então o
 módulo análise estatística retorna lista indicando quais as
 características importantes classificar espécies lista recebeu base informação módulo solicita controle central sejam
 priorizados métodos cujas características destacadas processo de
 identificação dinâmica finaliza características extraídas montarem um
 modelo mesmo incompleto satisfaça condições estabelecidas determinando reconhecimento processo identificação dinâmica modo experimental operação
 treevis certas situações consegue obter performance devido
 limitação extração características caso espécies
 características marcantes cuja identificação realizada mesmo modelo
 incompleto apresenta situações promove aumento de
 performance caso espécies características medianas não
 possibilitam identificação modelos incompletos principal
 desvantagem utilização reconhecimento dinâmico erros de
 identificação método acarreta identificação dinâmica ser
 considerada instância alternativa de
 reconhecimento aberta estudo científico projeto treevis anÁlise estatÍstica
 módulo análise estatística exclusiva finalidade suporte ao
 módulo treinamento identificação realizado reconhecimento
 dinâmico basicamente função determinar características divergentes
 conjunto vetores características modo tornar a
 aplicaÇÕes paralelas visÃo
 classificação modelos incompletos razoável precisão principal mecanismo utilizado módulo cálculo matriz de
 covariância equação covariância diagnosticar grau
 similaridade características modelos 
 i
 x
 i
 x
 b
 a
 b
 pa n
 determinada matriz covariância módulo análise estatística procura
 menores elementos matriz correlacionados características já
 extraídas montando lista características possuem a
 chance caracterizar reconhecimento modelo módulo conta
 tabela indicando tempo médio duração extração das
 características base tabela lista características elaborada uma
 lista ordenada divergência característica seu
 tempo processamento visando aumento performance reconhecimento implementaÇÃo paralela
 ocorre usualmente sistemas visão treevis requer grande
 demanda computacional possuindo portanto elevado tempo execução
 pentium reduzir tempo execução realizada implementação paralela treevis cvmp possibilitando execução sistemas distribuídos módulos treevis possuem razoável autonomia e
 independência permitindo exploração paralelismo entanto gargalo do
 reside módulo extração características concentra as
 diversas técnicas métodos processamento imagem visão são
 inúmeras lentas processos localizados módulos modo estratégia paralelismo adotada explorou concorrência seus
 submódulos incorporadas estratégias paralelismo replicação módulos extração características implementação paralela
 módulo iii combinação estratégias anteriores caso estratégia aproveita necessidade a
 capÍtulo múltiplas amostras replicação módulos extração de
 características amostra direcionada módulos processa
 simultaneamente estratégia utilizada fazenda processadores da
 utilização cvmp processor farm conforme mostrado figura sistema
 fica dividido mestre escravos módulo escravo constituído um
 módulo extração características ficando módulo mestre restante do
 controle central principal unidade mestre fica incumbido de
 supervisionar controlar distribuir tarefas amostras escravos essa
 estratégia possui vantagem balanceamento automático podendo ser
 utilizado conjunto máquinas heterogêneas necessidade ser
 realizado qualquer tipo balanceamento carga estratégia apresenta uma
 performance dependendo amostras utilizadas o
 melhor resultado amostras é
 consideravelmente processadores taxa desempenho
 obtido torna fator unidades processamento
 escravos tempo gasto processamento muito
 gasto transferência dados escravos
 imagens
 níveis de
 treinamento
 cin
 pa ní zvaeis de
 e
 descrições
 cin
 ní zvaeis de
 níveis de
 identificação
 cinza
 listas de
 cor cin
 ní zvaeis de
 características
 cor cin
 ní zvaeis de
 cor cinza
 cor
 cor
 cor
 textura eforma
 controle
 base dados
 complexida
 textur de
 forma
 central
 análise
 complexida
 textur de
 forma
 estatística
 complexida
 textur de
 a
 histogram
 a
 mplexida
 textur de
 a
 histogram
 a
 mplexida
 textur de
 a
 histogram
 a
 mplexidade
 histograma
 histograma
 histograma
 estrutura de
 pa extração características
 scanner
 amostragem
 mestre
 treevis estratégia paralelismo processor farm caso explorado paralelismo módulo de
 concorrência submódulos implementação paralela
 aplicaÇÕes paralelas visÃo
 métodos técnicas capítulo exploração paralelismo consiste na
 divisão módulo extração características partes executando-as em
 concorrência devido independência autonomia submódulos divisão
 módulo extração características tarefa simples contudo a
 dificuldade reside balanceamento cargas sistemas
 homogêneos partes deverão possuir mesma demanda computacional ao
 passo sistemas heterogêneos deverão possuir cargas proporcionais
 máquinas serão executadas implementamos diferentes
 configurações estratégia dividindo módulo partes outra
 ambas voltadas sistemas distribuídos homogêneos máquinas
 iguais níveis de
 cinza
 textura e
 imagens
 complexidade
 treinamento
 e
 descrições
 identificação
 listas de
 histograma
 características
 níveis cinza
 controle
 base dados
 central
 análise
 estatística
 forma
 estrutura de
 cor
 scanner
 amostragem
 histograma
 cor
 mestre
 treevis exploração paralelismo partição do
 módulo extração características partes executadas simultaneamente
 processadores diferentes figura contém diagrama ilustrativo versão módulo
 pa extração características dividido partes performances
 aproximadamente equivalentes abordagem somente submódulo
 responsável medidas relativas histogramas particionado de
 aproveitar convoluções gaussiana multi-escala realizados módulo de
 capÍtulo cor histogramas multi-escala cromáticos configuração treevis
 fica especificado sistemas distribuídos constituídos máquinas
 homogêneas máquinas executar fragmentos do
 módulo extração características módulo mestre responsável pela
 supervisão controle alojado multitarefa juntamente o
 fragmento agrupa submódulos niveis cinza textura complexidade e
 histograma níveis cinza execução b
 textura e
 complexidade
 a
 níveis de
 histograma
 cinza
 níveis cinza
 textura e
 imagens
 ampl textura
 treinamento
 complexidade
 e
 descrições
 identificação
 listas de
 histograma
 características
 níveis cinza
 a
 forma
 controle
 base dados
 central
 análise
 estatística
 b
 forma
 b
 estrutura de
 cor
 scanner
 amostragem
 histograma
 cor
 pa a
 cor
 histograma
 cor
 treevis exploração paralelismo partição do
 módulo extração características partes executadas simultaneamente
 processadores diferentes figura apresentada versão máquinas caso partes fragmentação anterior figura dividida
 partes correspondentes lados amostra devido natureza o
 módulo extração características dividido outros
 fragmentos podendo mesmo atingir níveis paralelismo métodos e
 aplicaÇÕes paralelas visÃo
 técnicas processamento imagens visão hough possibilitando configurações sistemas distribuídos quantidade de
 máquinas divisão módulo realizada partes estratégia paralelismo consiste combinação das
 estratégias processor farm fragmentação módulo extração de
 caraterísticas ii caso possui configurações e
 dependendo amostras utilizadas escolhe configuração
 executar homogêneos estratégia apresenta performance melhor ii amostras é
 múltiplo processadores amostras e
 múltiplo processadores entretanto possui performance
 superior amostras de
 processadores amostras diferente múltiplo do
 processadores resultados experimentais
 subseção vamos apresentar séries experimentos que
 comparam performance versões paralelas treevis frente versão
 seqüencial experimentos utilizados sistemas distribuídos
 homogêneos constituídos máquinas amd ethernet padrão utilizadas máquinas realizada simulação máquinas cada
 série experimentos contém experiências voltada estratégia de
 paralelismo processor farm estratégia fragmentação do
 módulo extração características gráfico tempo execução versão paralela processor
 farm amostras processadas capÍtulo experimento série realizado reconhecimento de
 espécime constituído amostras experimento consistiu comparação
 performance versão paralela processor farm frente versão
 seqüencial figura apresenta resultados obtidos experimento nela
 gráfico tempo execução versão paralela processor
 farm observado ocorreram bolhas execução tempo
 gasto transferência dados praticamente desprezível modo a
 taxa desempenho speed-up paralelo ficou de
 pa processadores figura mostrado gráfico tempo execução versão
 paralela treevis explorando paralelismo módulo extração de
 características comparada versão seqüencial figura o
 resultado processamento amostras máquina executados os
 submódulos cor histograma cromático mestre máquina o
 submódulo máquina submódulos níveis cinza textura e
 complexidade histograma níveis cinza figura tempo de
 execução seqüencial amostra gráficos tempo execução comparando versões paralela
 seqüencial treevis execução amostras versão paralela
 fragmentação módulo extração características execução de
 amostra versão seqüencial estratégia paralela apresente performance superior à
 versão seqüencial obtendo máxima taxa desempenho speed-up de
 aplicaÇÕes paralelas visÃo
 aproximadamente devido balanceamento carga equilibrado
 implementação anterior processor farm apresentou performance
 devemos entretanto lembrar situações de
 amostras igual múltiplo máquinas surgem bolhas a
 performance implementação processor farm cai fazendo estratégia
 exploração módulo extração características apresente desempenho
 superior possui limitações amostras figuras apresentam série experimentos na
 utilizadas versões paralelas processor farm fragmentação módulo de
 extração caraterísticas configuradas sistemas distribuídos compostos de
 máquinas resultados proporcionais obtidos experimentos
 anteriores versão processor farm taxa desempenho ficou novamente
 processadores utilizados versão seguinte entretanto apresentou pequena queda taxa desempenho proporcionalmente experimento anterior ficando torno isso
 desequilíbrio balanceamento cargas no
 entanto melhorado configuração gráfico tempo execução versão paralela processor farm distribuído máquinas amostras processadas capÍtulo gráficos tempo execução comparando versões paralela
 seqüencial treevis execução amostras versão paralela
 fragmentação módulo extração características execução de
 amostra versão seqüencial reconhecimento plantas arbÓreas
 tabela apresenta listagem espécies utilizadas experimentos
 realizados treevis espécies caracterizam flora brasileira sendo
 nativas mata atlântica cerrado utilizamos cerca espécies catalogadas contendo plantas ornamentais frutíferas
 exóticas nativas somar categorias base conhecimento do
 pa bases amostras pudemos realizar experimentos a
 condução projeto métodos técnicas características etc avaliação treevis tarefa difícil o
 processo reconhecimento depende fatores coleta dos
 dados escolha amostra diferença indivíduos mesma espécie etc disponhamos controle parâmetros ficando sugestão
 trabalhos futuros realizamos experimento avaliar mesmo de
 maneira aproximada desempenho reconhecimento das
 espécies aplicaÇÕes paralelas visÃo
 família
 denominação científica
 denominação popular
 anacardiaceae
 schinus terebinthifolius raddi
 aroeira pimenteira
 anacardiaceae
 tapirira guianensis aubl peito pomba
 apocynaceae
 rauwolfia sellowii
 casca bignoniaceae
 tabebuia impetiginosa mart standl ipê roxo
 bignoniaceae
 tabebuia vellosoi tol ipê amarelo
 bignoniaceae
 tabebuia roseo-alba ridl sand ipê branco
 bombacaceae
 pseudobombax grandiflorum mart zucc imbiruçú
 bombacaceae
 eriotheca candoleana
 paina mata
 bombacaceae
 chorisia speciosa st hil paineira
 boraginaceae
 patagonula americana guaiuvira
 boraginaceae
 cordia sellowiana cham chá bugre
 boraginaceae
 cordia trichotoma vell louro pardo
 pa cecropiaceae
 cecropia cineria
 embaúba
 fabaceae
 platycianus regnelli benth pau pereira
 fabaceae
 miroxyon peruiferum harms cabreúva
 lecythidaceae
 cariniana estrellensis raddi kuntze
 jequitibá
 leguminosae
 caesalpinia echinata pau-brasil
 leguminosae
 hymenea courbaril jatobá
 leguminosae caesalpinoideae
 bauhinia forficata link pata vaca
 leguminosae-papilonoideae
 ormosia arborea vell harms
 olho cabra
 melastomaceae
 tibouchina pranulosa cogn quaresmeira
 melastomaceae
 tibouchina mutabilis cong manacá serra
 myrtaceae
 syzyngium jambolanum
 jambolão
 myrtaceae
 eugenia uniflora pitanga
 myrtaceae
 psidium cattleianum sabine araçá
 myrtaceae
 psidium guajava goiabeira
 myrtaceae
 eugenia pyriformis camb uvaia
 myrtaceae
 myrciaria trunciflora berg jabuticabeira
 nyctaginaceae
 bougainvillea glabra choisy pa primavera
 tabela espécies utilizadas experimento conquanto necessita várias amostras efetuar um
 treinamento satisfatório experimento realizamos treinamento espécies a
 única amostra julgamos caracterizar planta efetuado o
 treinamento espécies realizamos reconhecimento treinamento reconhecimento exige diversas
 amostras sejam utilizadas classificar espécie satisfatória entretanto visando colocar situação extrema efetuamos o
 reconhecimento amostras constituídas folha dentre as
 erros reconhecimento estabelecendo margem erro de
 aproximadamente capÍtulo capÍtulo
 conclusÃo
 experience the best creative work never done when one unhappy albert einstein
 capÍtulo conclusÃo
 capÍtulo conclusÃo
 comentÁrios finais contribuiÇÕes
 discutimos tese série aspectos relacionados paralelismo
 visão natural artificial paralelismo visão artificial está
 diretamente relacionado computação paralela iniciamos abordagem de
 revisão conceitos fundamentais vista da
 arquitetura hardware programação software intuito fornecer
 leitores base substancial computação paralela permitindo uma
 melhor interação compreensão assuntos tratados decorrer tese em
 visão natural realizarmos revisão visão biológica partimos uma
 discussão visão primatas vista do
 paralelismo abordamos aspectos quais podemos destacar modularidade córtex visual ii especialização funcional ii independência dos
 módulos atributos iv distribuição informações longo caminho visual independência autonomia caminho parvo magno celular vi arquitetura
 paralelismo multiníveis vii mapeamento informações áreas corticais e
 vi integração sinais módulos atributos visuais integração paralelismo visão natural artificial ocorre a
 abordagem projeto apresenta diversas características baseadas paralelismo sistemas visão
 natural permitiu analisar discutir sugerir diversos aspectos do
 paralelismo natural contribuir eficiência realismo dos
 sistemas visão artificial aspectos levantados discutidos podemos
 destacar modularidade hierarquia especialização funcional iv cooperação subsistemas representação informação níveis
 conhecimento vi distribuição informações arquitetura paralela visão pa vi integração atributos módulos concorrentes vi granularidade pacotes
 níveis hierárquicos ix supervisão controle processos visuais processamento visual tempo real etc realizamos série de
 comparações análises críticas projeto encontrados literatura apresentam aspectos semelhantes capÍtulo verificamos paralelismo inerente visão natural constituindo base arquitetura podendo possibilitar série de
 benefícios sistemas visão artificial entanto constatamos o
 paralelismo explorado visão computacional estando praticamente
 ausente considerarmos importância constituindo lacuna no
 estudo visão acreditamos razões ausência paralelismo na
 visão artificial fundadas ciência computação sendo o
 alicerce estudo visão artificial qualquer tenha desenvolvido
 implementado algoritmo paralelo inúmeras dificuldades no
 desenvolvimento software paralelo programação concorrente tarefa
 árdua complicada requerer profundo conhecimento assunto exige realizado soluções seqüenciais estas
 dificuldades acentuadas escassez ferramentas computacionais
 amigáveis intuitivas baseadas interação homem-máquina o
 desenvolvimento aplicações paralelas perfil científico tecnológico projeto conta humano envolvido vista desenvolvimento e
 implementação estando paralelismo visão surge tona dificuldades programação concorrente abrange diferentes especializações visão atributos visuais portanto possui
 pesquisadores envolvidos surgem questões manutenção e
 reutilização código integração cooperação pesquisadores um
 principais objetivos apresentar soluções estes
 problemas propor plataforma desenvolvimento projeto
 atender necessidades paralelismo projetos cybernetic vision research group introduzimos uma
 plataforma desenvolvimento programação concorrente denominada
 cvmp cybernetic vision message passage baseado programação orientada
 objetos interface homem-máquina engenharia software programação visual cvmp proposta facilitar simplificar desenvolvimento programas
 paralelos seja sistemas distribuídos máquinas multiprocessadores cvmp qualquer programador conhecimento reduzido em
 computação paralela desenvolver facilidade aplicações
 conclusÃo
 paralelas facilidade utilização cvmp apresenta recursos
 reutilização código permitindo estruturas algoritmos possam ser
 reaproveitados agilizando desenvolvimento sistemas dentre componentes compõem cvmp cvmp processor farm especial ilustra possibilidades reutilização código facilidade e
 simplicidade desenvolvimento aplicações paralelas componente possui
 pa encapsulados recursos necessários desenvolvimento uma
 aplicação paralela baseada estratégia processor farm permitindo o
 programador desenvolva programa concorrente visual diferente programação seqüencial programação concorrente é
 necessário programador analisar execução programa modo localizar
 gargalos efetuar balanceamento cargas permitindo ampliar a
 performance eficiência limitação ambientes de
 desenvolvimento paralelo suporte tais análises tornando-as
 tarefa árdua difícil realizada programador suprir essas
 limitações auxiliar programador análises estatísticas programas
 concorrentes cvmp apresenta ferramentas análise estatística permitem
 monitoramento análise programas diferentes modalidades dados analisados término processos tempo execução cvmp desenvolvido utilizado plataforma delphi/c builder windows ambientes desenvolvimento oop programação visual etc permitindo que
 programadores utilizem linguagens ambientes seqüenciais estão
 familiarizados desenvolvimento aplicações paralelas entretanto graças a
 concepção cvmp comporta camada adicional software gerencia primitivas comunicação sistemas operacional podendo modo atuar sistemas distribuídos multiprocessadores memória
 compartilhada devido característica cvmp desenvolvido de
 modo utilizar sistemas troca mensagens existentes tais pvm ou
 mpi permitindo desenvolvimento simples amigável benefícios oop
 programação visual reutilização código etc característica cvmp devido versatilidade possibilidade
 fornecer base desenvolvimento arquiteturas paralelas uma
 cvmp apresenta código simples enxuto componente cvmp básico
 cerca capÍtulo comunicação utilizado plataforma desenvolvimento de
 software arquiteturas aplicação seriam as
 arquiteturas baseadas interface scsi henry dispositivos comunicação prontos utilizarem ferramentas
 convencionais desenvolvimento paralelo mpi pvm etc o
 cvmp facilmente adaptado qualquer mecanismo comunicação ele
 fornecer base desenvolvimento arquiteturas paralelas decorrer observamos problemas afligiam o
 desenvolvimento poderiam preencher certo modo lacuna paralelismo visão e
 diversas áreas científicas demandam soluções paralelas modo proposta cvmp cumpriu objetivos iniciais como
 possibilitou vasto campo utilização abrindo inúmeras perspectivas
 proposta voltaremos assunto seção discutidos
 desenvolvimentos futuros definida proposta paralelismo objetivos avaliar analisar validar cvmp aspectos funcionalidade performance e
 utilização objetivo satisfeito série implementações de
 pa algoritmos visão computacional processamento imagens foram
 implementados diversos algoritmos clássicos tais operadores locais transformada hough transformada fourier casos
 discutida arquitetura abordagem paralela analisada a
 performance eficiência versão paralela algoritmos frente seqüencial os
 algoritmos analisados módulos estatística cvmp quais
 permitiram estudo comportamento eficiência performance gerando
 resultados validaram proposta demonstraram performance potencial
 desenvolvimento aplicações paralelas análise ainda
 introduzida técnica paralelismo algoritmo de
 segmentação imagens baseado campos aleatórios markov bruno &
 costa finalizando apresentadas aplicações reais visão
 artificial utilizam diferentes conceitos paralelismo tais aplicações não
 concluem validação ferramenta desenvolvimento paralelo
 desenvolvida decorrer doutorado demonstram diferentes
 conclusÃo
 vantagens utilização paralelismo sistemas visão tais aumento
 performance integração atributos visuais modularidade independência
 modular integração pesquisadores aplicações foram
 desenvolvidas conjunto membros visão cibernética permitindo avaliarmos paralelismo cvmp integradores de
 integração pesquisadores ocorre devido natureza do
 paralelismo exige estrutura modular independente propicia o
 cooperativo cvmp possibilidade utilizá-lo projetos
 cooperativos reais valia comprovar simplicidade utilização
 manuseio amigável facilidade interação homem-máquina integrar pesquisadores
 trabalhos paralelos cooperativos reutilização código modo os
 ótimos resultados obtidos cvmp implementação aplicações foi
 convincente maneira demonstrar objetivos proposta foram
 satisfeitos aplicações discutidas tese inéditas constituindo si
 só contribuições originais delas contém proposta integração
 atributos visuais cor estéreo projeto paralelismo desenvolvida jander moreira alan salvany felinto em
 colaboração autor implementado cvmp tendo como
 finalidade identificação objetos poliédricos cromáticos integração
 atributos visuais cor estéreo apresentado protótipo do
 agente integração implementação objetiva a
 performance processamento integração atributos visuais a
 aplicação ilustrou paralelismo fonte modularização e
 consequentemente base cooperativo aplicação implementado experimento projeto
 ynergos desenvolvido colaboração luís augusto consularo roberto
 cesar marcondes bruno modelo complexidade baseado percepção humana um
 experimento psicofísico coletados dados refletem percepção de
 complexidade humana modelo baseado técnicas medidas de
 pa complexidade entropia níveis cinza ii tempo decaimento multi-
 escala variância distribuição níveis cinza imagem variância do
 histograma circularidade iv dimensão fractal salsichas minkowski capÍtulo base dados experimento psicofísico técnicas otimizadas
 algoritmo genético paralelo implementado cvmp
 processor farm experimento paralelismo utilizado aumentar a
 performance processo otimização realizado algoritmo genético a
 performance implementação paralela satisfatória apresentando uma
 taxa desempenho processadores utilizados aplicação introduzida proposta autor sistema
 visão paralela reconhecimento automático plantas arbóreas de
 desenvolvermos aplicação real visão paralela procuramos identificar um
 problema relevância pudéssemos contribuir solução em
 botânica extrema importância estudo biodiversidade sendo vital
 levantamento arbóreo florestas tropicais apresentam a
 biodiversidade planeta introduzida tese proposta um
 fornece botânicos ferramenta complementar tradicionais
 herbários intitulado treevis visão extrai série de
 atributos folhas plantas arbóreas classificador estatístico procura identificar espécime funcionando herbário automático o
 baseado arquitetura paralela utilizada aumentar o
 desempenho processos treinamento reconhecimento uma
 heurística especial tomada amostras processada o
 escolhe estratégia paralelismo realiza tarefa melhor
 performance resultados obtidos comprovaram potencial do
 cvmp fornecimento bases computacionais desenvolvimento de
 paralelismo mesmo situações complexas sÍntese principais contribuiÇÕes
 inter-relacionados assuntos abordados tese ser
 divididos modalidades relacionadas seguinte discussão do
 paralelismo visão natural artificial paralelas reais visão artificial seguindo divisão montada tabela apresenta síntese principais contribuições modalidade conclusÃo
 abordagem
 contribuiÇÕes
 revisão bibliográfica crítica abrangente computação paralela discussão visão cortical primatas de
 vista paralelismo discussão do
 levantamento principais questões adotadas visão
 paralelismo visão
 primatas aperfeiçoar sistemas visão artificial natural artificial
 levantamento sistemas visão comparação discussão abordagens paralelismo projeto levantamento possíveis contribuições fornecidas pelo
 pa paralelismo visão artificial proposta conjunto ferramentas desenvolvimento de
 aplicações paralelas base simplicidade utilização
 manuseio amigável facilidade programação visual reutilização de
 código cvmp cybernetic vision message passage desenvolvimento implementação validação proposta cvmp proposta cvmp
 ferramentas análise estatística programas concorrentes implementação avaliação desempenho diversos algoritmos
 visão processamento imagens técnica paralelismo algoritmo segmentação de
 imagens baseado campos aleatórios markov estrutura paralelismo integração atributos visuais
 estéreo cor projeto jander moreira alan salvany felinto experimento extrair modelo complexidade baseado na
 percepção humana internet abordagem paralela desenvolvido colaboração luis augusto consularo roberto
 aplicações paralelas
 cesar marcondes junior bruno reais visão artificial treevis proposta implementação o
 reconhecimento automático plantas arbóreas herbário digital arquitetura paralelismo heurística seletiva diagnosticar
 automaticamente melhor performance atuação projeto treevis demonstração paralelismo base estruturação e
 modularização sistemas visão contribuir o
 cooperativo pesquisadores tabela síntese principais contribuições tese capÍtulo pesquisas futuras
 características trabalhos multidisciplinares diversidade
 direções motivam possibilitando perspectivas sua
 continuidade surgimento linhas pesquisa de
 esperar contribuições tese proporcionam diversos caminhos para
 estudos futuros complementações linhas pesquisa vamos
 sugestões continuidade obedecendo divisão
 modular apresentada seção anterior estudos paralelismo visão natural
 artificial estaremos tecendo comentário itens subseções
 seguintes estudos paralelismo visÃo natural
 artificial
 acompanhar desenvolvimento neurociência córtex visual muito
 compreendido tornando pesquisa fértil produtiva qual
 provêm freqüência considerada modelos teorias descobertas deste
 modo estudo paralelismo visão tarefa contínua exige o
 acompanhamento constante desenvolvimento neurociência áreas
 relacionadas ii experimentos modelos corticais artificiais modelos corticais artificiais
 pa contribuem compreensão mecanismos corticais estudo do
 paralelismo córtex visual simuladores neurológicos elucidar
 questões apresentar abordagens paralelos visão artificial ii caracterização paralelismo visão estudos implementações de
 paralelismo sistemas visão artificial realizados ser
 aprimorados estendidos obter caracterização formal e
 genérica paralelismo visão artificial implementação estudo de
 diversos sistemas visão artificial poderão estimadas estatísticas o
 comportamento fluxo mensagem dependência dados gargalos longo
 hierarquia processamento visual conclusÃo
 proposta cvmp validar versão cvmp multiprocessadores tenha sido implementado e
 discutido componente cvmp máquinas multiprocessadores validação
 realizada simulações utilizando mecanismo multitarefa ficando
 tarefa futuros desenvolvimentos cvmp avaliação e
 validação concreta máquinas realmente multiprocessadas ii portar cvmp unix acreditamos importância portar
 ferramenta cvmp operacional unix especialmente este
 constituir plataforma particularmente utilizada desenvolvimento de
 aplicações paralelas versão unix ferramentas cvmp traria benefícios
 proposta cvmp divulgação críticas eventualmente
 contribuições mundo unix comunidade unix que
 possui principais deficiências ausência ferramentas que
 priorizem interação homem-máquina manuseio amigável intuitivo a
 viabilização cvmp unix tornará será justificada o
 lançamento ambiente desenvolvimento delphi linux kylix previsto
 semestre ii desenvolver cvmp plataformas pvm mpi cvmp ser
 desenvolvido atuar plataforma troca mensagens já
 estabelecida linha pesquisa considerada continuidade
 desenvolvimento versões cvmp plataformas pvm
 mpi existe série trabalhos científicos essas
 plataformas desenvolvimento traria inúmeros benefícios proposta
 cvmp ampliando recursos possibilidades desenvolvimento paralelo do
 mesmo modo linha pesquisa poderá proporcionar série de
 contribuições levando plataformas benefícios cvmp
 desenvolvimento
 visual manuseio
 amigável reutilização
 de
 código desenvolvimento oop etc iv arquiteturas cvmp considerado camada extra de
 software primitivas comunicação utilizar virtualmente
 qualquer mecanismo plataforma troca mensagens uma
 interessante linha pesquisa utilizada proposta o
 pa desenvolvimento arquiteturas paralelas dificuldades tipo
 projeto encontra base plataformas desenvolvimento software capÍtulo tradicionais plataformas desenvolvimento paralelo necessitam
 drivers bibliotecas específicas cvmp promissor possui código simples enxuto facilmente adaptado
 virtualmente qualquer mecanismo comunicação prova disto início
 desenvolvimento implementado redes computadores cvmp possuiu versão experimental implementava máquinas paralelas
 comunicação porto paralelo lpt porta impressora encapsular estratégias paralelismo sucesso proposta
 cvmp encapsulamento estratégia paralelismo processor farm através
 componente desenvolvimento aplicações paralelas baseadas nesta
 estratégia tornou tarefa simples objetiva componente
 apresenta encapsulado mecanismo envolvido abordagem entanto estratégia paralelismo encapsulada fazendo conjunto
 ferramentas cvmp ficando sugestão futuros desenvolvimentos a
 incorporação componentes encapsulem abordagens de
 paralelismo vi desenvolver objetos métodos visão computacional processamento de
 imagens características proposta cvmp permitir criação de
 componentes personalizados encapsulam métodos técnicas embora
 tenham sido realizados estudos algoritmos visão duas
 técnicas encapsuladas gerando componentes prontos utilização de
 auxiliar desenvolvimento aplicações paralelas interessante a
 criação diversos componentes diferentes técnicas processamento e
 visão computacional encapsuladas vi aperfeiçoar módulo estatística limitações ferramentas de
 estatística apresentadas tese especialmente versão tempo real no
 condicionamento máquina seja desenvolvido versão da
 ferramenta possibilita concentrar único módulo análise de
 comportamento máquinas rede tipo abordagem
 possa acarretar carga mensagens rede diversas situações
 justificam utilização conclusÃo
 aplicaÇÕes paralelas reais visÃo
 artificial
 projeto incorporação atributos visuais protótipo desenvolvido modalidades visuais consideradas proposta entretanto baseada integração diversos atributos visuais portanto novas
 pesquisas deverão realizadas especialmente estrutura comunicação e
 representação informações permitir atributos adicionais sejam
 acrescentados ii reestruturação priorizando performance paralelismo
 tenha sido utilizado enfocando estudos integração atributos
 visuais representação dados corporativo reestruturação visando
 ampliar performance independência dados módulos bastante
 pa interessante principais objetivos computação
 paralela ii inserção estratégias comunicação fluxo inverso dados o
 projeto visuais diferentes níveis hierárquicos processamento fluxo de
 informações sentidos pesquisas deverão ser
 realizadas incorporar tais características proposta treevis
 avaliação protótipo identificação plantas arbóreas avaliação do
 protótipo treevis realizada tese sucinta apresentamos apenas
 resultado situação extrema pior situação embora
 tenha mostrado resultados relatou devida determinação científica
 validação pretendemos realizar experimentos determinar de
 maneira acurada características protótipo contendo resultados as
 situações extremas situações apresente mais
 promissor quantidade amostras espécie com
 espécies arbóreas capÍtulo ii realização estudo abrangente natureza diversidade morfológica das
 folhas implementar protótipo treevis adotamos algumas
 metodologias extração características tenham sido
 escolhidas experimentalmente análises tipos folhas a
 pesquisa realizada suficientemente abrangente acurada exigida
 problema continuidade proposta treevis necessária uma
 vasta abrangente investigação características morfológicas folhas
 plantas arbóreas modo definir maneira precisa quais as
 metodologias medidas adequam melhor processo classificação das
 espécies devido divergência espécies acreditamos deverão ser
 acrescidas muitas técnicas processamento visão obter bons
 resultados bases centenas milhares espécies ii desenvolvimento protótipos dando continuidade proposta o
 reconhecimento automático plantas arbóreas problema de
 resolvido íntegra protótipo apresentado tese contém os
 passos solução pesquisa são
 necessários sugerindo numerosos protótipos consolidar uma
 ferramenta consistente definitiva treevis possa vir utilizado
 herbário digital iv adaptação extensão problemas ciência teórica e
 aplicada voltado botânica ambiente estruturas de
 paralelismo desenvolvidas protótipo treevis adaptadas estendidas
 problemas ciência teórica aplicada incluindo mineração dados engenharia biomolecular genética bibliografia
 bibliografia
 almasi gottlieb california the benjamin/cummings publishing amorin amorin barbosa fernandes uma
 introdução computação paralela distribuída escola de
 pa computação campinas unicamp andrews schneider notations concurrent processing acm computing surveys atkin bristol baber guis and cuis appropriate ranges actions and the ease use displays bal ard brown prentice-hall barlow mollom university press bem-ari programming new york prentice hall benchmark http bennett sons besag statist biswas fractal dimension estimation texture images parallel approach pattern recognition letters blasdel orientation selectivity monkey striate cortex nature bogni marrone bibliografia
 computadoras rio janeiro escola brasileiro argentina de
 informática bonhoeffer grinvald domains cat visual cortex are arranged pinwheel-like patterns nature bonner computing braham may braitenberg braitenberg geometry orientation columns the visual cortex biological
 cybernetics brawer usa academic press breton brigham prentice hall broca destructuion partielle lobe antérieure gauche cerveau bull soc anthropol pa bruce green psychology and ecology bruno costa and versatile real-time vision based distributed system of
 personal computers ieee proceedings workshop cybernetic
 vision carlos brasil bruno costa based distributed system personal computers proceedings 
 third ieee international conference engineering complex
 computer systems itália bruno costa segmentation with flexible icm-based markov random fields a
 distributed systems personal computers real-time imaging artigo
 bibliografia
 submetido aceito aguardando publicação bruno costa automatic feature selection biological shape
 classification ynergos proceedings computer graphics image processing and vision rio janeiro ieee computer society press bruno costa ynergos synergetic vision research real time journal artigo submetido aceito aguardando publicação bruno plataforma gui dissertação mestrado ifsc usp bruno calvert calvert cantoni lombardi artificial systems proceedings bioelectronic interfaces and iii workshop cybernetic vision campinas brazil cantù cantÙ mastering delphi sybex caserta hausman stanford bulderev ;
 schwarzer stanley determination fractal dimension of
 physiological characterized neurons two and three dimensions journal neuroscience methods castleman englewood cliffs cesar costa wavelets and multiscale curvature biological cybernetics cesar tese doutorado ifsc usp chappel novell press chel appa jain pa academic press bibliografia
 chu george parallel fast fourier transform algorithms crc press llc clark analysis particle shape technology codenoti leoncini paral processing new york addison-wesley coelho neurais morfologicamente realísticas tese doutorado ifsc usp consularo costa integrates matlab resources into standalone applications computers
 physics consularo ynergos and its application contour segmentation proceedings international seminar bioelectronic interfaces and iii workshop on
 cybernetic vision campinas brazil costa sandler digital bar segments with hough transform cvgip models imge
 process costa slaets parallel pipelined architectures ieee transactions signal processing costa velte classification ganglion cells from the salamander retina journal of
 comparative neurology costa inspired system visual pattern recognition proceedings ieee
 international symposium industrial electronics santiago chile costa neuromodelagem tese livre-docência ifsc usp cox approach new york addison-wesley darwin selection the preservation favored races the struggle life london bibliografia
 charles/the-origin-of-the-species/index deatz dowling neurocience the belknap press harvard university press duda hart detect lines and curves pictures comunications the acm duda hart analysis john wiley and sons inc new york dumas pa duncan computer ieee etter prentice-hall faber the paper efficiency can greater than unity paral el
 computing falconer applications john wiley sons faugeras viewpoint mit press fernades arquiteturas paralelas avançadas embalse escuela brasileño argentina informática fernades dicksoniaceae regiões sul sudeste brasil tese doutorado instituto botanica usp flynn flynn ieee trans comput foster tools paral software engineering new york addison-wesley fritsch hitzig bibliografia
 grosshirns arch anat physiol wiss med gazzaniga gehani wokingham england addison-wesley geist machine user guide and tutorial paral computing mit press geman geman distributions and the bayesian restoration images ieee transactions
 pattern analysis and machine intel igence vol gerig klein efficient hough transform and simplified interpretation strategy proc france october gimarc milutinovic risc processors and computers the gnome www goldberg machine learning addison-wesley goldstein pa publish company goldstine neumann princeton princeton university press gomes nikoukhah engineering and scientific computing with scilab springer verlag gonçalves doutorado coppe ufrj gonzalez woods processing addison-wesley gregory wesley bibliografia
 grimes guil zapata multiprocessors branch and bound approach journal paral and
 distributed computing august august hayes henry performance the intel tflops supercomputer http hockney jesshope computers philadelphia iop hodges hough international
 conference
 on
 high
 energy
 accelerators
 and
 instrumentation cern hubel wiesel ferrier lecture proc soc lond hubel columns macaque monkey visual cortex demonstrated the deoxyglucose autoradiograph technique science hubel hudak surveys hundert nurture knowledge and values harvard university press hurson oriented database management systems evolution and performance
 issues computer pa hwang paral processing new york mcgraw-hil inmos hall inmos bibliografia
 inmos inmos joly editora nacional edição julesz kaye structures from the fractal approach heterogeneous chemistry avnir editor john wiley sons ltd kaye new york vch publishers kindermann and snel fields and their applications contemporary mathematics american
 mathematical society konopka scottsdale arizona usa the coriolis group kosslyn debate the mit press kovács aplicações paulo edição acadêmica kovács neurociência computacional paulo edição acadêmica krishnamurthy and practice sydney addison-wesley kung implemention computer ieee kylix http abril leventhal guide toronto bantam book levine shefner sensation and perception brooks/cole publishing levine li verlag livingstone hubel bibliografia
 color movement and depht anatomy physiology and perception science may lorenzi plantas arbóreas nativas brasil editora plantarum machado atheneu pa mandelbrot freeman and company mandelbrot freeman and company marr representation and processing visual information new york freeman and company mattson henry tflops supercomputer http mcculloch pitts ideas immanent nervous activity bulletin mathematical biophysics mel histogramming neurally inspired approach visual object recognition neural computation morante fourier transform international journal modern physics vol moreira integration color and stereo international workshop synthetic-
 natural hybrid coding imaging santorini greece september moreira processamento cores sistemas artificiais visão tese de
 doutorado ifsc usp mullender renesse staveren amoeba distributed operating system
 the bibliografia
 naiditch nazif levine segmentation expert system ieee transactions pattern analysis
 and machine intelligence september nelson oppenheim schafer processing prentice hall pacheco kaufmann parker vision john wiley sons peddie new york mcgraw hil peitgen saupe images springer-verlag new york peixoto barbosa brasileiros flora nacional desafios século sistemas de
 informação biodiversidade/biotecnologia desenvolvimento
 pa sustentável penrose minds and the laws physics oxford university press petzold yao redmond microsoft press pfister phil ips computer poggio weinshal machine progress the integration vision modules chellapa jain markov random fields theory and application academic
 press boston poggio regularization theory nature pratt new york prentice hall bibliografia
 preece human-computer interaction addison-wesley pressman pvm paral el
 virtual
 machine
 
 home-page http qian quinn richter rol azzopardi the responses neurons the temporal cortex of
 primates and face identification and detection experimental brain
 research rosenberry understanding dce sebastopol ryan schalkoff vision john wiley and sons schmidt shapley perry ganglion cel and their visual functional roles trends neuroscience shirai smith and results cellular morphology dimensions lacunarity and
 pa multifractals journal neuroscience methods snow university press sobel stanford university spufford uglow technology time and invention london faber and faber stace bibliografia
 arnold stanley behavior stanley ostrowsky growth and form 
 fractal and non-fractal patterns physics martinus nijhoff publishers dordrecht the netherlands stuessy comparative data new york columbia university press tabak tanenbaum cliffs prentice-hall tanenbaum upper saddle river prentice-hall tanenbaum englewood cliffs prentice-hall tanenbaum englewood cliffs prentice-hall thazhuthaveetil shah hough transform algorithm performance image and vision computing volume 1991 number theimer mallot vergence control and depth reconstruction using active vision cvgip image understanding november tovée university press tricot tsai machine vision metrology using off-the-shelf and lenses ieee journal
 robotics and automation august unger proceedings inst radio engineering usa voorhees poggio boundaries from images nature wilder bibliografia
 wil iams course addison-wesley pa zeki shipp connections nature zeki zuffo microprocessadores paulo edit edgard blücher